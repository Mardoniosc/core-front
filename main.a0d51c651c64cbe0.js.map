{"version":3,"file":"main.a0d51c651c64cbe0.js","mappings":"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","names":["FuseAnimationCurves","FuseAnimationDurations","fuseAnimations","expandCollapse","trigger","state","style","height","transition","animate","params","timings","fadeIn","opacity","fadeInTop","transform","fadeInBottom","fadeInLeft","fadeInRight","fadeOut","fadeOutTop","fadeOutBottom","fadeOutLeft","fadeOutRight","shake","keyframes","offset","slideInTop","slideInBottom","slideInLeft","slideInRight","slideOutTop","slideOutBottom","slideOutLeft","slideOutRight","zoomIn","zoomOut","i0","FuseConfirmationDialogComponent","constructor","data","MAT_DIALOG_DATA","selectors","FuseConfirmationService","_matDialog","this","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","open","config","userConfig","merge","_defaultConfig","autoFocus","disableClose","panelClass","factory","FuseUtilsService","exactMatchOptions","paths","fragment","matrixParams","queryParams","subsetMatchOptions","randomId","length","chars","i","charAt","Math","floor","random","AuthService","_httpClient","accessToken","token","localStorage","setItem","ELocalStorage","getItem","forgotPassword","email","post","environment","resetPassword","password","signIn","credentials","_authenticated","throwError","Error","login","concat","observe","pipe","switchMap","response","headers","get","split","of","refreshToken","map","res","signOut","removeItem","unlockSession","check","AuthUtils","static","offsetSeconds","date","_getTokenExpirationDate","valueOf","Date","exp","decodeToken","str","output","String","replace","bs","buffer","bc","idx","fromCharCode","indexOf","decodeURIComponent","Array","prototype","call","_b64decode","c","charCodeAt","toString","slice","join","_b64DecodeUnicode","parts","decoded","_urlBase64Decode","JSON","parse","decodedToken","hasOwnProperty","setUTCSeconds","UserService","ReplaySubject","user","value","_user","next","user$","asObservable","userAvatarUrl$","_userAvatarUrl","userId","ROLES","tap","Object","find","permissao","SharedModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MatDialogModule","MatIconModule","MatButtonModule","MatTableModule","MatInputModule","MatFormFieldModule","MatPaginatorModule","production","nomeSistema","api","version","FuseConfirmationModule","_fuseConfirmationService","imports","FuseLoadingService","BehaviorSubject","Map","auto$","_auto$","mode$","_mode$","progress$","_progress$","show$","_show$","hide","setAutoMode","setMode","setProgress","console","error","_setLoadingStatus","status","url","_urlMap","set","has","delete","size","FuseLoadingInterceptor","_fuseLoadingService","subscribe","handleRequestsAutomatically","intercept","req","handle","finalize","FuseLoadingModule","provide","HTTP_INTERCEPTORS","useClass","multi","FUSE_APP_CONFIG","InjectionToken","FuseConfigService","_config","getValue","config$","reset","FuseConfigModule","_fuseConfigService","ngModule","providers","useValue","FuseMediaWatcherService","_breakpointObserver","fromPairs","entries","screens","alias","screen","values","matchingAliases","matchingQueries","matchingBreakpoints","breakpoints","filter","query","matches","matchingAlias","q","push","_onMediaChange","onMediaChange$","onMediaQueryChange$","FuseMediaWatcherModule","_fuseMediaWatcherService","FusePlatformService","_platform","isBrowser","navigator","userAgent","includes","osName","IOS","ANDROID","FusePlatformModule","_fusePlatformService","FuseSplashScreenService","_document","_router","events","event","NavigationEnd","take","body","classList","remove","add","DOCUMENT","FuseSplashScreenModule","_fuseSplashScreenService","FuseUtilsModule","_fuseUtilsService","FuseModule","parentModule","MATERIAL_SANITY_CHECKS","doctype","theme","MAT_FORM_FIELD_DEFAULT_OPTIONS","appearance","AuthInterceptor","_authService","request","_executando","interval","val","now","navigate","addToken","handleRefreshToken","content","clone","setHeaders","Authorization","isRefreshing","refreshTokenSubject","newToken","AuthModule","HttpClientModule","IconsModule","_domSanitizer","_matIconRegistry","addSvgIconSet","bypassSecurityTrustResourceUrl","addSvgIconSetInNamespace","CoreModule","FuseLoadingBarModule","MatProgressBarModule","EmptyLayoutModule","FuseFullscreenModule","MatTooltipModule","FuseNavigationService","registerComponent","component","_componentRegistry","deregisterComponent","getComponent","storeNavigation","key","navigation","_navigationStore","getNavigation","deleteNavigation","warn","getFlatNavigation","flatNavigation","item","type","children","id","childItem","getItemParent","parent","FuseHorizontalNavigationComponent","_changeDetectorRef","_fuseNavigationService","Subject","ngOnChanges","changes","markForCheck","ngOnInit","ngOnDestroy","_unsubscribeAll","complete","refresh","onRefreshed","trackByFn","index","changeDetection","ScrollbarGeometry","x","y","w","h","ScrollbarPosition","FuseScrollbarDirective","_elementRef","elementRef","ps","_ps","fuseScrollbar","coerceBooleanProperty","currentValue","_init","_destroy","_options","fuseScrollbarOptions","setTimeout","fromEvent","window","takeUntil","debounceTime","update","isEnabled","destroy","geometry","prefix","nativeElement","position","absolute","scrollbarPosition","reach","scrollLeft","scrollTop","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToBottom","scrollHeight","clientHeight","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToElement","qs","ignoreVisible","element","querySelector","elementPos","getBoundingClientRect","scrollerPos","contains","right","abs","left","bottom","top","target","_animation","cancelAnimationFrame","newValue","scrollCount","oldTimestamp","performance","oldValue","cosParameter","step","newTimestamp","PI","round","cos","requestAnimationFrame","PerfectScrollbar","FuseVerticalNavigationComponent","_animationBuilder","_renderer2","_scrollStrategyOptions","EventEmitter","block","_handleAsideOverlayClick","closeAside","_handleOverlayClick","close","_animationsEnabled","_hovered","inner","mode","opened","styleList","visibility","fuseScrollbarDirectives","_fuseScrollbarDirectives","_fuseScrollbarDirectivesSubscription","unsubscribe","onCollapsableItemCollapsed","onCollapsableItemExpanded","delay","forEach","fuseScrollbarDirective","_onMouseenter","_enableAnimations","_onMouseleave","appearanceChanged","currentMode","previousMode","previousValue","_disableAnimations","_hideOverlay","_showOverlay","modeChanged","_toggleOpened","positionChanged","transparentOverlay","activeAsideItemId","ngAfterViewInit","_navigationContentEl","activeItem","scrollIntoView","toggle","openAside","disabled","_showAsideOverlay","_hideAsideOverlay","toggleAside","_asideOverlay","_overlay","createElement","appendChild","parentElement","_scrollStrategy","enable","_player","build","create","play","addEventListener","onDone","removeEventListener","parentNode","removeChild","disable","openedChanged","ctx","FuseScrollbarModule","FuseHorizontalNavigationBasicItemComponent","isActiveMatchOptions","exactMatch","_fuseHorizontalNavigationComponent","FuseHorizontalNavigationDividerItemComponent","FuseHorizontalNavigationBranchItemComponent","triggerChangeDetection","i7","FuseHorizontalNavigationSpacerItemComponent","FuseVerticalNavigationBasicItemComponent","_fuseVerticalNavigationComponent","FuseVerticalNavigationDividerItemComponent","FuseVerticalNavigationGroupItemComponent","FuseVerticalNavigationSpacerItemComponent","FuseVerticalNavigationCollapsableItemComponent","isCollapsed","isExpanded","_hasActiveChild","expand","autoCollapse","collapse","collapsedItem","_isChildrenOf","expandedItem","urlAfterRedirects","toggleCollapsable","currentUrl","child","link","isActive","FuseVerticalNavigationAsideItemComponent","_markIfActive","active","activeItemId","FuseNavigationModule","MatDividerModule","MatMenuModule","NotificationsModule","OverlayModule","PortalModule","SearchModule","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","useFactory","overlay","scrollStrategies","deps","Overlay","MatAutocompleteModule","ShortcutsModule","MatSlideToggleModule","UserModule","EnterpriseLayoutModule","ModernLayoutModule","ClassicLayoutModule","CompactLayoutModule","DenseLayoutModule","FuseDrawerModule","SettingsModule","layoutModules","LayoutModule","AppComponent","AuthGuard","canActivate","route","_check","canActivateChild","childRoute","canLoad","segments","redirectURL","authenticated","NoAuthGuard","FUSE_VERSION","Version","full","major","minor","patch","FuseDrawerService","FuseDrawerComponent","_fuseDrawerService","fixed","fixedChanged","finish","SettingsService","_openedSubject","_opened","opened$","openSettingsDrawer","closeSettingsDrawer","toggleSettingsDrawer","SettingsComponent","_settingsService","settingsDrawer","setLayout","layout","queryParamsHandling","then","setScheme","scheme","setTheme","FuseLoadingBarComponent","autoMode","progress","EmptyLayoutComponent","menuNavigation","adminNavigation","compactNavigation","NavigationService","_navigation","admin","default","compact","navigation$","FuseFullscreenComponent","_fsDoc","_fsDocEl","document","documentElement","toggleFullscreen","_isFullscreen","_getBrowserFullscreenElement","_closeFullscreen","_openFullscreen","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","UserComponent","_userService","userFotoUrl","EnterpriseLayoutComponent","_activatedRoute","_navigationService","currentYear","getFullYear","env","isScreenSmall","toggleNavigation","ModernLayoutComponent","ClassicLayoutComponent","CompactLayoutComponent","DenseLayoutComponent","navigationAppearance","toggleNavigationAppearance","LayoutComponent","combineLatest","mql","options","_updateScheme","_updateTheme","stringify","_updateLayout","setAttribute","addClass","firstChild","layoutFromQueryParam","snapshot","queryParamMap","pathFromRoot","path","routeConfig","className","startsWith","InitialDataResolver","resolve","forkJoin","appRoutes","pathMatch","redirectTo","loadChildren","Promise","m","AuthSignInModule","__webpack_require__","AuthSignOutModule","AuthUnlockSessionModule","initialData","HomeModule","PerfilModule","PermissaoModule","UsuarioModule","AdminModule","routerConfig","preloadingStrategy","PreloadAllModules","scrollPositionRestoration","CONFIG_LOCAL","sm","md","lg","xl","themes","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","MarkdownModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","sources":["./src/@fuse/animations/defaults.ts","./src/@fuse/animations/expand-collapse.ts","./src/@fuse/animations/public-api.ts","./src/@fuse/animations/fade.ts","./src/@fuse/animations/shake.ts","./src/@fuse/animations/slide.ts","./src/@fuse/animations/zoom.ts","./src/@fuse/services/confirmation/dialog/dialog.component.html","./src/@fuse/services/confirmation/dialog/dialog.component.ts","./src/@fuse/services/confirmation/confirmation.service.ts","./src/@fuse/services/utils/utils.service.ts","./src/app/core/auth/auth.service.ts","./src/app/core/auth/auth.utils.ts","./src/app/core/user/user.service.ts","./src/app/shared/models/localstorage.model.ts","./src/app/shared/shared.module.ts","./src/environments/environment.prod.ts","./src/@fuse/services/confirmation/confirmation.module.ts","./src/@fuse/services/loading/loading.service.ts","./src/@fuse/services/loading/loading.interceptor.ts","./src/@fuse/services/loading/loading.module.ts","./src/@fuse/services/config/config.constants.ts","./src/@fuse/services/config/config.service.ts","./src/@fuse/services/config/config.module.ts","./src/@fuse/services/media-watcher/media-watcher.service.ts","./src/@fuse/services/media-watcher/media-watcher.module.ts","./src/@fuse/services/platform/platform.service.ts","./src/@fuse/services/platform/platform.module.ts","./src/@fuse/services/splash-screen/splash-screen.service.ts","./src/@fuse/services/splash-screen/splash-screen.module.ts","./src/@fuse/services/utils/utils.module.ts","./src/@fuse/fuse.module.ts","./src/app/core/auth/auth.interceptor.ts","./src/app/core/auth/auth.module.ts","./src/app/core/icons/icons.module.ts","./src/app/core/core.module.ts","./src/@fuse/components/loading-bar/loading-bar.module.ts","./src/app/layout/layouts/empty/empty.module.ts","./src/@fuse/components/fullscreen/fullscreen.module.ts","./src/@fuse/components/navigation/navigation.service.ts","./src/@fuse/components/navigation/horizontal/horizontal.component.html","./src/@fuse/components/navigation/horizontal/horizontal.component.ts","./src/@fuse/directives/scrollbar/scrollbar.types.ts","./src/@fuse/directives/scrollbar/scrollbar.directive.ts","./src/@fuse/components/navigation/vertical/vertical.component.html","./src/@fuse/components/navigation/vertical/vertical.component.ts","./src/@fuse/directives/scrollbar/scrollbar.module.ts","./src/@fuse/components/navigation/horizontal/components/basic/basic.component.html","./src/@fuse/components/navigation/horizontal/components/basic/basic.component.ts","./src/@fuse/components/navigation/horizontal/components/divider/divider.component.ts","./src/@fuse/components/navigation/horizontal/components/divider/divider.component.html","./src/@fuse/components/navigation/horizontal/components/branch/branch.component.html","./src/@fuse/components/navigation/horizontal/components/branch/branch.component.ts","./src/@fuse/components/navigation/horizontal/components/spacer/spacer.component.ts","./src/@fuse/components/navigation/horizontal/components/spacer/spacer.component.html","./src/@fuse/components/navigation/vertical/components/basic/basic.component.html","./src/@fuse/components/navigation/vertical/components/basic/basic.component.ts","./src/@fuse/components/navigation/vertical/components/divider/divider.component.ts","./src/@fuse/components/navigation/vertical/components/divider/divider.component.html","./src/@fuse/components/navigation/vertical/components/group/group.component.html","./src/@fuse/components/navigation/vertical/components/group/group.component.ts","./src/@fuse/components/navigation/vertical/components/spacer/spacer.component.ts","./src/@fuse/components/navigation/vertical/components/spacer/spacer.component.html","./src/@fuse/components/navigation/vertical/components/collapsable/collapsable.component.html","./src/@fuse/components/navigation/vertical/components/collapsable/collapsable.component.ts","./src/@fuse/components/navigation/vertical/components/aside/aside.component.html","./src/@fuse/components/navigation/vertical/components/aside/aside.component.ts","./src/@fuse/components/navigation/navigation.module.ts","./src/app/layout/common/notifications/notifications.module.ts","./src/app/layout/common/search/search.module.ts","./src/app/layout/common/shortcuts/shortcuts.module.ts","./src/app/layout/common/user/user.module.ts","./src/app/layout/layouts/horizontal/enterprise/enterprise.module.ts","./src/app/layout/layouts/horizontal/modern/modern.module.ts","./src/app/layout/layouts/vertical/classic/classic.module.ts","./src/app/layout/layouts/vertical/compact/compact.module.ts","./src/app/layout/layouts/vertical/dense/dense.module.ts","./src/@fuse/components/drawer/drawer.module.ts","./src/app/layout/common/settings/settings.module.ts","./src/app/layout/layout.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/auth/guards/auth.guard.ts","./src/app/core/auth/guards/noAuth.guard.ts","./src/@fuse/version/fuse-version.ts","./src/@fuse/version/version.ts","./src/@fuse/components/drawer/drawer.service.ts","./src/@fuse/components/drawer/drawer.component.ts","./src/@fuse/components/drawer/drawer.component.html","./src/app/layout/common/settings/settings.service.ts","./src/app/layout/common/settings/settings.component.html","./src/app/layout/common/settings/settings.component.ts","./src/@fuse/components/loading-bar/loading-bar.component.html","./src/@fuse/components/loading-bar/loading-bar.component.ts","./src/app/layout/layouts/empty/empty.component.html","./src/app/layout/layouts/empty/empty.component.ts","./src/app/core/navigation/navigation-data.ts","./src/app/core/navigation/navigation.service.ts","./src/@fuse/components/fullscreen/fullscreen.component.html","./src/@fuse/components/fullscreen/fullscreen.component.ts","./src/app/layout/common/user/user.component.html","./src/app/layout/common/user/user.component.ts","./src/app/layout/layouts/horizontal/enterprise/enterprise.component.html","./src/app/layout/layouts/horizontal/enterprise/enterprise.component.ts","./src/app/layout/layouts/horizontal/modern/modern.component.html","./src/app/layout/layouts/horizontal/modern/modern.component.ts","./src/app/layout/layouts/vertical/classic/classic.component.html","./src/app/layout/layouts/vertical/classic/classic.component.ts","./src/app/layout/layouts/vertical/compact/compact.component.html","./src/app/layout/layouts/vertical/compact/compact.component.ts","./src/app/layout/layouts/vertical/dense/dense.component.html","./src/app/layout/layouts/vertical/dense/dense.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.component.ts","./src/app/app.resolvers.ts","./src/app/app.routing.ts","./src/app/app.module.ts","./src/app/core/config/app.config.ts","./src/main.ts"],"sourcesContent":["export class FuseAnimationCurves\n{\n    static standard = 'cubic-bezier(0.4, 0.0, 0.2, 1)';\n    static deceleration = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\n    static acceleration = 'cubic-bezier(0.4, 0.0, 1, 1)';\n    static sharp = 'cubic-bezier(0.4, 0.0, 0.6, 1)';\n}\n\nexport class FuseAnimationDurations\n{\n    static complex = '375ms';\n    static entering = '225ms';\n    static exiting = '195ms';\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Expand / collapse\n// -----------------------------------------------------------------------------------------------------\nconst expandCollapse = trigger('expandCollapse',\n    [\n        state('void, collapsed',\n            style({\n                height: '0'\n            })\n        ),\n\n        state('*, expanded',\n            style('*')\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void <=> false, collapsed <=> false, expanded <=> false', []),\n\n        // Transition\n        transition('void <=> *, collapsed <=> expanded',\n            animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\nexport { expandCollapse };\n","import { expandCollapse } from '@fuse/animations/expand-collapse';\nimport { fadeIn, fadeInBottom, fadeInLeft, fadeInRight, fadeInTop, fadeOut, fadeOutBottom, fadeOutLeft, fadeOutRight, fadeOutTop } from '@fuse/animations/fade';\nimport { shake } from '@fuse/animations/shake';\nimport { slideInBottom, slideInLeft, slideInRight, slideInTop, slideOutBottom, slideOutLeft, slideOutRight, slideOutTop } from '@fuse/animations/slide';\nimport { zoomIn, zoomOut } from '@fuse/animations/zoom';\n\nexport const fuseAnimations = [\n    expandCollapse,\n    fadeIn, fadeInTop, fadeInBottom, fadeInLeft, fadeInRight,\n    fadeOut, fadeOutTop, fadeOutBottom, fadeOutLeft, fadeOutRight,\n    shake,\n    slideInTop, slideInBottom, slideInLeft, slideInRight,\n    slideOutTop, slideOutBottom, slideOutLeft, slideOutRight,\n    zoomIn, zoomOut\n];\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in\n// -----------------------------------------------------------------------------------------------------\nconst fadeIn = trigger('fadeIn',\n    [\n        state('void',\n            style({\n                opacity: 0\n            })\n        ),\n\n        state('*',\n            style({\n                opacity: 1\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in top\n// -----------------------------------------------------------------------------------------------------\nconst fadeInTop = trigger('fadeInTop',\n    [\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(0, -100%, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in bottom\n// -----------------------------------------------------------------------------------------------------\nconst fadeInBottom = trigger('fadeInBottom',\n    [\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(0, 100%, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in left\n// -----------------------------------------------------------------------------------------------------\nconst fadeInLeft = trigger('fadeInLeft',\n    [\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(-100%, 0, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade in right\n// -----------------------------------------------------------------------------------------------------\nconst fadeInRight = trigger('fadeInRight',\n    [\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(100%, 0, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out\n// -----------------------------------------------------------------------------------------------------\nconst fadeOut = trigger('fadeOut',\n    [\n        state('*',\n            style({\n                opacity: 1\n            })\n        ),\n\n        state('void',\n            style({\n                opacity: 0\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out top\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutTop = trigger('fadeOutTop',\n    [\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(0, -100%, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out bottom\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutBottom = trigger('fadeOutBottom',\n    [\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(0, 100%, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out left\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutLeft = trigger('fadeOutLeft',\n    [\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(-100%, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Fade out right\n// -----------------------------------------------------------------------------------------------------\nconst fadeOutRight = trigger('fadeOutRight',\n    [\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'translate3d(100%, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\nexport { fadeIn, fadeInTop, fadeInBottom, fadeInLeft, fadeInRight, fadeOut, fadeOutTop, fadeOutBottom, fadeOutLeft, fadeOutRight };\n","import { animate, keyframes, style, transition, trigger } from '@angular/animations';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Shake\n// -----------------------------------------------------------------------------------------------------\nconst shake = trigger('shake',\n    [\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *, * => true',\n            [\n                animate('{{timings}}',\n                    keyframes([\n                        style({\n                            transform: 'translate3d(0, 0, 0)',\n                            offset   : 0\n                        }),\n                        style({\n                            transform: 'translate3d(-10px, 0, 0)',\n                            offset   : 0.1\n                        }),\n                        style({\n                            transform: 'translate3d(10px, 0, 0)',\n                            offset   : 0.2\n                        }),\n                        style({\n                            transform: 'translate3d(-10px, 0, 0)',\n                            offset   : 0.3\n                        }),\n                        style({\n                            transform: 'translate3d(10px, 0, 0)',\n                            offset   : 0.4\n                        }),\n                        style({\n                            transform: 'translate3d(-10px, 0, 0)',\n                            offset   : 0.5\n                        }),\n                        style({\n                            transform: 'translate3d(10px, 0, 0)',\n                            offset   : 0.6\n                        }),\n                        style({\n                            transform: 'translate3d(-10px, 0, 0)',\n                            offset   : 0.7\n                        }),\n                        style({\n                            transform: 'translate3d(10px, 0, 0)',\n                            offset   : 0.8\n                        }),\n                        style({\n                            transform: 'translate3d(-10px, 0, 0)',\n                            offset   : 0.9\n                        }),\n                        style({\n                            transform: 'translate3d(0, 0, 0)',\n                            offset   : 1\n                        })\n                    ])\n                )\n            ],\n            {\n                params: {\n                    timings: '0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955)'\n                }\n            }\n        )\n    ]\n);\n\nexport { shake };\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in top\n// -----------------------------------------------------------------------------------------------------\nconst slideInTop = trigger('slideInTop',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(0, -100%, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideInBottom = trigger('slideInBottom',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(0, 100%, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in left\n// -----------------------------------------------------------------------------------------------------\nconst slideInLeft = trigger('slideInLeft',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(-100%, 0, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in right\n// -----------------------------------------------------------------------------------------------------\nconst slideInRight = trigger('slideInRight',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(100%, 0, 0)'\n            })\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out top\n// -----------------------------------------------------------------------------------------------------\nconst slideOutTop = trigger('slideOutTop',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(0, -100%, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideOutBottom = trigger('slideOutBottom',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(0, 100%, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out left\n// -----------------------------------------------------------------------------------------------------\nconst slideOutLeft = trigger('slideOutLeft',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(-100%, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out right\n// -----------------------------------------------------------------------------------------------------\nconst slideOutRight = trigger('slideOutRight',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)'\n            })\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(100%, 0, 0)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\nexport { slideInTop, slideInBottom, slideInLeft, slideInRight, slideOutTop, slideOutBottom, slideOutLeft, slideOutRight };\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Zoom in\n// -----------------------------------------------------------------------------------------------------\nconst zoomIn = trigger('zoomIn',\n    [\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'scale(0.5)'\n            })\n        ),\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'scale(1)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n                }\n            }\n        )\n    ]\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Zoom out\n// -----------------------------------------------------------------------------------------------------\nconst zoomOut = trigger('zoomOut',\n    [\n\n        state('*',\n            style({\n                opacity  : 1,\n                transform: 'scale(1)'\n            })\n        ),\n\n        state('void',\n            style({\n                opacity  : 0,\n                transform: 'scale(0.5)'\n            })\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n                }\n            }\n        )\n    ]\n);\n\nexport { zoomIn, zoomOut };\n\n","<div class=\"relative flex flex-col w-full h-full\">\n\n    <!-- Dismiss button -->\n    <ng-container *ngIf=\"data.dismissible\">\n        <div class=\"absolute top-0 right-0 pt-4 pr-4\">\n            <button\n                mat-icon-button\n                [matDialogClose]=\"undefined\">\n                <mat-icon\n                    class=\"text-secondary\"\n                    [svgIcon]=\"'heroicons_outline:x'\"></mat-icon>\n            </button>\n        </div>\n    </ng-container>\n\n    <!-- Content -->\n    <div class=\"flex flex-col sm:flex-row flex-auto items-center sm:items-start p-8 pb-6 sm:pb-8\">\n\n        <!-- Icon -->\n        <ng-container *ngIf=\"data.icon.show\">\n            <div\n                class=\"flex flex-0 items-center justify-center w-10 h-10 sm:mr-4 rounded-full\"\n                [ngClass]=\"{'text-primary-600 bg-primary-100 dark:text-primary-50 dark:bg-primary-600': data.icon.color === 'primary',\n                            'text-accent-600 bg-accent-100 dark:text-accent-50 dark:bg-accent-600': data.icon.color === 'accent',\n                            'text-warn-600 bg-warn-100 dark:text-warn-50 dark:bg-warn-600': data.icon.color === 'warn',\n                            'text-gray-600 bg-gray-100 dark:text-gray-50 dark:bg-gray-600': data.icon.color === 'basic',\n                            'text-blue-600 bg-blue-100 dark:text-blue-50 dark:bg-blue-600': data.icon.color === 'info',\n                            'text-green-500 bg-green-100 dark:text-green-50 dark:bg-green-500': data.icon.color === 'success',\n                            'text-amber-500 bg-amber-100 dark:text-amber-50 dark:bg-amber-500': data.icon.color === 'warning',\n                            'text-red-600 bg-red-100 dark:text-red-50 dark:bg-red-600': data.icon.color === 'error'\n                            }\">\n                <mat-icon\n                    class=\"text-current\"\n                    [svgIcon]=\"data.icon.name\"></mat-icon>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.title || data.message\">\n            <div class=\"flex flex-col items-center sm:items-start mt-4 sm:mt-0 sm:pr-8 space-y-1 text-center sm:text-left\">\n\n                <!-- Title -->\n                <ng-container *ngIf=\"data.title\">\n                    <div\n                        class=\"text-xl leading-6 font-medium\"\n                        [innerHTML]=\"data.title\"></div>\n                </ng-container>\n\n                <!-- Message -->\n                <ng-container *ngIf=\"data.message\">\n                    <div\n                        class=\"text-secondary\"\n                        [innerHTML]=\"data.message\"></div>\n                </ng-container>\n            </div>\n        </ng-container>\n\n    </div>\n\n    <!-- Actions -->\n    <ng-container *ngIf=\"data.actions.confirm.show || data.actions.cancel.show\">\n        <div class=\"flex items-center justify-center sm:justify-end px-6 py-4 space-x-3 bg-gray-50 dark:bg-black dark:bg-opacity-10\">\n\n            <!-- Cancel -->\n            <ng-container *ngIf=\"data.actions.cancel.show\">\n                <button\n                    mat-stroked-button\n                    [matDialogClose]=\"'cancelled'\">\n                    {{data.actions.cancel.label}}\n                </button>\n            </ng-container>\n\n            <!-- Confirm -->\n            <ng-container *ngIf=\"data.actions.confirm.show\">\n                <button\n                    mat-flat-button\n                    [color]=\"data.actions.confirm.color\"\n                    [matDialogClose]=\"'confirmed'\">\n                    {{data.actions.confirm.label}}\n                </button>\n            </ng-container>\n\n        </div>\n    </ng-container>\n\n</div>\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FuseConfirmationConfig } from '@fuse/services/confirmation/confirmation.types';\n\n@Component({\n    selector     : 'fuse-confirmation-dialog',\n    templateUrl  : './dialog.component.html',\n    styles       : [\n        `\n            .fuse-confirmation-dialog-panel {\n                @screen md {\n                    @apply w-128;\n                }\n\n                .mat-dialog-container {\n                    padding: 0 !important;\n                }\n            }\n        `\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FuseConfirmationDialogComponent\n{\n    /**\n     * Constructor\n     */\n    constructor(@Inject(MAT_DIALOG_DATA) public data: FuseConfirmationConfig)\n    {\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { merge } from 'lodash-es';\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\nimport { FuseConfirmationConfig } from '@fuse/services/confirmation/confirmation.types';\n\n@Injectable()\nexport class FuseConfirmationService\n{\n    private _defaultConfig: FuseConfirmationConfig = {\n        title      : 'Confirm action',\n        message    : 'Are you sure you want to confirm this action?',\n        icon       : {\n            show : true,\n            name : 'heroicons_outline:exclamation',\n            color: 'warn'\n        },\n        actions    : {\n            confirm: {\n                show : true,\n                label: 'Confirm',\n                color: 'warn'\n            },\n            cancel : {\n                show : true,\n                label: 'Cancel'\n            }\n        },\n        dismissible: false\n    };\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _matDialog: MatDialog\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    open(config: FuseConfirmationConfig = {}): MatDialogRef<FuseConfirmationDialogComponent>\n    {\n        // Merge the user config with the default config\n        const userConfig = merge({}, this._defaultConfig, config);\n\n        // Open the dialog\n        return this._matDialog.open(FuseConfirmationDialogComponent, {\n            autoFocus   : false,\n            disableClose: !userConfig.dismissible,\n            data        : userConfig,\n            panelClass  : 'fuse-confirmation-dialog-panel'\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IsActiveMatchOptions } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FuseUtilsService\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = true\".\n     */\n    get exactMatchOptions(): IsActiveMatchOptions\n    {\n        return {\n            paths       : 'exact',\n            fragment    : 'ignored',\n            matrixParams: 'ignored',\n            queryParams : 'exact'\n        };\n    }\n\n    /**\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = false\".\n     */\n    get subsetMatchOptions(): IsActiveMatchOptions\n    {\n        return {\n            paths       : 'subset',\n            fragment    : 'ignored',\n            matrixParams: 'ignored',\n            queryParams : 'subset'\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Generates a random id\n     *\n     * @param length\n     */\n    randomId(length: number = 10): string\n    {\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let name = '';\n\n        for ( let i = 0; i < 10; i++ )\n        {\n            name += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n\n        return name;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable, of, switchMap, throwError } from 'rxjs';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\nimport { environment } from 'environments/environment';\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\n\n@Injectable()\nexport class AuthService {\n  private _authenticated: boolean = false;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  set accessToken(token: string) {\n    localStorage.setItem(ELocalStorage.TOKEN, token);\n  }\n\n  get accessToken(): string {\n    return localStorage.getItem(ELocalStorage.TOKEN) ?? '';\n  }\n\n  forgotPassword(email: string): Observable<any> {\n    return this._httpClient.post(`${environment.api}/auth/forgot`, email);\n  }\n\n  resetPassword(password: string): Observable<any> {\n    return this._httpClient.post('api/auth/reset-password', password);\n  }\n\n  signIn(credentials: { login: string; senha: string }): Observable<any> {\n    if (this._authenticated) {\n      return throwError(() => new Error('Usuário já está autenticado.'));\n    }\n\n    credentials.login = credentials.login.concat('@servicosmsc.com.br');\n    return this._httpClient\n      .post(`${environment.api}/login`, credentials, {\n        observe: 'response',\n      })\n      .pipe(\n        switchMap((response: any) => {\n          const [, token] = response.headers.get('Authorization').split(' ');\n          this.accessToken = token;\n          this._authenticated = true;\n          return of(response);\n        })\n      );\n  }\n\n  // Consome o endpoint de refresh\n  refreshToken(): Observable<any> {\n    return this._httpClient\n      .post<any>(`${environment.api}/auth/refresh_token`, null, {\n        observe: 'response',\n      })\n      .pipe(\n        map((res) => {\n          // Desestrutura o token tirando a string Bearer\n          const [, token] = res.headers.get('Authorization').split(' ');\n\n          localStorage.setItem(ELocalStorage.TOKEN, token);\n\n          return token;\n        })\n      );\n  }\n\n  signOut(): Observable<any> {\n    localStorage.removeItem(ELocalStorage.TOKEN);\n    this._authenticated = false;\n    return of(true);\n  }\n\n  unlockSession(credentials: {\n    email: string;\n    password: string;\n  }): Observable<any> {\n    return this._httpClient.post('api/auth/unlock-session', credentials);\n  }\n\n  check(): Observable<boolean> {\n    if (this._authenticated) {\n      return of(true);\n    }\n\n    if (!this.accessToken) {\n      return of(false);\n    }\n\n    if (AuthUtils.isTokenExpired(this.accessToken)) {\n      return of(false);\n    }\n\n    return of(true);\n  }\n}\n","export class AuthUtils {\n  constructor() {}\n\n  static isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    // Return if there is no token\n    if (!token || token === '') {\n      return true;\n    }\n\n    // Get the expiration date\n    const date = this._getTokenExpirationDate(token);\n\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return true;\n    }\n\n    // Check if the token is expired\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  static getTokenExpiration(token): number | null {\n    const { exp }: any = this.decodeToken(token);\n    return exp || null;\n  }\n\n  private static _b64decode(str: string): string {\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\n        \"'atob' failed: The string to be decoded is not correctly encoded.\"\n      );\n    }\n\n    /* eslint-disable */\n    for (\n      // initialize result and counters\n      let bc = 0, bs: any, buffer: any, idx = 0;\n      // get next character\n      (buffer = str.charAt(idx++));\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer &&\n      ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4)\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    /* eslint-enable */\n\n    return output;\n  }\n\n  private static _b64DecodeUnicode(str: any): string {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(\n          this._b64decode(str),\n          (c: any) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n        )\n        .join('')\n    );\n  }\n\n  private static _urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += '==';\n        break;\n      }\n      case 3: {\n        output += '=';\n        break;\n      }\n      default: {\n        throw Error('Illegal base64url string!');\n      }\n    }\n    return this._b64DecodeUnicode(output);\n  }\n\n  static decodeToken(token: string): any {\n    // Return if there is no token\n    if (!token) {\n      return null;\n    }\n\n    // Split the token\n    const parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error(\n        \"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\"\n      );\n    }\n\n    // Decode the token using the Base64 decoder\n    const decoded = this._urlBase64Decode(parts[1]);\n\n    if (!decoded) {\n      throw new Error('Cannot decode the token.');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  private static _getTokenExpirationDate(token: string): Date | null {\n    // Get the decoded token\n    const decodedToken = this.decodeToken(token);\n\n    // Return if the decodedToken doesn't have an 'exp' field\n    if (!decodedToken.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    // Convert the expiration date\n    const date = new Date(0);\n    date.setUTCSeconds(decodedToken.exp);\n\n    return date;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable, ReplaySubject, tap } from 'rxjs';\nimport { User } from 'app/core/user/user.types';\nimport { environment } from 'environments/environment';\nimport { AuthUtils } from '../auth/auth.utils';\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private _user: ReplaySubject<User> = new ReplaySubject<User>(1);\n\n  private _userAvatarUrl: ReplaySubject<string> = new ReplaySubject<string>(1);\n\n  constructor(private _httpClient: HttpClient) {}\n\n  set user(value: User) {\n    // Store the value\n    this._user.next(value);\n  }\n\n  get user$(): Observable<User> {\n    return this._user.asObservable();\n  }\n\n  get userAvatarUrl$(): Observable<string> {\n    return this._userAvatarUrl.asObservable();\n  }\n\n  get(): Observable<User> {\n    const { userId, ROLES } = AuthUtils.decodeToken(\n      localStorage.getItem(ELocalStorage.TOKEN)\n    );\n\n    return this._httpClient\n      .get<User>(`${environment.api}/usuarios/${userId}`)\n      .pipe(\n        tap((user: User) => {\n          this._user.next(user);\n\n          if (\n            Object(ROLES).find(\n              (permissao) => permissao === 'HOME'\n            )\n          ) {\n          }\n        })\n      );\n  }\n}\n","export enum ELocalStorage {\n  TOKEN = '@core_base/token',\n  APP_CONFIG = '@core_base/AppConfig',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormFieldErrorComponent } from './components/form-field-error/form-field-error.component';\nimport { NotFoundDataComponent } from './components/not-found-data/not-found-data.component';\nimport { CpfPipe } from './pipes/cpf.pipe';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  exports: [\n    // Modulos\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    // Alguma material\n    MatDialogModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n\n    // Componentes\n    FormFieldErrorComponent,\n    NotFoundDataComponent,\n\n    // PIPES\n    CpfPipe,\n  ],\n  declarations: [\n    // Componentes\n    FormFieldErrorComponent,\n    NotFoundDataComponent,\n\n    // PIPES\n    CpfPipe,\n  ],\n  providers: [],\n})\nexport class SharedModule {}\n","export const environment = {\n  production: true,\n  nomeSistema: 'Core Base',\n  api: 'http://apicorebase.servicosmsc.com.br',\n  version: '1.0.0',\n};\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FuseConfirmationService } from '@fuse/services/confirmation/confirmation.service';\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        FuseConfirmationDialogComponent\n    ],\n    imports     : [\n        MatButtonModule,\n        MatDialogModule,\n        MatIconModule,\n        CommonModule\n    ],\n    providers   : [\n        FuseConfirmationService\n    ]\n})\nexport class FuseConfirmationModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fuseConfirmationService: FuseConfirmationService)\n    {\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FuseLoadingService\n{\n    private _auto$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n    private _mode$: BehaviorSubject<'determinate' | 'indeterminate'> = new BehaviorSubject<'determinate' | 'indeterminate'>('indeterminate');\n    private _progress$: BehaviorSubject<number | null> = new BehaviorSubject<number | null>(0);\n    private _show$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private _urlMap: Map<string, boolean> = new Map<string, boolean>();\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for auto mode\n     */\n    get auto$(): Observable<boolean>\n    {\n        return this._auto$.asObservable();\n    }\n\n    /**\n     * Getter for mode\n     */\n    get mode$(): Observable<'determinate' | 'indeterminate'>\n    {\n        return this._mode$.asObservable();\n    }\n\n    /**\n     * Getter for progress\n     */\n    get progress$(): Observable<number>\n    {\n        return this._progress$.asObservable();\n    }\n\n    /**\n     * Getter for show\n     */\n    get show$(): Observable<boolean>\n    {\n        return this._show$.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Show the loading bar\n     */\n    show(): void\n    {\n        this._show$.next(true);\n    }\n\n    /**\n     * Hide the loading bar\n     */\n    hide(): void\n    {\n        this._show$.next(false);\n    }\n\n    /**\n     * Set the auto mode\n     *\n     * @param value\n     */\n    setAutoMode(value: boolean): void\n    {\n        this._auto$.next(value);\n    }\n\n    /**\n     * Set the mode\n     *\n     * @param value\n     */\n    setMode(value: 'determinate' | 'indeterminate'): void\n    {\n        this._mode$.next(value);\n    }\n\n    /**\n     * Set the progress of the bar manually\n     *\n     * @param value\n     */\n    setProgress(value: number): void\n    {\n        if ( value < 0 || value > 100 )\n        {\n            console.error('Progress value must be between 0 and 100!');\n            return;\n        }\n\n        this._progress$.next(value);\n    }\n\n    /**\n     * Sets the loading status on the given url\n     *\n     * @param status\n     * @param url\n     */\n    _setLoadingStatus(status: boolean, url: string): void\n    {\n        // Return if the url was not provided\n        if ( !url )\n        {\n            console.error('The request URL must be provided!');\n            return;\n        }\n\n        if ( status === true )\n        {\n            this._urlMap.set(url, status);\n            this._show$.next(true);\n        }\n        else if ( status === false && this._urlMap.has(url) )\n        {\n            this._urlMap.delete(url);\n        }\n\n        // Only set the status to 'false' if all outgoing requests are completed\n        if ( this._urlMap.size === 0 )\n        {\n            this._show$.next(false);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { finalize, Observable } from 'rxjs';\nimport { FuseLoadingService } from '@fuse/services/loading/loading.service';\n\n@Injectable()\nexport class FuseLoadingInterceptor implements HttpInterceptor\n{\n    handleRequestsAutomatically: boolean;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _fuseLoadingService: FuseLoadingService\n    )\n    {\n        // Subscribe to the auto\n        this._fuseLoadingService.auto$\n            .subscribe((value) => {\n                this.handleRequestsAutomatically = value;\n            });\n    }\n\n    /**\n     * Intercept\n     *\n     * @param req\n     * @param next\n     */\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        // If the Auto mode is turned off, do nothing\n        if ( !this.handleRequestsAutomatically )\n        {\n            return next.handle(req);\n        }\n\n        // Set the loading status to true\n        this._fuseLoadingService._setLoadingStatus(true, req.url);\n\n        return next.handle(req).pipe(\n            finalize(() => {\n                // Set the status to false if there are any errors or the request is completed\n                this._fuseLoadingService._setLoadingStatus(false, req.url);\n            }));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FuseLoadingInterceptor } from '@fuse/services/loading/loading.interceptor';\n\n@NgModule({\n    providers: [\n        {\n            provide : HTTP_INTERCEPTORS,\n            useClass: FuseLoadingInterceptor,\n            multi   : true\n        }\n    ]\n})\nexport class FuseLoadingModule\n{\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const FUSE_APP_CONFIG = new InjectionToken<any>('FUSE_APP_CONFIG');\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { merge } from 'lodash-es';\nimport { FUSE_APP_CONFIG } from '@fuse/services/config/config.constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FuseConfigService\n{\n    private _config: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     */\n    constructor(@Inject(FUSE_APP_CONFIG) config: any)\n    {\n        // Private\n        this._config = new BehaviorSubject(config);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Setter & getter for config\n     */\n    set config(value: any)\n    {\n        // Merge the new config over to the current config\n        const config = merge({}, this._config.getValue(), value);\n\n        // Execute the observable\n        this._config.next(config);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get config$(): Observable<any>\n    {\n        return this._config.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Resets the config to the default\n     */\n    reset(): void\n    {\n        // Set the config\n        this._config.next(this.config);\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FuseConfigService } from '@fuse/services/config/config.service';\nimport { FUSE_APP_CONFIG } from '@fuse/services/config/config.constants';\n\n@NgModule()\nexport class FuseConfigModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fuseConfigService: FuseConfigService)\n    {\n    }\n\n    /**\n     * forRoot method for setting user configuration\n     *\n     * @param config\n     */\n    static forRoot(config: any): ModuleWithProviders<FuseConfigModule>\n    {\n        return {\n            ngModule : FuseConfigModule,\n            providers: [\n                {\n                    provide : FUSE_APP_CONFIG,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { map, Observable, ReplaySubject, switchMap } from 'rxjs';\nimport { fromPairs } from 'lodash-es';\nimport { FuseConfigService } from '@fuse/services/config';\n\n@Injectable()\nexport class FuseMediaWatcherService\n{\n    private _onMediaChange: ReplaySubject<{ matchingAliases: string[]; matchingQueries: any }> = new ReplaySubject<{ matchingAliases: string[]; matchingQueries: any }>(1);\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _breakpointObserver: BreakpointObserver,\n        private _fuseConfigService: FuseConfigService\n    )\n    {\n        this._fuseConfigService.config$.pipe(\n            map(config => fromPairs(Object.entries(config.screens).map(([alias, screen]) => ([alias, `(min-width: ${screen})`])))),\n            switchMap(screens => this._breakpointObserver.observe(Object.values(screens)).pipe(\n                map((state) => {\n\n                    // Prepare the observable values and set their defaults\n                    const matchingAliases: string[] = [];\n                    const matchingQueries: any = {};\n\n                    // Get the matching breakpoints and use them to fill the subject\n                    const matchingBreakpoints = Object.entries(state.breakpoints).filter(([query, matches]) => matches) ?? [];\n                    for ( const [query] of matchingBreakpoints )\n                    {\n                        // Find the alias of the matching query\n                        const matchingAlias = Object.entries(screens).find(([alias, q]) => q === query)[0];\n\n                        // Add the matching query to the observable values\n                        if ( matchingAlias )\n                        {\n                            matchingAliases.push(matchingAlias);\n                            matchingQueries[matchingAlias] = query;\n                        }\n                    }\n\n                    // Execute the observable\n                    this._onMediaChange.next({\n                        matchingAliases,\n                        matchingQueries\n                    });\n                })\n            ))\n        ).subscribe();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for _onMediaChange\n     */\n    get onMediaChange$(): Observable<{ matchingAliases: string[]; matchingQueries: any }>\n    {\n        return this._onMediaChange.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On media query change\n     *\n     * @param query\n     */\n    onMediaQueryChange$(query: string | string[]): Observable<BreakpointState>\n    {\n        return this._breakpointObserver.observe(query);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher/media-watcher.service';\n\n@NgModule({\n    providers: [\n        FuseMediaWatcherService\n    ]\n})\nexport class FuseMediaWatcherModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fuseMediaWatcherService: FuseMediaWatcherService)\n    {\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FusePlatformService\n{\n    osName = 'os-unknown';\n\n    /**\n     * Constructor\n     */\n    constructor(private _platform: Platform)\n    {\n        // If the platform is not a browser, return immediately\n        if ( !this._platform.isBrowser )\n        {\n            return;\n        }\n\n        // Windows\n        if ( navigator.userAgent.includes('Win') )\n        {\n            this.osName = 'os-windows';\n        }\n\n        // Mac OS\n        if ( navigator.userAgent.includes('Mac') )\n        {\n            this.osName = 'os-mac';\n        }\n\n        // Unix\n        if ( navigator.userAgent.includes('X11') )\n        {\n            this.osName = 'os-unix';\n        }\n\n        // Linux\n        if ( navigator.userAgent.includes('Linux') )\n        {\n            this.osName = 'os-linux';\n        }\n\n        // iOS\n        if ( this._platform.IOS )\n        {\n            this.osName = 'os-ios';\n        }\n\n        // Android\n        if ( this._platform.ANDROID )\n        {\n            this.osName = 'os-android';\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FusePlatformService } from '@fuse/services/platform/platform.service';\n\n@NgModule({\n    providers: [\n        FusePlatformService\n    ]\n})\nexport class FusePlatformModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fusePlatformService: FusePlatformService)\n    {\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, take } from 'rxjs';\n\n@Injectable()\nexport class FuseSplashScreenService\n{\n    /**\n     * Constructor\n     */\n    constructor(\n        @Inject(DOCUMENT) private _document: any,\n        private _router: Router\n    )\n    {\n        // Hide it on the first NavigationEnd event\n        this._router.events\n            .pipe(\n                filter(event => event instanceof NavigationEnd),\n                take(1)\n            )\n            .subscribe(() => {\n                this.hide();\n            });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Show the splash screen\n     */\n    show(): void\n    {\n        this._document.body.classList.remove('fuse-splash-screen-hidden');\n    }\n\n    /**\n     * Hide the splash screen\n     */\n    hide(): void\n    {\n        this._document.body.classList.add('fuse-splash-screen-hidden');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FuseSplashScreenService } from '@fuse/services/splash-screen/splash-screen.service';\n\n@NgModule({\n    providers: [\n        FuseSplashScreenService\n    ]\n})\nexport class FuseSplashScreenModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fuseSplashScreenService: FuseSplashScreenService)\n    {\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\n\n@NgModule({\n    providers: [\n        FuseUtilsService\n    ]\n})\nexport class FuseUtilsModule\n{\n    /**\n     * Constructor\n     */\n    constructor(private _fuseUtilsService: FuseUtilsService)\n    {\n    }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MATERIAL_SANITY_CHECKS } from '@angular/material/core';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { FuseConfirmationModule } from '@fuse/services/confirmation';\nimport { FuseLoadingModule } from '@fuse/services/loading';\nimport { FuseMediaWatcherModule } from '@fuse/services/media-watcher/media-watcher.module';\nimport { FusePlatformModule } from '@fuse/services/platform/platform.module';\nimport { FuseSplashScreenModule } from '@fuse/services/splash-screen/splash-screen.module';\nimport { FuseUtilsModule } from '@fuse/services/utils/utils.module';\n\n@NgModule({\n    imports  : [\n        FuseConfirmationModule,\n        FuseLoadingModule,\n        FuseMediaWatcherModule,\n        FusePlatformModule,\n        FuseSplashScreenModule,\n        FuseUtilsModule\n    ],\n    providers: [\n        {\n            // Disable 'theme' sanity check\n            provide : MATERIAL_SANITY_CHECKS,\n            useValue: {\n                doctype: true,\n                theme  : false,\n                version: true\n            }\n        },\n        {\n            // Use the 'fill' appearance on Angular Material form fields by default\n            provide : MAT_FORM_FIELD_DEFAULT_OPTIONS,\n            useValue: {\n                appearance: 'fill'\n            }\n        }\n    ]\n})\nexport class FuseModule\n{\n    /**\n     * Constructor\n     */\n    constructor(@Optional() @SkipSelf() parentModule?: FuseModule)\n    {\n        if ( parentModule )\n        {\n            throw new Error('FuseModule has already been loaded. Import this module in the AppModule only!');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  // Flag \"semáforo\" para verificar se o token está em processo de refresh\n  private isRefreshing = false;\n\n  private _executando = false;\n\n  // Utilizado para salvar o token \"refreshado\" de imediato e emitir\n  // para as requisições que estavam no aguardo do refresh de token\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\n    null\n  );\n\n  constructor(private _authService: AuthService, private _router: Router) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    // CÓDIGO QUE REDIRECIONA SISTEMA PARA TELA DE LOGIN 1 SEGUNDO APÓS EXPIRAR TOKEN\n    if (!this._executando && this._authService.accessToken) {\n      this._executando = true;\n\n      const source = interval(1000);\n\n      source.subscribe((val) => {\n        if(this._authService.accessToken) {\n          const now = Math.floor(Date.now() / 1000); // Pega o timestamp referente ao momento agora\n          if((AuthUtils.getTokenExpiration(this._authService.accessToken) - now) / 60 <= 0) {\n            this._authService.signOut().subscribe(() => {\n              this._router.navigate(['/sign-in']);\n            });\n          }\n        }\n      });\n    }\n\n    // Para prosseguir rotas que já foram informadas o authorization\n    if (request.headers.get('authorization')) {\n      return next.handle(request);\n    }\n\n    // Para prosseguir rotas que não devem ter token\n    if (request.headers.get('NoToken')) {\n      request.headers.delete('NoToken');\n      return next.handle(request);\n    }\n\n    const token = this._authService.accessToken;\n    if (token && !AuthUtils.isTokenExpired(token)) {\n      const exp = AuthUtils.getTokenExpiration(token) - 300;\n      const now = Math.floor(Date.now() / 1000); // Pega o timestamp referente ao momento agora\n\n      // Verifica se o momento de expiração (-5 min) é maior que o momento atual.\n      if (exp > now) {\n        request = this.addToken(request, token);\n      } else {\n        request = this.addToken(request, token);\n        this.handleRefreshToken(request, next); // Se está próximo a expirar, hora de executar o refresh\n      }\n    } else if (token && AuthUtils.isTokenExpired(token)) {\n      this._authService.signOut();\n    }\n\n    // Verefica se e uma requisição do proxy\n    if (request.url.includes('integrador-proxy')) {\n      return next.handle(request);\n    }\n\n    return next.handle(request);\n  }\n\n  // Retorna um clone da requisição com o token adicionado ao header\n  private addToken(request: HttpRequest<any>, token: string) {\n    const content = request.headers.get('Content-Type')\n      ? request.headers.get('Content-Type')\n      : 'application/json';\n\n    if (content !== 'none') {\n      return request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': content,\n        },\n      });\n    }\n\n    return request.clone({\n      headers: request.headers.delete('Content-Type', 'none'),\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  // Efetua o refresh do token\n  private handleRefreshToken(request: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      return this._authService.refreshToken().subscribe((token) => {\n        this.isRefreshing = false;\n        this.refreshTokenSubject.next(token);\n        return next.handle(request);\n      });\n    }\n\n    return this.refreshTokenSubject\n      .pipe(\n        filter((token) => token != null),\n        take(1),\n        switchMap((newToken) => {\n          // Next passando a requisição com o novo token gerado\n          return next.handle(this.addToken(request, newToken));\n        })\n      )\n      .subscribe(); // Fim Senão\n  } // Fim handleRefresh\n} // Fim TokenInterceptor\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { AuthInterceptor } from 'app/core/auth/auth.interceptor';\n\n@NgModule({\n    imports  : [\n        HttpClientModule\n    ],\n    providers: [\n        AuthService,\n        {\n            provide : HTTP_INTERCEPTORS,\n            useClass: AuthInterceptor,\n            multi   : true\n        }\n    ]\n})\nexport class AuthModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@NgModule()\nexport class IconsModule\n{\n    /**\n     * Constructor\n     */\n    constructor(\n        private _domSanitizer: DomSanitizer,\n        private _matIconRegistry: MatIconRegistry\n    )\n    {\n        // Register icon sets\n        this._matIconRegistry.addSvgIconSet(this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-twotone.svg'));\n        this._matIconRegistry.addSvgIconSetInNamespace('mat_outline', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-outline.svg'));\n        this._matIconRegistry.addSvgIconSetInNamespace('mat_solid', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-solid.svg'));\n        this._matIconRegistry.addSvgIconSetInNamespace('feather', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/feather.svg'));\n        this._matIconRegistry.addSvgIconSetInNamespace('heroicons_outline', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/heroicons-outline.svg'));\n        this._matIconRegistry.addSvgIconSetInNamespace('heroicons_solid', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/heroicons-solid.svg'));\n    }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AuthModule } from 'app/core/auth/auth.module';\nimport { IconsModule } from 'app/core/icons/icons.module';\n\n@NgModule({\n  imports: [AuthModule, IconsModule],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    // Do not allow multiple injections\n    if (parentModule) {\n      throw new Error(\n        'CoreModule has already been loaded. Import this module in the AppModule only.'\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FuseLoadingBarComponent } from '@fuse/components/loading-bar/loading-bar.component';\n\n@NgModule({\n    declarations: [\n        FuseLoadingBarComponent\n    ],\n    imports     : [\n        CommonModule,\n        MatProgressBarModule\n    ],\n    exports     : [\n        FuseLoadingBarComponent\n    ]\n})\nexport class FuseLoadingBarModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { EmptyLayoutComponent } from 'app/layout/layouts/empty/empty.component';\n\n@NgModule({\n  declarations: [EmptyLayoutComponent],\n  imports: [\n    RouterModule,\n    FuseLoadingBarModule,\n    SharedModule\n  ],\n  exports: [EmptyLayoutComponent],\n})\nexport class EmptyLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FuseFullscreenComponent } from '@fuse/components/fullscreen/fullscreen.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        FuseFullscreenComponent\n    ],\n    imports     : [\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n        CommonModule\n    ],\n    exports     : [\n        FuseFullscreenComponent\n    ]\n})\nexport class FuseFullscreenModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FuseNavigationService\n{\n    private _componentRegistry: Map<string, any> = new Map<string, any>();\n    private _navigationStore: Map<string, FuseNavigationItem[]> = new Map<string, any>();\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Register navigation component\n     *\n     * @param name\n     * @param component\n     */\n    registerComponent(name: string, component: any): void\n    {\n        this._componentRegistry.set(name, component);\n    }\n\n    /**\n     * Deregister navigation component\n     *\n     * @param name\n     */\n    deregisterComponent(name: string): void\n    {\n        this._componentRegistry.delete(name);\n    }\n\n    /**\n     * Get navigation component from the registry\n     *\n     * @param name\n     */\n    getComponent<T>(name: string): T\n    {\n        return this._componentRegistry.get(name);\n    }\n\n    /**\n     * Store the given navigation with the given key\n     *\n     * @param key\n     * @param navigation\n     */\n    storeNavigation(key: string, navigation: FuseNavigationItem[]): void\n    {\n        // Add to the store\n        this._navigationStore.set(key, navigation);\n    }\n\n    /**\n     * Get navigation from storage by key\n     *\n     * @param key\n     */\n    getNavigation(key: string): FuseNavigationItem[]\n    {\n        return this._navigationStore.get(key) ?? [];\n    }\n\n    /**\n     * Delete the navigation from the storage\n     *\n     * @param key\n     */\n    deleteNavigation(key: string): void\n    {\n        // Check if the navigation exists\n        if ( !this._navigationStore.has(key) )\n        {\n            console.warn(`Navigation with the key '${key}' does not exist in the store.`);\n        }\n\n        // Delete from the storage\n        this._navigationStore.delete(key);\n    }\n\n    /**\n     * Utility function that returns a flattened\n     * version of the given navigation array\n     *\n     * @param navigation\n     * @param flatNavigation\n     */\n    getFlatNavigation(navigation: FuseNavigationItem[], flatNavigation: FuseNavigationItem[] = []): FuseNavigationItem[]\n    {\n        for ( const item of navigation )\n        {\n            if ( item.type === 'basic' )\n            {\n                flatNavigation.push(item);\n                continue;\n            }\n\n            if ( item.type === 'aside' || item.type === 'collapsable' || item.type === 'group' )\n            {\n                if ( item.children )\n                {\n                    this.getFlatNavigation(item.children, flatNavigation);\n                }\n            }\n        }\n\n        return flatNavigation;\n    }\n\n    /**\n     * Utility function that returns the item\n     * with the given id from given navigation\n     *\n     * @param id\n     * @param navigation\n     */\n    getItem(id: string, navigation: FuseNavigationItem[]): FuseNavigationItem | null\n    {\n        for ( const item of navigation )\n        {\n            if ( item.id === id )\n            {\n                return item;\n            }\n\n            if ( item.children )\n            {\n                const childItem = this.getItem(id, item.children);\n\n                if ( childItem )\n                {\n                    return childItem;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Utility function that returns the item's parent\n     * with the given id from given navigation\n     *\n     * @param id\n     * @param navigation\n     * @param parent\n     */\n    getItemParent(\n        id: string,\n        navigation: FuseNavigationItem[],\n        parent: FuseNavigationItem[] | FuseNavigationItem\n    ): FuseNavigationItem[] | FuseNavigationItem | null\n    {\n        for ( const item of navigation )\n        {\n            if ( item.id === id )\n            {\n                return parent;\n            }\n\n            if ( item.children )\n            {\n                const childItem = this.getItemParent(id, item.children, item);\n\n                if ( childItem )\n                {\n                    return childItem;\n                }\n            }\n        }\n\n        return null;\n    }\n}\n","<div class=\"fuse-horizontal-navigation-wrapper\">\n\n    <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\n\n        <!-- Skip the hidden items -->\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n            <!-- Basic -->\n            <ng-container *ngIf=\"item.type === 'basic'\">\n                <fuse-horizontal-navigation-basic-item\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-horizontal-navigation-basic-item>\n            </ng-container>\n\n            <!-- Branch: aside, collapsable, group -->\n            <ng-container *ngIf=\"item.type === 'aside' || item.type === 'collapsable' || item.type === 'group'\">\n                <fuse-horizontal-navigation-branch-item\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-horizontal-navigation-branch-item>\n            </ng-container>\n\n            <!-- Spacer -->\n            <ng-container *ngIf=\"item.type === 'spacer'\">\n                <fuse-horizontal-navigation-spacer-item\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-horizontal-navigation-spacer-item>\n            </ng-container>\n\n        </ng-container>\n\n    </ng-container>\n\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\n\n@Component({\n    selector       : 'fuse-horizontal-navigation',\n    templateUrl    : './horizontal.component.html',\n    styleUrls      : ['./horizontal.component.scss'],\n    animations     : fuseAnimations,\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs       : 'fuseHorizontalNavigation'\n})\nexport class FuseHorizontalNavigationComponent implements OnChanges, OnInit, OnDestroy\n{\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() navigation: FuseNavigationItem[];\n\n    onRefreshed: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService,\n        private _fuseUtilsService: FuseUtilsService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Navigation\n        if ( 'navigation' in changes )\n        {\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Make sure the name input is not an empty string\n        if ( this.name === '' )\n        {\n            this.name = this._fuseUtilsService.randomId();\n        }\n\n        // Register the navigation component\n        this._fuseNavigationService.registerComponent(this.name, this);\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Deregister the navigation component from the registry\n        this._fuseNavigationService.deregisterComponent(this.name);\n\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Refresh the component to apply the changes\n     */\n    refresh(): void\n    {\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Execute the observable\n        this.onRefreshed.next(true);\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","export class ScrollbarGeometry\n{\n    public x: number;\n    public y: number;\n\n    public w: number;\n    public h: number;\n\n    constructor(x: number, y: number, w: number, h: number)\n    {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n}\n\nexport class ScrollbarPosition\n{\n    public x: number | 'start' | 'end';\n    public y: number | 'start' | 'end';\n\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end')\n    {\n        this.x = x;\n        this.y = y;\n    }\n}\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { debounceTime, fromEvent, Subject, takeUntil } from 'rxjs';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { merge } from 'lodash-es';\nimport { ScrollbarGeometry, ScrollbarPosition } from '@fuse/directives/scrollbar/scrollbar.types';\n\n/**\n * Wrapper directive for the Perfect Scrollbar: https://github.com/mdbootstrap/perfect-scrollbar\n */\n@Directive({\n    selector: '[fuseScrollbar]',\n    exportAs: 'fuseScrollbar'\n})\nexport class FuseScrollbarDirective implements OnChanges, OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_fuseScrollbar: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() fuseScrollbar: boolean = true;\n    @Input() fuseScrollbarOptions: PerfectScrollbar.Options;\n\n    private _animation: number;\n    private _options: PerfectScrollbar.Options;\n    private _ps: PerfectScrollbar;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _elementRef: ElementRef,\n        private _platform: Platform,\n        private _router: Router\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for _elementRef\n     */\n    get elementRef(): ElementRef\n    {\n        return this._elementRef;\n    }\n\n    /**\n     * Getter for _ps\n     */\n    get ps(): PerfectScrollbar | null\n    {\n        return this._ps;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Enabled\n        if ( 'fuseScrollbar' in changes )\n        {\n            // Interpret empty string as 'true'\n            this.fuseScrollbar = coerceBooleanProperty(changes.fuseScrollbar.currentValue);\n\n            // If enabled, init the directive\n            if ( this.fuseScrollbar )\n            {\n                this._init();\n            }\n            // Otherwise destroy it\n            else\n            {\n                this._destroy();\n            }\n        }\n\n        // Scrollbar options\n        if ( 'fuseScrollbarOptions' in changes )\n        {\n            // Merge the options\n            this._options = merge({}, this._options, changes.fuseScrollbarOptions.currentValue);\n\n            // Return if not initialized\n            if ( !this._ps )\n            {\n                return;\n            }\n\n            // Destroy and re-init the PerfectScrollbar to update its options\n            setTimeout(() => {\n                this._destroy();\n            });\n\n            setTimeout(() => {\n                this._init();\n            });\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to window resize event\n        fromEvent(window, 'resize')\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(150)\n            )\n            .subscribe(() => {\n\n                // Update the PerfectScrollbar\n                this.update();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        this._destroy();\n\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Is enabled\n     */\n    isEnabled(): boolean\n    {\n        return this.fuseScrollbar;\n    }\n\n    /**\n     * Update the scrollbar\n     */\n    update(): void\n    {\n        // Return if not initialized\n        if ( !this._ps )\n        {\n            return;\n        }\n\n        // Update the PerfectScrollbar\n        this._ps.update();\n    }\n\n    /**\n     * Destroy the scrollbar\n     */\n    destroy(): void\n    {\n        this.ngOnDestroy();\n    }\n\n    /**\n     * Returns the geometry of the scrollable element\n     *\n     * @param prefix\n     */\n    geometry(prefix: string = 'scroll'): ScrollbarGeometry\n    {\n        return new ScrollbarGeometry(\n            this._elementRef.nativeElement[prefix + 'Left'],\n            this._elementRef.nativeElement[prefix + 'Top'],\n            this._elementRef.nativeElement[prefix + 'Width'],\n            this._elementRef.nativeElement[prefix + 'Height']);\n    }\n\n    /**\n     * Returns the position of the scrollable element\n     *\n     * @param absolute\n     */\n    position(absolute: boolean = false): ScrollbarPosition\n    {\n        let scrollbarPosition;\n\n        if ( !absolute && this._ps )\n        {\n            scrollbarPosition = new ScrollbarPosition(\n                this._ps.reach.x || 0,\n                this._ps.reach.y || 0\n            );\n        }\n        else\n        {\n            scrollbarPosition = new ScrollbarPosition(\n                this._elementRef.nativeElement.scrollLeft,\n                this._elementRef.nativeElement.scrollTop\n            );\n        }\n\n        return scrollbarPosition;\n    }\n\n    /**\n     * Scroll to\n     *\n     * @param x\n     * @param y\n     * @param speed\n     */\n    scrollTo(x: number, y?: number, speed?: number): void\n    {\n        if ( y == null && speed == null )\n        {\n            this.animateScrolling('scrollTop', x, speed);\n        }\n        else\n        {\n            if ( x != null )\n            {\n                this.animateScrolling('scrollLeft', x, speed);\n            }\n\n            if ( y != null )\n            {\n                this.animateScrolling('scrollTop', y, speed);\n            }\n        }\n    }\n\n    /**\n     * Scroll to X\n     *\n     * @param x\n     * @param speed\n     */\n    scrollToX(x: number, speed?: number): void\n    {\n        this.animateScrolling('scrollLeft', x, speed);\n    }\n\n    /**\n     * Scroll to Y\n     *\n     * @param y\n     * @param speed\n     */\n    scrollToY(y: number, speed?: number): void\n    {\n        this.animateScrolling('scrollTop', y, speed);\n    }\n\n    /**\n     * Scroll to top\n     *\n     * @param offset\n     * @param speed\n     */\n    scrollToTop(offset: number = 0, speed?: number): void\n    {\n        this.animateScrolling('scrollTop', offset, speed);\n    }\n\n    /**\n     * Scroll to bottom\n     *\n     * @param offset\n     * @param speed\n     */\n    scrollToBottom(offset: number = 0, speed?: number): void\n    {\n        const top = this._elementRef.nativeElement.scrollHeight - this._elementRef.nativeElement.clientHeight;\n        this.animateScrolling('scrollTop', top - offset, speed);\n    }\n\n    /**\n     * Scroll to left\n     *\n     * @param offset\n     * @param speed\n     */\n    scrollToLeft(offset: number = 0, speed?: number): void\n    {\n        this.animateScrolling('scrollLeft', offset, speed);\n    }\n\n    /**\n     * Scroll to right\n     *\n     * @param offset\n     * @param speed\n     */\n    scrollToRight(offset: number = 0, speed?: number): void\n    {\n        const left = this._elementRef.nativeElement.scrollWidth - this._elementRef.nativeElement.clientWidth;\n        this.animateScrolling('scrollLeft', left - offset, speed);\n    }\n\n    /**\n     * Scroll to element\n     *\n     * @param qs\n     * @param offset\n     * @param ignoreVisible If true, scrollToElement won't happen if element is already inside the current viewport\n     * @param speed\n     */\n    scrollToElement(qs: string, offset: number = 0, ignoreVisible: boolean = false, speed?: number): void\n    {\n        const element = this._elementRef.nativeElement.querySelector(qs);\n\n        if ( !element )\n        {\n            return;\n        }\n\n        const elementPos = element.getBoundingClientRect();\n        const scrollerPos = this._elementRef.nativeElement.getBoundingClientRect();\n\n        if ( this._elementRef.nativeElement.classList.contains('ps--active-x') )\n        {\n            if ( ignoreVisible && elementPos.right <= (scrollerPos.right - Math.abs(offset)) )\n            {\n                return;\n            }\n\n            const currentPos = this._elementRef.nativeElement['scrollLeft'];\n            const position = elementPos.left - scrollerPos.left + currentPos;\n\n            this.animateScrolling('scrollLeft', position + offset, speed);\n        }\n\n        if ( this._elementRef.nativeElement.classList.contains('ps--active-y') )\n        {\n            if ( ignoreVisible && elementPos.bottom <= (scrollerPos.bottom - Math.abs(offset)) )\n            {\n                return;\n            }\n\n            const currentPos = this._elementRef.nativeElement['scrollTop'];\n            const position = elementPos.top - scrollerPos.top + currentPos;\n\n            this.animateScrolling('scrollTop', position + offset, speed);\n        }\n    }\n\n    /**\n     * Animate scrolling\n     *\n     * @param target\n     * @param value\n     * @param speed\n     */\n    animateScrolling(target: string, value: number, speed?: number): void\n    {\n        if ( this._animation )\n        {\n            window.cancelAnimationFrame(this._animation);\n            this._animation = null;\n        }\n\n        if ( !speed || typeof window === 'undefined' )\n        {\n            this._elementRef.nativeElement[target] = value;\n        }\n        else if ( value !== this._elementRef.nativeElement[target] )\n        {\n            let newValue = 0;\n            let scrollCount = 0;\n\n            let oldTimestamp = performance.now();\n            let oldValue = this._elementRef.nativeElement[target];\n\n            const cosParameter = (oldValue - value) / 2;\n\n            const step = (newTimestamp: number): void => {\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\n\n                // Only continue animation if scroll position has not changed\n                if ( this._elementRef.nativeElement[target] === oldValue )\n                {\n                    if ( scrollCount >= Math.PI )\n                    {\n                        this.animateScrolling(target, value, 0);\n                    }\n                    else\n                    {\n                        this._elementRef.nativeElement[target] = newValue;\n\n                        // On a zoomed out page the resulting offset may differ\n                        oldValue = this._elementRef.nativeElement[target];\n                        oldTimestamp = newTimestamp;\n\n                        this._animation = window.requestAnimationFrame(step);\n                    }\n                }\n            };\n\n            window.requestAnimationFrame(step);\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Initialize\n     *\n     * @private\n     */\n    private _init(): void\n    {\n        // Return if already initialized\n        if ( this._ps )\n        {\n            return;\n        }\n\n        // Return if on mobile or not on browser\n        if ( this._platform.ANDROID || this._platform.IOS || !this._platform.isBrowser )\n        {\n            this.fuseScrollbar = false;\n            return;\n        }\n\n        // Initialize the PerfectScrollbar\n        this._ps = new PerfectScrollbar(this._elementRef.nativeElement, {...this._options});\n    }\n\n    /**\n     * Destroy\n     *\n     * @private\n     */\n    private _destroy(): void\n    {\n        // Return if not initialized\n        if ( !this._ps )\n        {\n            return;\n        }\n\n        // Destroy the PerfectScrollbar\n        this._ps.destroy();\n\n        // Clean up\n        this._ps = null;\n    }\n}\n","<div class=\"fuse-vertical-navigation-wrapper\">\n\n    <!-- Header -->\n    <div class=\"fuse-vertical-navigation-header\">\n        <ng-content select=\"[fuseVerticalNavigationHeader]\"></ng-content>\n    </div>\n\n    <!-- Content -->\n    <div\n        class=\"fuse-vertical-navigation-content\"\n        fuseScrollbar\n        [fuseScrollbarOptions]=\"{wheelPropagation: inner, suppressScrollX: true}\"\n        #navigationContent>\n\n        <!-- Content header -->\n        <div class=\"fuse-vertical-navigation-content-header\">\n            <ng-content select=\"[fuseVerticalNavigationContentHeader]\"></ng-content>\n        </div>\n\n        <!-- Items -->\n        <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\n\n            <!-- Skip the hidden items -->\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n                <!-- Aside -->\n                <ng-container *ngIf=\"item.type === 'aside'\">\n                    <fuse-vertical-navigation-aside-item\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        [activeItemId]=\"activeAsideItemId\"\n                        [autoCollapse]=\"autoCollapse\"\n                        [skipChildren]=\"true\"\n                        (click)=\"toggleAside(item)\"></fuse-vertical-navigation-aside-item>\n                </ng-container>\n\n                <!-- Basic -->\n                <ng-container *ngIf=\"item.type === 'basic'\">\n                    <fuse-vertical-navigation-basic-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-basic-item>\n                </ng-container>\n\n                <!-- Collapsable -->\n                <ng-container *ngIf=\"item.type === 'collapsable'\">\n                    <fuse-vertical-navigation-collapsable-item\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\n                </ng-container>\n\n                <!-- Divider -->\n                <ng-container *ngIf=\"item.type === 'divider'\">\n                    <fuse-vertical-navigation-divider-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-divider-item>\n                </ng-container>\n\n                <!-- Group -->\n                <ng-container *ngIf=\"item.type === 'group'\">\n                    <fuse-vertical-navigation-group-item\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-group-item>\n                </ng-container>\n\n                <!-- Spacer -->\n                <ng-container *ngIf=\"item.type === 'spacer'\">\n                    <fuse-vertical-navigation-spacer-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-spacer-item>\n                </ng-container>\n\n            </ng-container>\n\n        </ng-container>\n\n        <!-- Content footer -->\n        <div class=\"fuse-vertical-navigation-content-footer\">\n            <ng-content select=\"[fuseVerticalNavigationContentFooter]\"></ng-content>\n        </div>\n\n    </div>\n\n    <!-- Footer -->\n    <div class=\"fuse-vertical-navigation-footer\">\n        <ng-content select=\"[fuseVerticalNavigationFooter]\"></ng-content>\n    </div>\n\n</div>\n\n<!-- Aside -->\n<ng-container *ngIf=\"activeAsideItemId\">\n    <div\n        class=\"fuse-vertical-navigation-aside-wrapper\"\n        fuseScrollbar\n        [fuseScrollbarOptions]=\"{wheelPropagation: false, suppressScrollX: true}\"\n        [@fadeInLeft]=\"position === 'left'\"\n        [@fadeInRight]=\"position === 'right'\"\n        [@fadeOutLeft]=\"position === 'left'\"\n        [@fadeOutRight]=\"position === 'right'\">\n\n        <!-- Items -->\n        <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\n\n            <!-- Skip the hidden items -->\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n                <!-- Aside -->\n                <ng-container *ngIf=\"item.type === 'aside' && item.id === activeAsideItemId\">\n                    <fuse-vertical-navigation-aside-item\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-aside-item>\n                </ng-container>\n\n            </ng-container>\n\n        </ng-container>\n\n    </div>\n</ng-container>\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, Renderer2, SimpleChanges, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ScrollStrategy, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { delay, filter, merge, ReplaySubject, Subject, Subscription, takeUntil } from 'rxjs';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseNavigationItem, FuseVerticalNavigationAppearance, FuseVerticalNavigationMode, FuseVerticalNavigationPosition } from '@fuse/components/navigation/navigation.types';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseScrollbarDirective } from '@fuse/directives/scrollbar/scrollbar.directive';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n    selector       : 'fuse-vertical-navigation',\n    templateUrl    : './vertical.component.html',\n    styleUrls      : ['./vertical.component.scss'],\n    animations     : fuseAnimations,\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs       : 'fuseVerticalNavigation'\n})\nexport class FuseVerticalNavigationComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_inner: BooleanInput;\n    static ngAcceptInputType_opened: BooleanInput;\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() appearance: FuseVerticalNavigationAppearance = 'default';\n    @Input() autoCollapse: boolean = true;\n    @Input() inner: boolean = false;\n    @Input() mode: FuseVerticalNavigationMode = 'side';\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() navigation: FuseNavigationItem[];\n    @Input() opened: boolean = true;\n    @Input() position: FuseVerticalNavigationPosition = 'left';\n    @Input() transparentOverlay: boolean = false;\n    @Output() readonly appearanceChanged: EventEmitter<FuseVerticalNavigationAppearance> = new EventEmitter<FuseVerticalNavigationAppearance>();\n    @Output() readonly modeChanged: EventEmitter<FuseVerticalNavigationMode> = new EventEmitter<FuseVerticalNavigationMode>();\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() readonly positionChanged: EventEmitter<FuseVerticalNavigationPosition> = new EventEmitter<FuseVerticalNavigationPosition>();\n    @ViewChild('navigationContent') private _navigationContentEl: ElementRef;\n\n    activeAsideItemId: string | null = null;\n    onCollapsableItemCollapsed: ReplaySubject<FuseNavigationItem> = new ReplaySubject<FuseNavigationItem>(1);\n    onCollapsableItemExpanded: ReplaySubject<FuseNavigationItem> = new ReplaySubject<FuseNavigationItem>(1);\n    onRefreshed: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n    private _animationsEnabled: boolean = false;\n    private _asideOverlay: HTMLElement;\n    private readonly _handleAsideOverlayClick: any;\n    private readonly _handleOverlayClick: any;\n    private _hovered: boolean = false;\n    private _overlay: HTMLElement;\n    private _player: AnimationPlayer;\n    private _scrollStrategy: ScrollStrategy = this._scrollStrategyOptions.block();\n    private _fuseScrollbarDirectives!: QueryList<FuseScrollbarDirective>;\n    private _fuseScrollbarDirectivesSubscription: Subscription;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _animationBuilder: AnimationBuilder,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _elementRef: ElementRef,\n        private _renderer2: Renderer2,\n        private _router: Router,\n        private _scrollStrategyOptions: ScrollStrategyOptions,\n        private _fuseNavigationService: FuseNavigationService,\n        private _fuseUtilsService: FuseUtilsService\n    )\n    {\n        this._handleAsideOverlayClick = (): void => {\n            this.closeAside();\n        };\n        this._handleOverlayClick = (): void => {\n            this.close();\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any\n    {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-vertical-navigation-animations-enabled'             : this._animationsEnabled,\n            [`fuse-vertical-navigation-appearance-${this.appearance}`]: true,\n            'fuse-vertical-navigation-hover'                          : this._hovered,\n            'fuse-vertical-navigation-inner'                          : this.inner,\n            'fuse-vertical-navigation-mode-over'                      : this.mode === 'over',\n            'fuse-vertical-navigation-mode-side'                      : this.mode === 'side',\n            'fuse-vertical-navigation-opened'                         : this.opened,\n            'fuse-vertical-navigation-position-left'                  : this.position === 'left',\n            'fuse-vertical-navigation-position-right'                 : this.position === 'right'\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    /**\n     * Host binding for component inline styles\n     */\n    @HostBinding('style') get styleList(): any\n    {\n        return {\n            'visibility': this.opened ? 'visible' : 'hidden'\n        };\n    }\n\n    /**\n     * Setter for fuseScrollbarDirectives\n     */\n    @ViewChildren(FuseScrollbarDirective)\n    set fuseScrollbarDirectives(fuseScrollbarDirectives: QueryList<FuseScrollbarDirective>)\n    {\n        // Store the directives\n        this._fuseScrollbarDirectives = fuseScrollbarDirectives;\n\n        // Return if there are no directives\n        if ( fuseScrollbarDirectives.length === 0 )\n        {\n            return;\n        }\n\n        // Unsubscribe the previous subscriptions\n        if ( this._fuseScrollbarDirectivesSubscription )\n        {\n            this._fuseScrollbarDirectivesSubscription.unsubscribe();\n        }\n\n        // Update the scrollbars on collapsable items' collapse/expand\n        this._fuseScrollbarDirectivesSubscription =\n            merge(\n                this.onCollapsableItemCollapsed,\n                this.onCollapsableItemExpanded\n            )\n                .pipe(\n                    takeUntil(this._unsubscribeAll),\n                    delay(250)\n                )\n                .subscribe(() => {\n\n                    // Loop through the scrollbars and update them\n                    fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {\n                        fuseScrollbarDirective.update();\n                    });\n                });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Decorated methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On mouseenter\n     *\n     * @private\n     */\n    @HostListener('mouseenter')\n    private _onMouseenter(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = true;\n    }\n\n    /**\n     * On mouseleave\n     *\n     * @private\n     */\n    @HostListener('mouseleave')\n    private _onMouseleave(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Appearance\n        if ( 'appearance' in changes )\n        {\n            // Execute the observable\n            this.appearanceChanged.next(changes.appearance.currentValue);\n        }\n\n        // Inner\n        if ( 'inner' in changes )\n        {\n            // Coerce the value to a boolean\n            this.inner = coerceBooleanProperty(changes.inner.currentValue);\n        }\n\n        // Mode\n        if ( 'mode' in changes )\n        {\n            // Get the previous and current values\n            const currentMode = changes.mode.currentValue;\n            const previousMode = changes.mode.previousValue;\n\n            // Disable the animations\n            this._disableAnimations();\n\n            // If the mode changes: 'over -> side'\n            if ( previousMode === 'over' && currentMode === 'side' )\n            {\n                // Hide the overlay\n                this._hideOverlay();\n            }\n\n            // If the mode changes: 'side -> over'\n            if ( previousMode === 'side' && currentMode === 'over' )\n            {\n                // Close the aside\n                this.closeAside();\n\n                // If the navigation is opened\n                if ( this.opened )\n                {\n                    // Show the overlay\n                    this._showOverlay();\n                }\n            }\n\n            // Execute the observable\n            this.modeChanged.next(currentMode);\n\n            // Enable the animations after a delay\n            // The delay must be bigger than the current transition-duration\n            // to make sure nothing will be animated while the mode changing\n            setTimeout(() => {\n                this._enableAnimations();\n            }, 500);\n        }\n\n        // Navigation\n        if ( 'navigation' in changes )\n        {\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        }\n\n        // Opened\n        if ( 'opened' in changes )\n        {\n            // Coerce the value to a boolean\n            this.opened = coerceBooleanProperty(changes.opened.currentValue);\n\n            // Open/close the navigation\n            this._toggleOpened(this.opened);\n        }\n\n        // Position\n        if ( 'position' in changes )\n        {\n            // Execute the observable\n            this.positionChanged.next(changes.position.currentValue);\n        }\n\n        // Transparent overlay\n        if ( 'transparentOverlay' in changes )\n        {\n            // Coerce the value to a boolean\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Make sure the name input is not an empty string\n        if ( this.name === '' )\n        {\n            this.name = this._fuseUtilsService.randomId();\n        }\n\n        // Register the navigation component\n        this._fuseNavigationService.registerComponent(this.name, this);\n\n        // Subscribe to the 'NavigationEnd' event\n        this._router.events\n            .pipe(\n                filter(event => event instanceof NavigationEnd),\n                takeUntil(this._unsubscribeAll)\n            )\n            .subscribe(() => {\n\n                // If the mode is 'over' and the navigation is opened...\n                if ( this.mode === 'over' && this.opened )\n                {\n                    // Close the navigation\n                    this.close();\n                }\n\n                // If the mode is 'side' and the aside is active...\n                if ( this.mode === 'side' && this.activeAsideItemId )\n                {\n                    // Close the aside\n                    this.closeAside();\n                }\n            });\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit(): void\n    {\n        setTimeout(() => {\n\n            // Return if 'navigation content' element does not exist\n            if ( !this._navigationContentEl )\n            {\n                return;\n            }\n\n            // If 'navigation content' element doesn't have\n            // perfect scrollbar activated on it...\n            if ( !this._navigationContentEl.nativeElement.classList.contains('ps') )\n            {\n                // Find the active item\n                const activeItem = this._navigationContentEl.nativeElement.querySelector('.fuse-vertical-navigation-item-active');\n\n                // If the active item exists, scroll it into view\n                if ( activeItem )\n                {\n                    activeItem.scrollIntoView();\n                }\n            }\n            // Otherwise\n            else\n            {\n                // Go through all the scrollbar directives\n                this._fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {\n\n                    // Skip if not enabled\n                    if ( !fuseScrollbarDirective.isEnabled() )\n                    {\n                        return;\n                    }\n\n                    // Scroll to the active element\n                    fuseScrollbarDirective.scrollToElement('.fuse-vertical-navigation-item-active', -120, true);\n                });\n            }\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Forcefully close the navigation and aside in case they are opened\n        this.close();\n        this.closeAside();\n\n        // Deregister the navigation component from the registry\n        this._fuseNavigationService.deregisterComponent(this.name);\n\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Refresh the component to apply the changes\n     */\n    refresh(): void\n    {\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Execute the observable\n        this.onRefreshed.next(true);\n    }\n\n    /**\n     * Open the navigation\n     */\n    open(): void\n    {\n        // Return if the navigation is already open\n        if ( this.opened )\n        {\n            return;\n        }\n\n        // Set the opened\n        this._toggleOpened(true);\n    }\n\n    /**\n     * Close the navigation\n     */\n    close(): void\n    {\n        // Return if the navigation is already closed\n        if ( !this.opened )\n        {\n            return;\n        }\n\n        // Close the aside\n        this.closeAside();\n\n        // Set the opened\n        this._toggleOpened(false);\n    }\n\n    /**\n     * Toggle the navigation\n     */\n    toggle(): void\n    {\n        // Toggle\n        if ( this.opened )\n        {\n            this.close();\n        }\n        else\n        {\n            this.open();\n        }\n    }\n\n    /**\n     * Open the aside\n     *\n     * @param item\n     */\n    openAside(item: FuseNavigationItem): void\n    {\n        // Return if the item is disabled\n        if ( item.disabled || !item.id )\n        {\n            return;\n        }\n\n        // Open\n        this.activeAsideItemId = item.id;\n\n        // Show the aside overlay\n        this._showAsideOverlay();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Close the aside\n     */\n    closeAside(): void\n    {\n        // Close\n        this.activeAsideItemId = null;\n\n        // Hide the aside overlay\n        this._hideAsideOverlay();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle the aside\n     *\n     * @param item\n     */\n    toggleAside(item: FuseNavigationItem): void\n    {\n        // Toggle\n        if ( this.activeAsideItemId === item.id )\n        {\n            this.closeAside();\n        }\n        else\n        {\n            this.openAside(item);\n        }\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Enable the animations\n     *\n     * @private\n     */\n    private _enableAnimations(): void\n    {\n        // Return if the animations are already enabled\n        if ( this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Enable the animations\n        this._animationsEnabled = true;\n    }\n\n    /**\n     * Disable the animations\n     *\n     * @private\n     */\n    private _disableAnimations(): void\n    {\n        // Return if the animations are already disabled\n        if ( !this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Disable the animations\n        this._animationsEnabled = false;\n    }\n\n    /**\n     * Show the overlay\n     *\n     * @private\n     */\n    private _showOverlay(): void\n    {\n        // Return if there is already an overlay\n        if ( this._asideOverlay )\n        {\n            return;\n        }\n\n        // Create the overlay element\n        this._overlay = this._renderer2.createElement('div');\n\n        // Add a class to the overlay element\n        this._overlay.classList.add('fuse-vertical-navigation-overlay');\n\n        // Add a class depending on the transparentOverlay option\n        if ( this.transparentOverlay )\n        {\n            this._overlay.classList.add('fuse-vertical-navigation-overlay-transparent');\n        }\n\n        // Append the overlay to the parent of the navigation\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\n\n        // Enable block scroll strategy\n        this._scrollStrategy.enable();\n\n        // Create the enter animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Add an event listener to the overlay\n        this._overlay.addEventListener('click', this._handleOverlayClick);\n    }\n\n    /**\n     * Hide the overlay\n     *\n     * @private\n     */\n    private _hideOverlay(): void\n    {\n        if ( !this._overlay )\n        {\n            return;\n        }\n\n        // Create the leave animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Once the animation is done...\n        this._player.onDone(() => {\n\n            // If the overlay still exists...\n            if ( this._overlay )\n            {\n                // Remove the event listener\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\n\n                // Remove the overlay\n                this._overlay.parentNode.removeChild(this._overlay);\n                this._overlay = null;\n            }\n\n            // Disable block scroll strategy\n            this._scrollStrategy.disable();\n        });\n    }\n\n    /**\n     * Show the aside overlay\n     *\n     * @private\n     */\n    private _showAsideOverlay(): void\n    {\n        // Return if there is already an overlay\n        if ( this._asideOverlay )\n        {\n            return;\n        }\n\n        // Create the aside overlay element\n        this._asideOverlay = this._renderer2.createElement('div');\n\n        // Add a class to the aside overlay element\n        this._asideOverlay.classList.add('fuse-vertical-navigation-aside-overlay');\n\n        // Append the aside overlay to the parent of the navigation\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._asideOverlay);\n\n        // Create the enter animation and attach it to the player\n        this._player =\n            this._animationBuilder\n                .build([\n                    animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\n                ]).create(this._asideOverlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Add an event listener to the aside overlay\n        this._asideOverlay.addEventListener('click', this._handleAsideOverlayClick);\n    }\n\n    /**\n     * Hide the aside overlay\n     *\n     * @private\n     */\n    private _hideAsideOverlay(): void\n    {\n        if ( !this._asideOverlay )\n        {\n            return;\n        }\n\n        // Create the leave animation and attach it to the player\n        this._player =\n            this._animationBuilder\n                .build([\n                    animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\n                ]).create(this._asideOverlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Once the animation is done...\n        this._player.onDone(() => {\n\n            // If the aside overlay still exists...\n            if ( this._asideOverlay )\n            {\n                // Remove the event listener\n                this._asideOverlay.removeEventListener('click', this._handleAsideOverlayClick);\n\n                // Remove the aside overlay\n                this._asideOverlay.parentNode.removeChild(this._asideOverlay);\n                this._asideOverlay = null;\n            }\n        });\n    }\n\n    /**\n     * Open/close the navigation\n     *\n     * @param open\n     * @private\n     */\n    private _toggleOpened(open: boolean): void\n    {\n        // Set the opened\n        this.opened = open;\n\n        // Enable the animations\n        this._enableAnimations();\n\n        // If the navigation opened, and the mode\n        // is 'over', show the overlay\n        if ( this.mode === 'over' )\n        {\n            if ( this.opened )\n            {\n                this._showOverlay();\n            }\n            else\n            {\n                this._hideOverlay();\n            }\n        }\n\n        // Execute the observable\n        this.openedChanged.next(open);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FuseScrollbarDirective } from '@fuse/directives/scrollbar/scrollbar.directive';\n\n@NgModule({\n    declarations: [\n        FuseScrollbarDirective\n    ],\n    exports     : [\n        FuseScrollbarDirective\n    ]\n})\nexport class FuseScrollbarModule\n{\n}\n","<!-- Item wrapper -->\n<div\n    class=\"fuse-horizontal-navigation-item-wrapper\"\n    [class.fuse-horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\">\n\n    <!-- Item with an internal link -->\n    <ng-container *ngIf=\"item.link && !item.externalLink && !item.function && !item.disabled\">\n        <div\n            class=\"fuse-horizontal-navigation-item\"\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\n            [routerLink]=\"[item.link]\"\n            [fragment]=\"item.fragment ?? null\"\n            [preserveFragment]=\"item.preserveFragment ?? false\"\n            [queryParams]=\"item.queryParams ?? null\"\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\n            [routerLinkActive]=\"'fuse-horizontal-navigation-item-active'\"\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item with an external link -->\n    <ng-container *ngIf=\"item.link && item.externalLink && !item.function && !item.disabled\">\n        <a\n            class=\"fuse-horizontal-navigation-item\"\n            [href]=\"item.link\"\n            [target]=\"item.target || '_self'\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with a function -->\n    <ng-container *ngIf=\"!item.link && item.function && !item.disabled\">\n        <div\n            class=\"fuse-horizontal-navigation-item\"\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item with an internal link and function -->\n    <ng-container *ngIf=\"item.link && !item.externalLink && item.function && !item.disabled\">\n        <div\n            class=\"fuse-horizontal-navigation-item\"\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\n            [routerLink]=\"[item.link]\"\n            [fragment]=\"item.fragment ?? null\"\n            [preserveFragment]=\"item.preserveFragment ?? false\"\n            [queryParams]=\"item.queryParams ?? null\"\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\n            [routerLinkActive]=\"'fuse-horizontal-navigation-item-active'\"\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item with an external link and function -->\n    <ng-container *ngIf=\"item.link && item.externalLink && item.function && !item.disabled\">\n        <a\n            class=\"fuse-horizontal-navigation-item\"\n            [href]=\"item.link\"\n            [target]=\"item.target || '_self'\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\"\n            mat-menu-item>\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with a no link and no function -->\n    <ng-container *ngIf=\"!item.link && !item.function && !item.disabled\">\n        <div\n            class=\"fuse-horizontal-navigation-item\"\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item is disabled -->\n    <ng-container *ngIf=\"item.disabled\">\n        <div class=\"fuse-horizontal-navigation-item fuse-horizontal-navigation-item-disabled\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n</div>\n\n<!-- Item template -->\n<ng-template #itemTemplate>\n\n    <!-- Icon -->\n    <ng-container *ngIf=\"item.icon\">\n        <mat-icon\n            class=\"fuse-horizontal-navigation-item-icon\"\n            [ngClass]=\"item.classes?.icon\"\n            [svgIcon]=\"item.icon\"></mat-icon>\n    </ng-container>\n\n    <!-- Title & Subtitle -->\n    <div class=\"fuse-horizontal-navigation-item-title-wrapper\">\n        <div class=\"fuse-horizontal-navigation-item-title\">\n            <span [ngClass]=\"item.classes?.title\">\n                {{item.title}}\n            </span>\n        </div>\n        <ng-container *ngIf=\"item.subtitle\">\n            <div class=\"fuse-horizontal-navigation-item-subtitle text-hint\">\n                <span [ngClass]=\"item.classes?.subtitle\">\n                    {{item.subtitle}}\n                </span>\n            </div>\n        </ng-container>\n    </div>\n\n    <!-- Badge -->\n    <ng-container *ngIf=\"item.badge\">\n        <div class=\"fuse-horizontal-navigation-item-badge\">\n            <div\n                class=\"fuse-horizontal-navigation-item-badge-content\"\n                [ngClass]=\"item.badge.classes\">\n                {{item.badge.title}}\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IsActiveMatchOptions } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\n\n@Component({\n    selector       : 'fuse-horizontal-navigation-basic-item',\n    templateUrl    : './basic.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseHorizontalNavigationBasicItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    isActiveMatchOptions: IsActiveMatchOptions;\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService,\n        private _fuseUtilsService: FuseUtilsService\n    )\n    {\n        // Set the equivalent of {exact: false} as default for active match options.\n        // We are not assigning the item.isActiveMatchOptions directly to the\n        // [routerLinkActiveOptions] because if it's \"undefined\" initially, the router\n        // will throw an error and stop working.\n        this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the \"isActiveMatchOptions\" either from item's\n        // \"isActiveMatchOptions\" or the equivalent form of\n        // item's \"exactMatch\" option\n        this.isActiveMatchOptions =\n            this.item.isActiveMatchOptions ?? this.item.exactMatch\n                ? this._fuseUtilsService.exactMatchOptions\n                : this._fuseUtilsService.subsetMatchOptions;\n\n        // Get the parent navigation component\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-horizontal-navigation-divider-item',\n    templateUrl    : './divider.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseHorizontalNavigationDividerItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Divider -->\n<div\n    class=\"fuse-horizontal-navigation-item-wrapper divider\"\n    [ngClass]=\"item.classes?.wrapper\"></div>\n","<ng-container *ngIf=\"!child\">\n    <div\n        [ngClass]=\"{'fuse-horizontal-navigation-menu-active': trigger.menuOpen,\n                 'fuse-horizontal-navigation-menu-active-forced': item.active}\"\n        [matMenuTriggerFor]=\"matMenu\"\n        (onMenuOpen)=\"triggerChangeDetection()\"\n        (onMenuClose)=\"triggerChangeDetection()\"\n        #trigger=\"matMenuTrigger\">\n        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n    </div>\n</ng-container>\n\n<mat-menu\n    class=\"fuse-horizontal-navigation-menu-panel\"\n    [overlapTrigger]=\"false\"\n    #matMenu=\"matMenu\">\n\n    <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\n\n        <!-- Skip the hidden items -->\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n            <!-- Basic -->\n            <ng-container *ngIf=\"item.type === 'basic'\">\n                <div\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    [disabled]=\"item.disabled\"\n                    mat-menu-item>\n                    <fuse-horizontal-navigation-basic-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-horizontal-navigation-basic-item>\n                </div>\n            </ng-container>\n\n            <!-- Branch: aside, collapsable, group -->\n            <ng-container *ngIf=\"item.type === 'aside' || item.type === 'collapsable' || item.type === 'group'\">\n                <div\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    [disabled]=\"item.disabled\"\n                    [matMenuTriggerFor]=\"branch.matMenu\"\n                    mat-menu-item>\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\n                    <fuse-horizontal-navigation-branch-item\n                        [child]=\"true\"\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        #branch></fuse-horizontal-navigation-branch-item>\n                </div>\n            </ng-container>\n\n            <!-- Divider -->\n            <ng-container *ngIf=\"item.type === 'divider'\">\n                <div\n                    class=\"fuse-horizontal-navigation-menu-item\"\n                    mat-menu-item>\n                    <fuse-horizontal-navigation-divider-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-horizontal-navigation-divider-item>\n                </div>\n            </ng-container>\n\n        </ng-container>\n\n    </ng-container>\n\n</mat-menu>\n\n<!-- Item template -->\n<ng-template\n    let-item\n    #itemTemplate>\n\n    <div\n        class=\"fuse-horizontal-navigation-item-wrapper\"\n        [class.fuse-horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\n        [ngClass]=\"item.classes?.wrapper\">\n\n        <div\n            class=\"fuse-horizontal-navigation-item\"\n            [ngClass]=\"{'fuse-horizontal-navigation-item-disabled': item.disabled,\n                         'fuse-horizontal-navigation-item-active-forced': item.active}\"\n            [matTooltip]=\"item.tooltip || ''\">\n\n            <!-- Icon -->\n            <ng-container *ngIf=\"item.icon\">\n                <mat-icon\n                    class=\"fuse-horizontal-navigation-item-icon\"\n                    [ngClass]=\"item.classes?.icon\"\n                    [svgIcon]=\"item.icon\"></mat-icon>\n            </ng-container>\n\n            <!-- Title & Subtitle -->\n            <div class=\"fuse-horizontal-navigation-item-title-wrapper\">\n                <div class=\"fuse-horizontal-navigation-item-title\">\n                    <span [ngClass]=\"item.classes?.title\">\n                        {{item.title}}\n                    </span>\n                </div>\n                <ng-container *ngIf=\"item.subtitle\">\n                    <div class=\"fuse-horizontal-navigation-item-subtitle text-hint\">\n                        <span [ngClass]=\"item.classes?.subtitle\">\n                            {{item.subtitle}}\n                        </span>\n                    </div>\n                </ng-container>\n            </div>\n\n            <!-- Badge -->\n            <ng-container *ngIf=\"item.badge\">\n                <div class=\"fuse-horizontal-navigation-item-badge\">\n                    <div\n                        class=\"fuse-horizontal-navigation-item-badge-content\"\n                        [ngClass]=\"item.badge.classes\">\n                        {{item.badge.title}}\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n\n</ng-template>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { MatMenu } from '@angular/material/menu';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-horizontal-navigation-branch-item',\n    templateUrl    : './branch.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseHorizontalNavigationBranchItemComponent implements OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_child: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() child: boolean = false;\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n    @ViewChild('matMenu', {static: true}) matMenu: MatMenu;\n\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Trigger the change detection\n     */\n    triggerChangeDetection(): void\n    {\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-horizontal-navigation-spacer-item',\n    templateUrl    : './spacer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseHorizontalNavigationSpacerItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Spacer -->\n<div\n    class=\"fuse-horizontal-navigation-item-wrapper\"\n    [ngClass]=\"item.classes?.wrapper\"></div>\n","<!-- Item wrapper -->\n<div\n    class=\"fuse-vertical-navigation-item-wrapper\"\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\">\n\n    <!-- Item with an internal link -->\n    <ng-container *ngIf=\"item.link && !item.externalLink && !item.function && !item.disabled\">\n        <a\n            class=\"fuse-vertical-navigation-item\"\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\n            [routerLink]=\"[item.link]\"\n            [fragment]=\"item.fragment ?? null\"\n            [preserveFragment]=\"item.preserveFragment ?? false\"\n            [queryParams]=\"item.queryParams ?? null\"\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\n            [routerLinkActive]=\"'fuse-vertical-navigation-item-active'\"\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with an external link -->\n    <ng-container *ngIf=\"item.link && item.externalLink && !item.function && !item.disabled\">\n        <a\n            class=\"fuse-vertical-navigation-item\"\n            [href]=\"item.link\"\n            [target]=\"item.target || '_self'\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with a function -->\n    <ng-container *ngIf=\"!item.link && item.function && !item.disabled\">\n        <div\n            class=\"fuse-vertical-navigation-item\"\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item with an internal link and function -->\n    <ng-container *ngIf=\"item.link && !item.externalLink && item.function && !item.disabled\">\n        <a\n            class=\"fuse-vertical-navigation-item\"\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\n            [routerLink]=\"[item.link]\"\n            [fragment]=\"item.fragment ?? null\"\n            [preserveFragment]=\"item.preserveFragment ?? false\"\n            [queryParams]=\"item.queryParams ?? null\"\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\n            [routerLinkActive]=\"'fuse-vertical-navigation-item-active'\"\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with an external link and function -->\n    <ng-container *ngIf=\"item.link && item.externalLink && item.function && !item.disabled\">\n        <a\n            class=\"fuse-vertical-navigation-item\"\n            [href]=\"item.link\"\n            [target]=\"item.target || '_self'\"\n            [matTooltip]=\"item.tooltip || ''\"\n            (click)=\"item.function(item)\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </a>\n    </ng-container>\n\n    <!-- Item with a no link and no function -->\n    <ng-container *ngIf=\"!item.link && !item.function && !item.disabled\">\n        <div\n            class=\"fuse-vertical-navigation-item\"\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Item is disabled -->\n    <ng-container *ngIf=\"item.disabled\">\n        <div\n            class=\"fuse-vertical-navigation-item fuse-vertical-navigation-item-disabled\"\n            [matTooltip]=\"item.tooltip || ''\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\n        </div>\n    </ng-container>\n\n</div>\n\n<!-- Item template -->\n<ng-template #itemTemplate>\n\n    <!-- Icon -->\n    <ng-container *ngIf=\"item.icon\">\n        <mat-icon\n            class=\"fuse-vertical-navigation-item-icon\"\n            [ngClass]=\"item.classes?.icon\"\n            [svgIcon]=\"item.icon\"></mat-icon>\n    </ng-container>\n\n    <!-- Title & Subtitle -->\n    <div class=\"fuse-vertical-navigation-item-title-wrapper\">\n        <div class=\"fuse-vertical-navigation-item-title\">\n            <span [ngClass]=\"item.classes?.title\">\n                {{item.title}}\n            </span>\n        </div>\n        <ng-container *ngIf=\"item.subtitle\">\n            <div class=\"fuse-vertical-navigation-item-subtitle\">\n                <span [ngClass]=\"item.classes?.subtitle\">\n                    {{item.subtitle}}\n                </span>\n            </div>\n        </ng-container>\n    </div>\n\n    <!-- Badge -->\n    <ng-container *ngIf=\"item.badge\">\n        <div class=\"fuse-vertical-navigation-item-badge\">\n            <div\n                class=\"fuse-vertical-navigation-item-badge-content\"\n                [ngClass]=\"item.badge.classes\">\n                {{item.badge.title}}\n            </div>\n        </div>\n    </ng-container>\n\n</ng-template>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IsActiveMatchOptions } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-basic-item',\n    templateUrl    : './basic.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationBasicItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    isActiveMatchOptions: IsActiveMatchOptions;\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService,\n        private _fuseUtilsService: FuseUtilsService\n    )\n    {\n        // Set the equivalent of {exact: false} as default for active match options.\n        // We are not assigning the item.isActiveMatchOptions directly to the\n        // [routerLinkActiveOptions] because if it's \"undefined\" initially, the router\n        // will throw an error and stop working.\n        this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the \"isActiveMatchOptions\" either from item's\n        // \"isActiveMatchOptions\" or the equivalent form of\n        // item's \"exactMatch\" option\n        this.isActiveMatchOptions =\n            this.item.isActiveMatchOptions ?? this.item.exactMatch\n                ? this._fuseUtilsService.exactMatchOptions\n                : this._fuseUtilsService.subsetMatchOptions;\n\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-divider-item',\n    templateUrl    : './divider.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationDividerItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Divider -->\n<div\n    class=\"fuse-vertical-navigation-item-wrapper divider\"\n    [ngClass]=\"item.classes?.wrapper\"></div>\n","<!-- Item wrapper -->\n<div\n    class=\"fuse-vertical-navigation-item-wrapper\"\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\">\n\n    <div class=\"fuse-vertical-navigation-item\">\n\n        <!-- Icon -->\n        <ng-container *ngIf=\"item.icon\">\n            <mat-icon\n                class=\"fuse-vertical-navigation-item-icon\"\n                [ngClass]=\"item.classes?.icon\"\n                [svgIcon]=\"item.icon\"></mat-icon>\n        </ng-container>\n\n        <!-- Title & Subtitle -->\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\n            <div class=\"fuse-vertical-navigation-item-title\">\n                <span [ngClass]=\"item.classes?.title\">\n                    {{item.title}}\n                </span>\n            </div>\n            <ng-container *ngIf=\"item.subtitle\">\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\n                    <span [ngClass]=\"item.classes?.subtitle\">\n                        {{item.subtitle}}\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n\n        <!-- Badge -->\n        <ng-container *ngIf=\"item.badge\">\n            <div class=\"fuse-vertical-navigation-item-badge\">\n                <div\n                    class=\"fuse-vertical-navigation-item-badge-content\"\n                    [ngClass]=\"item.badge.classes\">\n                    {{item.badge.title}}\n                </div>\n            </div>\n        </ng-container>\n\n    </div>\n\n</div>\n\n<ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\n\n    <!-- Skip the hidden items -->\n    <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n        <!-- Basic -->\n        <ng-container *ngIf=\"item.type === 'basic'\">\n            <fuse-vertical-navigation-basic-item\n                [item]=\"item\"\n                [name]=\"name\"></fuse-vertical-navigation-basic-item>\n        </ng-container>\n\n        <!-- Collapsable -->\n        <ng-container *ngIf=\"item.type === 'collapsable'\">\n            <fuse-vertical-navigation-collapsable-item\n                [item]=\"item\"\n                [name]=\"name\"\n                [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\n        </ng-container>\n\n        <!-- Divider -->\n        <ng-container *ngIf=\"item.type === 'divider'\">\n            <fuse-vertical-navigation-divider-item\n                [item]=\"item\"\n                [name]=\"name\"></fuse-vertical-navigation-divider-item>\n        </ng-container>\n\n        <!-- Group -->\n        <ng-container *ngIf=\"item.type === 'group'\">\n            <fuse-vertical-navigation-group-item\n                [item]=\"item\"\n                [name]=\"name\"></fuse-vertical-navigation-group-item>\n        </ng-container>\n\n        <!-- Spacer -->\n        <ng-container *ngIf=\"item.type === 'spacer'\">\n            <fuse-vertical-navigation-spacer-item\n                [item]=\"item\"\n                [name]=\"name\"></fuse-vertical-navigation-spacer-item>\n        </ng-container>\n\n    </ng-container>\n\n</ng-container>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-group-item',\n    templateUrl    : './group.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationGroupItemComponent implements OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_autoCollapse: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() autoCollapse: boolean;\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-spacer-item',\n    templateUrl    : './spacer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationSpacerItemComponent implements OnInit, OnDestroy\n{\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Spacer -->\n<div\n    class=\"fuse-vertical-navigation-item-wrapper\"\n    [ngClass]=\"item.classes?.wrapper\"></div>\n","<div\n    class=\"fuse-vertical-navigation-item-wrapper\"\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\">\n\n    <div\n        class=\"fuse-vertical-navigation-item\"\n        [ngClass]=\"{'fuse-vertical-navigation-item-disabled': item.disabled}\"\n        [matTooltip]=\"item.tooltip || ''\"\n        (click)=\"toggleCollapsable()\">\n\n        <!-- Icon -->\n        <ng-container *ngIf=\"item.icon\">\n            <mat-icon\n                class=\"fuse-vertical-navigation-item-icon\"\n                [ngClass]=\"item.classes?.icon\"\n                [svgIcon]=\"item.icon\"></mat-icon>\n        </ng-container>\n\n        <!-- Title & Subtitle -->\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\n            <div class=\"fuse-vertical-navigation-item-title\">\n                <span [ngClass]=\"item.classes?.title\">\n                    {{item.title}}\n                </span>\n            </div>\n            <ng-container *ngIf=\"item.subtitle\">\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\n                    <span [ngClass]=\"item.classes?.subtitle\">\n                        {{item.subtitle}}\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n\n        <!-- Badge -->\n        <ng-container *ngIf=\"item.badge\">\n            <div class=\"fuse-vertical-navigation-item-badge\">\n                <div\n                    class=\"fuse-vertical-navigation-item-badge-content\"\n                    [ngClass]=\"item.badge.classes\">\n                    {{item.badge.title}}\n                </div>\n            </div>\n        </ng-container>\n\n        <!-- Arrow -->\n        <mat-icon\n            class=\"fuse-vertical-navigation-item-arrow icon-size-4\"\n            [svgIcon]=\"'heroicons_solid:chevron-right'\"></mat-icon>\n\n    </div>\n\n</div>\n\n<div\n    class=\"fuse-vertical-navigation-item-children\"\n    *ngIf=\"!isCollapsed\"\n    @expandCollapse>\n\n    <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\n\n        <!-- Skip the hidden items -->\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n            <!-- Basic -->\n            <ng-container *ngIf=\"item.type === 'basic'\">\n                <fuse-vertical-navigation-basic-item\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-vertical-navigation-basic-item>\n            </ng-container>\n\n            <!-- Collapsable -->\n            <ng-container *ngIf=\"item.type === 'collapsable'\">\n                <fuse-vertical-navigation-collapsable-item\n                    [item]=\"item\"\n                    [name]=\"name\"\n                    [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\n            </ng-container>\n\n            <!-- Divider -->\n            <ng-container *ngIf=\"item.type === 'divider'\">\n                <fuse-vertical-navigation-divider-item\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-vertical-navigation-divider-item>\n            </ng-container>\n\n            <!-- Group -->\n            <ng-container *ngIf=\"item.type === 'group'\">\n                <fuse-vertical-navigation-group-item\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-vertical-navigation-group-item>\n            </ng-container>\n\n            <!-- Spacer -->\n            <ng-container *ngIf=\"item.type === 'spacer'\">\n                <fuse-vertical-navigation-spacer-item\n                    [item]=\"item\"\n                    [name]=\"name\"></fuse-vertical-navigation-spacer-item>\n            </ng-container>\n\n        </ng-container>\n\n    </ng-container>\n\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { filter, Subject, takeUntil } from 'rxjs';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-collapsable-item',\n    templateUrl    : './collapsable.component.html',\n    animations     : fuseAnimations,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationCollapsableItemComponent implements OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_autoCollapse: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() autoCollapse: boolean;\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n\n    isCollapsed: boolean = true;\n    isExpanded: boolean = false;\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _router: Router,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any\n    {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-vertical-navigation-item-collapsed': this.isCollapsed,\n            'fuse-vertical-navigation-item-expanded' : this.isExpanded\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // If the item has a children that has a matching url with the current url, expand...\n        if ( this._hasActiveChild(this.item, this._router.url) )\n        {\n            this.expand();\n        }\n        // Otherwise...\n        else\n        {\n            // If the autoCollapse is on, collapse...\n            if ( this.autoCollapse )\n            {\n                this.collapse();\n            }\n        }\n\n        // Listen for the onCollapsableItemCollapsed from the service\n        this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((collapsedItem) => {\n\n                // Check if the collapsed item is null\n                if ( collapsedItem === null )\n                {\n                    return;\n                }\n\n                // Collapse if this is a children of the collapsed item\n                if ( this._isChildrenOf(collapsedItem, this.item) )\n                {\n                    this.collapse();\n                }\n            });\n\n        // Listen for the onCollapsableItemExpanded from the service if the autoCollapse is on\n        if ( this.autoCollapse )\n        {\n            this._fuseVerticalNavigationComponent.onCollapsableItemExpanded\n                .pipe(takeUntil(this._unsubscribeAll))\n                .subscribe((expandedItem) => {\n\n                    // Check if the expanded item is null\n                    if ( expandedItem === null )\n                    {\n                        return;\n                    }\n\n                    // Check if this is a parent of the expanded item\n                    if ( this._isChildrenOf(this.item, expandedItem) )\n                    {\n                        return;\n                    }\n\n                    // Check if this has a children with a matching url with the current active url\n                    if ( this._hasActiveChild(this.item, this._router.url) )\n                    {\n                        return;\n                    }\n\n                    // Check if this is the expanded item\n                    if ( this.item === expandedItem )\n                    {\n                        return;\n                    }\n\n                    // If none of the above conditions are matched, collapse this item\n                    this.collapse();\n                });\n        }\n\n        // Attach a listener to the NavigationEnd event\n        this._router.events\n            .pipe(\n                filter((event): event is NavigationEnd => event instanceof NavigationEnd),\n                takeUntil(this._unsubscribeAll)\n            )\n            .subscribe((event: NavigationEnd) => {\n\n                // If the item has a children that has a matching url with the current url, expand...\n                if ( this._hasActiveChild(this.item, event.urlAfterRedirects) )\n                {\n                    this.expand();\n                }\n                // Otherwise...\n                else\n                {\n                    // If the autoCollapse is on, collapse...\n                    if ( this.autoCollapse )\n                    {\n                        this.collapse();\n                    }\n                }\n            });\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Collapse\n     */\n    collapse(): void\n    {\n        // Return if the item is disabled\n        if ( this.item.disabled )\n        {\n            return;\n        }\n\n        // Return if the item is already collapsed\n        if ( this.isCollapsed )\n        {\n            return;\n        }\n\n        // Collapse it\n        this.isCollapsed = true;\n        this.isExpanded = !this.isCollapsed;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Execute the observable\n        this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.next(this.item);\n    }\n\n    /**\n     * Expand\n     */\n    expand(): void\n    {\n        // Return if the item is disabled\n        if ( this.item.disabled )\n        {\n            return;\n        }\n\n        // Return if the item is already expanded\n        if ( !this.isCollapsed )\n        {\n            return;\n        }\n\n        // Expand it\n        this.isCollapsed = false;\n        this.isExpanded = !this.isCollapsed;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n\n        // Execute the observable\n        this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.next(this.item);\n    }\n\n    /**\n     * Toggle collapsable\n     */\n    toggleCollapsable(): void\n    {\n        // Toggle collapse/expand\n        if ( this.isCollapsed )\n        {\n            this.expand();\n        }\n        else\n        {\n            this.collapse();\n        }\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Check if the given item has the given url\n     * in one of its children\n     *\n     * @param item\n     * @param currentUrl\n     * @private\n     */\n    private _hasActiveChild(item: FuseNavigationItem, currentUrl: string): boolean\n    {\n        const children = item.children;\n\n        if ( !children )\n        {\n            return false;\n        }\n\n        for ( const child of children )\n        {\n            if ( child.children )\n            {\n                if ( this._hasActiveChild(child, currentUrl) )\n                {\n                    return true;\n                }\n            }\n\n            // Check if the child has a link and is active\n            if ( child.link && this._router.isActive(child.link, child.exactMatch || false) )\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if this is a children\n     * of the given item\n     *\n     * @param parent\n     * @param item\n     * @private\n     */\n    private _isChildrenOf(parent: FuseNavigationItem, item: FuseNavigationItem): boolean\n    {\n        const children = parent.children;\n\n        if ( !children )\n        {\n            return false;\n        }\n\n        if ( children.indexOf(item) > -1 )\n        {\n            return true;\n        }\n\n        for ( const child of children )\n        {\n            if ( child.children )\n            {\n                if ( this._isChildrenOf(child, item) )\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","<div\n    class=\"fuse-vertical-navigation-item-wrapper\"\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\n    [ngClass]=\"item.classes?.wrapper\">\n\n    <div\n        class=\"fuse-vertical-navigation-item\"\n        [ngClass]=\"{'fuse-vertical-navigation-item-active': active,\n                    'fuse-vertical-navigation-item-disabled': item.disabled,\n                    'fuse-vertical-navigation-item-active-forced': item.active}\"\n        [matTooltip]=\"item.tooltip || ''\">\n\n        <!-- Icon -->\n        <ng-container *ngIf=\"item.icon\">\n            <mat-icon\n                class=\"fuse-vertical-navigation-item-icon\"\n                [ngClass]=\"item.classes?.icon\"\n                [svgIcon]=\"item.icon\"></mat-icon>\n        </ng-container>\n\n        <!-- Title & Subtitle -->\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\n            <div class=\"fuse-vertical-navigation-item-title\">\n                <span [ngClass]=\"item.classes?.title\">\n                    {{item.title}}\n                </span>\n            </div>\n            <ng-container *ngIf=\"item.subtitle\">\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\n                    <span [ngClass]=\"item.classes?.subtitle\">\n                        {{item.subtitle}}\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n\n        <!-- Badge -->\n        <ng-container *ngIf=\"item.badge\">\n            <div class=\"fuse-vertical-navigation-item-badge\">\n                <div\n                    class=\"fuse-vertical-navigation-item-badge-content\"\n                    [ngClass]=\"item.badge.classes\">\n                    {{item.badge.title}}\n                </div>\n            </div>\n        </ng-container>\n\n    </div>\n\n</div>\n\n<ng-container *ngIf=\"!skipChildren\">\n\n    <div class=\"fuse-vertical-navigation-item-children\">\n\n        <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\n\n            <!-- Skip the hidden items -->\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\n\n                <!-- Basic -->\n                <ng-container *ngIf=\"item.type === 'basic'\">\n                    <fuse-vertical-navigation-basic-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-basic-item>\n                </ng-container>\n\n                <!-- Collapsable -->\n                <ng-container *ngIf=\"item.type === 'collapsable'\">\n                    <fuse-vertical-navigation-collapsable-item\n                        [item]=\"item\"\n                        [name]=\"name\"\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\n                </ng-container>\n\n                <!-- Divider -->\n                <ng-container *ngIf=\"item.type === 'divider'\">\n                    <fuse-vertical-navigation-divider-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-divider-item>\n                </ng-container>\n\n                <!-- Group -->\n                <ng-container *ngIf=\"item.type === 'group'\">\n                    <fuse-vertical-navigation-group-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-group-item>\n                </ng-container>\n\n                <!-- Spacer -->\n                <ng-container *ngIf=\"item.type === 'spacer'\">\n                    <fuse-vertical-navigation-spacer-item\n                        [item]=\"item\"\n                        [name]=\"name\"></fuse-vertical-navigation-spacer-item>\n                </ng-container>\n\n            </ng-container>\n\n        </ng-container>\n\n    </div>\n\n</ng-container>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { filter, Subject, takeUntil } from 'rxjs';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\n\n@Component({\n    selector       : 'fuse-vertical-navigation-aside-item',\n    templateUrl    : './aside.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FuseVerticalNavigationAsideItemComponent implements OnChanges, OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_autoCollapse: BooleanInput;\n    static ngAcceptInputType_skipChildren: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() activeItemId: string;\n    @Input() autoCollapse: boolean;\n    @Input() item: FuseNavigationItem;\n    @Input() name: string;\n    @Input() skipChildren: boolean;\n\n    active: boolean = false;\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _router: Router,\n        private _fuseNavigationService: FuseNavigationService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Active item id\n        if ( 'activeItemId' in changes )\n        {\n            // Mark if active\n            this._markIfActive(this._router.url);\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Mark if active\n        this._markIfActive(this._router.url);\n\n        // Attach a listener to the NavigationEnd event\n        this._router.events\n            .pipe(\n                filter((event): event is NavigationEnd => event instanceof NavigationEnd),\n                takeUntil(this._unsubscribeAll)\n            )\n            .subscribe((event: NavigationEnd) => {\n\n                // Mark if active\n                this._markIfActive(event.urlAfterRedirects);\n            });\n\n        // Get the parent navigation component\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\n\n        // Subscribe to onRefreshed on the navigation component\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Check if the given item has the given url\n     * in one of its children\n     *\n     * @param item\n     * @param currentUrl\n     * @private\n     */\n    private _hasActiveChild(item: FuseNavigationItem, currentUrl: string): boolean\n    {\n        const children = item.children;\n\n        if ( !children )\n        {\n            return false;\n        }\n\n        for ( const child of children )\n        {\n            if ( child.children )\n            {\n                if ( this._hasActiveChild(child, currentUrl) )\n                {\n                    return true;\n                }\n            }\n\n            // Skip items other than 'basic'\n            if ( child.type !== 'basic' )\n            {\n                continue;\n            }\n\n            // Check if the child has a link and is active\n            if ( child.link && this._router.isActive(child.link, child.exactMatch || false) )\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Decide and mark if the item is active\n     *\n     * @private\n     */\n    private _markIfActive(currentUrl: string): void\n    {\n        // Check if the activeItemId is equals to this item id\n        this.active = this.activeItemId === this.item.id;\n\n        // If the aside has a children that is active,\n        // always mark it as active\n        if ( this._hasActiveChild(this.item, currentUrl) )\n        {\n            this.active = true;\n        }\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FuseScrollbarModule } from '@fuse/directives/scrollbar/public-api';\nimport { FuseHorizontalNavigationBasicItemComponent } from '@fuse/components/navigation/horizontal/components/basic/basic.component';\nimport { FuseHorizontalNavigationBranchItemComponent } from '@fuse/components/navigation/horizontal/components/branch/branch.component';\nimport { FuseHorizontalNavigationDividerItemComponent } from '@fuse/components/navigation/horizontal/components/divider/divider.component';\nimport { FuseHorizontalNavigationSpacerItemComponent } from '@fuse/components/navigation/horizontal/components/spacer/spacer.component';\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\nimport { FuseVerticalNavigationAsideItemComponent } from '@fuse/components/navigation/vertical/components/aside/aside.component';\nimport { FuseVerticalNavigationBasicItemComponent } from '@fuse/components/navigation/vertical/components/basic/basic.component';\nimport { FuseVerticalNavigationCollapsableItemComponent } from '@fuse/components/navigation/vertical/components/collapsable/collapsable.component';\nimport { FuseVerticalNavigationDividerItemComponent } from '@fuse/components/navigation/vertical/components/divider/divider.component';\nimport { FuseVerticalNavigationGroupItemComponent } from '@fuse/components/navigation/vertical/components/group/group.component';\nimport { FuseVerticalNavigationSpacerItemComponent } from '@fuse/components/navigation/vertical/components/spacer/spacer.component';\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\n\n@NgModule({\n    declarations: [\n        FuseHorizontalNavigationBasicItemComponent,\n        FuseHorizontalNavigationBranchItemComponent,\n        FuseHorizontalNavigationDividerItemComponent,\n        FuseHorizontalNavigationSpacerItemComponent,\n        FuseHorizontalNavigationComponent,\n        FuseVerticalNavigationAsideItemComponent,\n        FuseVerticalNavigationBasicItemComponent,\n        FuseVerticalNavigationCollapsableItemComponent,\n        FuseVerticalNavigationDividerItemComponent,\n        FuseVerticalNavigationGroupItemComponent,\n        FuseVerticalNavigationSpacerItemComponent,\n        FuseVerticalNavigationComponent\n    ],\n    imports     : [\n        CommonModule,\n        RouterModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatMenuModule,\n        MatTooltipModule,\n        FuseScrollbarModule\n    ],\n    exports     : [\n        FuseHorizontalNavigationComponent,\n        FuseVerticalNavigationComponent\n    ]\n})\nexport class FuseNavigationModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NotificationsComponent } from 'app/layout/common/notifications/notifications.component';\nimport { SharedModule } from 'app/shared/shared.module';\n\n@NgModule({\n  declarations: [NotificationsComponent],\n  imports: [\n    RouterModule,\n    OverlayModule,\n    PortalModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    SharedModule,\n  ],\n  exports: [NotificationsComponent],\n})\nexport class NotificationsModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BlockScrollStrategy, Overlay } from '@angular/cdk/overlay';\nimport {\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  MatAutocompleteModule,\n} from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { SearchComponent } from 'app/layout/common/search/search.component';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    RouterModule.forChild([]),\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    SharedModule,\n  ],\n  exports: [SearchComponent],\n  providers: [\n    {\n      provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n      useFactory: (overlay: Overlay) => (): BlockScrollStrategy =>\n        overlay.scrollStrategies.block(),\n      deps: [Overlay],\n    },\n  ],\n})\nexport class SearchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ShortcutsComponent } from 'app/layout/common/shortcuts/shortcuts.component';\n\n@NgModule({\n    declarations: [\n        ShortcutsComponent\n    ],\n    imports     : [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        OverlayModule,\n        PortalModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatSlideToggleModule,\n        MatTooltipModule\n    ],\n    exports     : [\n        ShortcutsComponent\n    ]\n})\nexport class ShortcutsModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { UserComponent } from 'app/layout/common/user/user.component';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { FirstLastNames } from './user.pipe';\n\n@NgModule({\n  declarations: [\n    UserComponent,\n    FirstLastNames,\n  ],\n  imports: [\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    SharedModule,\n  ],\n  exports: [UserComponent],\n})\nexport class UserModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { FuseNavigationModule } from '@fuse/components/navigation';\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\nimport { SearchModule } from 'app/layout/common/search/search.module';\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\nimport { UserModule } from 'app/layout/common/user/user.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { EnterpriseLayoutComponent } from 'app/layout/layouts/horizontal/enterprise/enterprise.component';\n\n@NgModule({\n  declarations: [EnterpriseLayoutComponent],\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    FuseFullscreenModule,\n    FuseLoadingBarModule,\n    FuseNavigationModule,\n    NotificationsModule,\n    SearchModule,\n    ShortcutsModule,\n    UserModule,\n    SharedModule,\n  ],\n  exports: [EnterpriseLayoutComponent],\n})\nexport class EnterpriseLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { FuseNavigationModule } from '@fuse/components/navigation';\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\nimport { SearchModule } from 'app/layout/common/search/search.module';\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\nimport { UserModule } from 'app/layout/common/user/user.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ModernLayoutComponent } from 'app/layout/layouts/horizontal/modern/modern.component';\n\n@NgModule({\n  declarations: [ModernLayoutComponent],\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    FuseFullscreenModule,\n    FuseLoadingBarModule,\n    FuseNavigationModule,\n    NotificationsModule,\n    SearchModule,\n    ShortcutsModule,\n    UserModule,\n    SharedModule,\n  ],\n  exports: [ModernLayoutComponent],\n})\nexport class ModernLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { FuseNavigationModule } from '@fuse/components/navigation';\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\nimport { SearchModule } from 'app/layout/common/search/search.module';\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\nimport { UserModule } from 'app/layout/common/user/user.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { ClassicLayoutComponent } from 'app/layout/layouts/vertical/classic/classic.component';\n\n@NgModule({\n  declarations: [ClassicLayoutComponent],\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    FuseFullscreenModule,\n    FuseLoadingBarModule,\n    FuseNavigationModule,\n    NotificationsModule,\n    SearchModule,\n    ShortcutsModule,\n    UserModule,\n    SharedModule,\n  ],\n  exports: [ClassicLayoutComponent],\n})\nexport class ClassicLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { FuseNavigationModule } from '@fuse/components/navigation';\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\nimport { SearchModule } from 'app/layout/common/search/search.module';\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\nimport { UserModule } from 'app/layout/common/user/user.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { CompactLayoutComponent } from 'app/layout/layouts/vertical/compact/compact.component';\n\n@NgModule({\n  declarations: [CompactLayoutComponent],\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    FuseFullscreenModule,\n    FuseLoadingBarModule,\n    FuseNavigationModule,\n    NotificationsModule,\n    SearchModule,\n    ShortcutsModule,\n    UserModule,\n    SharedModule,\n  ],\n  exports: [CompactLayoutComponent],\n})\nexport class CompactLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\nimport { FuseNavigationModule } from '@fuse/components/navigation';\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\nimport { SearchModule } from 'app/layout/common/search/search.module';\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\nimport { UserModule } from 'app/layout/common/user/user.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { DenseLayoutComponent } from 'app/layout/layouts/vertical/dense/dense.component';\n\n@NgModule({\n  declarations: [DenseLayoutComponent],\n  imports: [\n    HttpClientModule,\n    RouterModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    FuseFullscreenModule,\n    FuseLoadingBarModule,\n    FuseNavigationModule,\n    NotificationsModule,\n    SearchModule,\n    ShortcutsModule,\n    UserModule,\n    SharedModule,\n  ],\n  exports: [DenseLayoutComponent],\n})\nexport class DenseLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FuseDrawerComponent } from '@fuse/components/drawer/drawer.component';\n\n@NgModule({\n    declarations: [\n        FuseDrawerComponent\n    ],\n    imports     : [\n        CommonModule\n    ],\n    exports     : [\n        FuseDrawerComponent\n    ]\n})\nexport class FuseDrawerModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FuseDrawerModule } from '@fuse/components/drawer';\nimport { SettingsComponent } from 'app/layout/common/settings/settings.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n    declarations: [\n        SettingsComponent\n    ],\n    imports     : [\n        CommonModule,\n        RouterModule,\n        MatIconModule,\n        MatTooltipModule,\n        FuseDrawerModule,\n        MatButtonModule\n    ],\n    exports     : [\n        SettingsComponent\n    ]\n})\nexport class SettingsModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutComponent } from 'app/layout/layout.component';\nimport { EmptyLayoutModule } from 'app/layout/layouts/empty/empty.module';\nimport { EnterpriseLayoutModule } from 'app/layout/layouts/horizontal/enterprise/enterprise.module';\nimport { ModernLayoutModule } from 'app/layout/layouts/horizontal/modern/modern.module';\nimport { ClassicLayoutModule } from 'app/layout/layouts/vertical/classic/classic.module';\nimport { CompactLayoutModule } from 'app/layout/layouts/vertical/compact/compact.module';\nimport { DenseLayoutModule } from 'app/layout/layouts/vertical/dense/dense.module';\nimport { SettingsModule } from 'app/layout/common/settings/settings.module';\nimport { SharedModule } from 'app/shared/shared.module';\n\nconst layoutModules = [\n  // Empty\n  EmptyLayoutModule,\n\n  // Horizontal navigation\n  EnterpriseLayoutModule,\n  ModernLayoutModule,\n\n  // Vertical navigation\n  ClassicLayoutModule,\n  CompactLayoutModule,\n  DenseLayoutModule,\n];\n\n@NgModule({\n  declarations: [LayoutComponent],\n  imports: [SharedModule, SettingsModule, ...layoutModules],\n  exports: [LayoutComponent, ...layoutModules],\n})\nexport class LayoutModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector   : 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls  : ['./app.component.scss']\n})\nexport class AppComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, of, switchMap } from 'rxjs';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n\n  constructor(private _authService: AuthService, private _router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const redirectUrl = state.url === '/sign-out' ? '/' : state.url;\n    return this._check(redirectUrl);\n  }\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const redirectUrl = state.url === '/sign-out' ? '/' : state.url;\n    return this._check(redirectUrl);\n  }\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this._check('/');\n  }\n\n  private _check(redirectURL: string): Observable<boolean> {\n    // Check the authentication status\n    return this._authService.check().pipe(\n      switchMap((authenticated) => {\n        // If the user is not authenticated...\n        if (!authenticated) {\n          // Redirect to the sign-in page\n          this._router.navigate(['sign-in']); //, { queryParams: { redirectURL } }\n\n          // Prevent the access\n          return of(false);\n        }\n\n        // Allow the access\n        return of(true);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, of, switchMap } from 'rxjs';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoAuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private _authService: AuthService, private _router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this._check();\n  }\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this._check();\n  }\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this._check();\n  }\n\n  private _check(): Observable<boolean> {\n    // Check the authentication status\n    return this._authService.check().pipe(\n      switchMap((authenticated) => {\n        // If the user is authenticated...\n        if (authenticated) {\n          // Redirect to the root\n          this._router.navigate(['']);\n\n          // Prevent the access\n          return of(false);\n        }\n\n        // Allow the access\n        return of(true);\n      })\n    );\n  }\n}\n","import { Version } from '@fuse/version/version';\n\nexport const FUSE_VERSION = new Version('15.1.0').full;\n","/**\n * Derived from Angular's version class\n */\nexport class Version\n{\n    public readonly full: string;\n    public readonly major: string;\n    public readonly minor: string;\n    public readonly patch: string;\n\n    /**\n     * Constructor\n     */\n    constructor(public version: string)\n    {\n        this.full = version;\n        this.major = version.split('.')[0];\n        this.minor = version.split('.')[1];\n        this.patch = version.split('.').slice(2).join('.');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FuseDrawerComponent } from '@fuse/components/drawer/drawer.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FuseDrawerService\n{\n    private _componentRegistry: Map<string, FuseDrawerComponent> = new Map<string, FuseDrawerComponent>();\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Register drawer component\n     *\n     * @param name\n     * @param component\n     */\n    registerComponent(name: string, component: FuseDrawerComponent): void\n    {\n        this._componentRegistry.set(name, component);\n    }\n\n    /**\n     * Deregister drawer component\n     *\n     * @param name\n     */\n    deregisterComponent(name: string): void\n    {\n        this._componentRegistry.delete(name);\n    }\n\n    /**\n     * Get drawer component from the registry\n     *\n     * @param name\n     */\n    getComponent(name: string): FuseDrawerComponent | undefined\n    {\n        return this._componentRegistry.get(name);\n    }\n}\n","import { Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\nimport { FuseDrawerMode, FuseDrawerPosition } from '@fuse/components/drawer/drawer.types';\nimport { FuseDrawerService } from '@fuse/components/drawer/drawer.service';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n    selector     : 'fuse-drawer',\n    templateUrl  : './drawer.component.html',\n    styleUrls    : ['./drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs     : 'fuseDrawer'\n})\nexport class FuseDrawerComponent implements OnChanges, OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_fixed: BooleanInput;\n    static ngAcceptInputType_opened: BooleanInput;\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() fixed: boolean = false;\n    @Input() mode: FuseDrawerMode = 'side';\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() opened: boolean = false;\n    @Input() position: FuseDrawerPosition = 'left';\n    @Input() transparentOverlay: boolean = false;\n    @Output() readonly fixedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() readonly modeChanged: EventEmitter<FuseDrawerMode> = new EventEmitter<FuseDrawerMode>();\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() readonly positionChanged: EventEmitter<FuseDrawerPosition> = new EventEmitter<FuseDrawerPosition>();\n\n    private _animationsEnabled: boolean = false;\n    private readonly _handleOverlayClick: any;\n    private _hovered: boolean = false;\n    private _overlay: HTMLElement;\n    private _player: AnimationPlayer;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _animationBuilder: AnimationBuilder,\n        private _elementRef: ElementRef,\n        private _renderer2: Renderer2,\n        private _fuseDrawerService: FuseDrawerService,\n        private _fuseUtilsService: FuseUtilsService\n    )\n    {\n        this._handleOverlayClick = (): void => {\n            this.close();\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any\n    {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-drawer-animations-enabled'         : this._animationsEnabled,\n            'fuse-drawer-fixed'                      : this.fixed,\n            'fuse-drawer-hover'                      : this._hovered,\n            [`fuse-drawer-mode-${this.mode}`]        : true,\n            'fuse-drawer-opened'                     : this.opened,\n            [`fuse-drawer-position-${this.position}`]: true\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    /**\n     * Host binding for component inline styles\n     */\n    @HostBinding('style') get styleList(): any\n    {\n        return {\n            'visibility': this.opened ? 'visible' : 'hidden'\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Decorated methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On mouseenter\n     *\n     * @private\n     */\n    @HostListener('mouseenter')\n    private _onMouseenter(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = true;\n    }\n\n    /**\n     * On mouseleave\n     *\n     * @private\n     */\n    @HostListener('mouseleave')\n    private _onMouseleave(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Fixed\n        if ( 'fixed' in changes )\n        {\n            // Coerce the value to a boolean\n            this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\n\n            // Execute the observable\n            this.fixedChanged.next(this.fixed);\n        }\n\n        // Mode\n        if ( 'mode' in changes )\n        {\n            // Get the previous and current values\n            const previousMode = changes.mode.previousValue;\n            const currentMode = changes.mode.currentValue;\n\n            // Disable the animations\n            this._disableAnimations();\n\n            // If the mode changes: 'over -> side'\n            if ( previousMode === 'over' && currentMode === 'side' )\n            {\n                // Hide the overlay\n                this._hideOverlay();\n            }\n\n            // If the mode changes: 'side -> over'\n            if ( previousMode === 'side' && currentMode === 'over' )\n            {\n                // If the drawer is opened\n                if ( this.opened )\n                {\n                    // Show the overlay\n                    this._showOverlay();\n                }\n            }\n\n            // Execute the observable\n            this.modeChanged.next(currentMode);\n\n            // Enable the animations after a delay\n            // The delay must be bigger than the current transition-duration\n            // to make sure nothing will be animated while the mode is changing\n            setTimeout(() => {\n                this._enableAnimations();\n            }, 500);\n        }\n\n        // Opened\n        if ( 'opened' in changes )\n        {\n            // Coerce the value to a boolean\n            const open = coerceBooleanProperty(changes.opened.currentValue);\n\n            // Open/close the drawer\n            this._toggleOpened(open);\n        }\n\n        // Position\n        if ( 'position' in changes )\n        {\n            // Execute the observable\n            this.positionChanged.next(this.position);\n        }\n\n        // Transparent overlay\n        if ( 'transparentOverlay' in changes )\n        {\n            // Coerce the value to a boolean\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Register the drawer\n        this._fuseDrawerService.registerComponent(this.name, this);\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Finish the animation\n        if ( this._player )\n        {\n            this._player.finish();\n        }\n\n        // Deregister the drawer from the registry\n        this._fuseDrawerService.deregisterComponent(this.name);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Open the drawer\n     */\n    open(): void\n    {\n        // Return if the drawer has already opened\n        if ( this.opened )\n        {\n            return;\n        }\n\n        // Open the drawer\n        this._toggleOpened(true);\n    }\n\n    /**\n     * Close the drawer\n     */\n    close(): void\n    {\n        // Return if the drawer has already closed\n        if ( !this.opened )\n        {\n            return;\n        }\n\n        // Close the drawer\n        this._toggleOpened(false);\n    }\n\n    /**\n     * Toggle the drawer\n     */\n    toggle(): void\n    {\n        if ( this.opened )\n        {\n            this.close();\n        }\n        else\n        {\n            this.open();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Enable the animations\n     *\n     * @private\n     */\n    private _enableAnimations(): void\n    {\n        // Return if the animations are already enabled\n        if ( this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Enable the animations\n        this._animationsEnabled = true;\n    }\n\n    /**\n     * Disable the animations\n     *\n     * @private\n     */\n    private _disableAnimations(): void\n    {\n        // Return if the animations are already disabled\n        if ( !this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Disable the animations\n        this._animationsEnabled = false;\n    }\n\n    /**\n     * Show the backdrop\n     *\n     * @private\n     */\n    private _showOverlay(): void\n    {\n        // Create the backdrop element\n        this._overlay = this._renderer2.createElement('div');\n\n        // Add a class to the backdrop element\n        this._overlay.classList.add('fuse-drawer-overlay');\n\n        // Add a class depending on the fixed option\n        if ( this.fixed )\n        {\n            this._overlay.classList.add('fuse-drawer-overlay-fixed');\n        }\n\n        // Add a class depending on the transparentOverlay option\n        if ( this.transparentOverlay )\n        {\n            this._overlay.classList.add('fuse-drawer-overlay-transparent');\n        }\n\n        // Append the backdrop to the parent of the drawer\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\n\n        // Create enter animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            style({opacity: 0}),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Add an event listener to the overlay\n        this._overlay.addEventListener('click', this._handleOverlayClick);\n    }\n\n    /**\n     * Hide the backdrop\n     *\n     * @private\n     */\n    private _hideOverlay(): void\n    {\n        if ( !this._overlay )\n        {\n            return;\n        }\n\n        // Create the leave animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Once the animation is done...\n        this._player.onDone(() => {\n\n            // If the overlay still exists...\n            if ( this._overlay )\n            {\n                // Remove the event listener\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\n\n                // Remove the overlay\n                this._overlay.parentNode.removeChild(this._overlay);\n                this._overlay = null;\n            }\n        });\n    }\n\n    /**\n     * Open/close the drawer\n     *\n     * @param open\n     * @private\n     */\n    private _toggleOpened(open: boolean): void\n    {\n        // Set the opened\n        this.opened = open;\n\n        // Enable the animations\n        this._enableAnimations();\n\n        // If the mode is 'over'\n        if ( this.mode === 'over' )\n        {\n            // If the drawer opens, show the overlay\n            if ( open )\n            {\n                this._showOverlay();\n            }\n            // Otherwise, close the overlay\n            else\n            {\n                this._hideOverlay();\n            }\n        }\n\n        // Execute the observable\n        this.openedChanged.next(open);\n    }\n}\n","<div class=\"fuse-drawer-content\">\n    <ng-content></ng-content>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SettingsService {\n  opened$: Observable<boolean>;\n  private _opened: boolean = false;\n  private _openedSubject: BehaviorSubject<boolean>;\n\n  constructor() {\n    this._openedSubject = new BehaviorSubject(this._opened);\n    this.opened$ = this._openedSubject.asObservable();\n  }\n\n  openSettingsDrawer(): void {\n    this._opened = true;\n    this._openedSubject.next(true);\n  }\n\n  closeSettingsDrawer(): void {\n    this._opened = false;\n    this._openedSubject.next(false);\n  }\n\n  toggleSettingsDrawer(): void {\n    this._opened = !this._opened;\n    this._openedSubject.next(this._opened);\n  }\n}\n","<fuse-drawer\n  class=\"w-screen min-w-screen sm:w-100 sm:min-w-100 z-999\"\n  fixed\n  [mode]=\"'over'\"\n  [name]=\"'settingsDrawer'\"\n  [position]=\"'right'\"\n  #settingsDrawer\n>\n  <div class=\"flex flex-col w-full overflow-auto bg-card\">\n    <div\n      class=\"flex flex-row items-center px-6 h-20 min-h-20 text-white bg-primary\"\n    >\n      <mat-icon\n        class=\"icon-size-7 text-current\"\n        [svgIcon]=\"'heroicons_solid:cog'\"\n      ></mat-icon>\n      <div class=\"ml-3 text-2xl font-semibold tracking-tight\">Settings</div>\n      <button class=\"ml-auto\" mat-icon-button (click)=\"closeSettingsDrawer()\">\n        <mat-icon\n          class=\"text-current\"\n          [svgIcon]=\"'heroicons_outline:x'\"\n        ></mat-icon>\n      </button>\n    </div>\n\n    <div class=\"flex flex-col p-6\">\n      <!-- Theme -->\n      <div class=\"text-md font-semibold text-secondary\">THEME</div>\n      <div class=\"grid grid-cols-2 sm:grid-cols-3 gap-3 mt-6\">\n        <ng-container *ngFor=\"let theme of config.themes\">\n          <div\n            class=\"flex items-center justify-center px-4 py-3 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\n            [class.ring-2]=\"config.theme === theme.id\"\n            [ngClass]=\"theme.id\"\n            (click)=\"setTheme(theme.id)\"\n          >\n            <div class=\"flex-0 w-3 h-3 rounded-full bg-primary\"></div>\n            <div\n              class=\"ml-2.5 font-medium leading-5 truncate\"\n              [class.text-secondary]=\"config.theme !== theme.id\"\n            >\n              {{ theme.name }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n\n      <hr class=\"my-8\" />\n\n      <!-- Scheme -->\n      <div class=\"text-md font-semibold text-secondary\">SCHEME</div>\n      <div class=\"grid grid-cols-3 gap-3 justify-items-start mt-6\">\n        <!-- Auto -->\n        <div\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\n          [class.ring-2]=\"config.scheme === 'auto'\"\n          matTooltip=\"Automatically sets the scheme based on user's operating system's color scheme preference using 'prefer-color-scheme' media query.\"\n          (click)=\"setScheme('auto')\"\n        >\n          <div class=\"flex items-center rounded-full overflow-hidden\">\n            <mat-icon\n              class=\"icon-size-5\"\n              [svgIcon]=\"'heroicons_solid:lightning-bolt'\"\n            ></mat-icon>\n          </div>\n          <div\n            class=\"flex items-center ml-2 font-medium leading-5\"\n            [class.text-secondary]=\"config.scheme !== 'auto'\"\n          >\n            Auto\n          </div>\n        </div>\n        <!-- Dark -->\n        <div\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\n          [class.ring-2]=\"config.scheme === 'dark'\"\n          (click)=\"setScheme('dark')\"\n        >\n          <div class=\"flex items-center rounded-full overflow-hidden\">\n            <mat-icon\n              class=\"icon-size-5\"\n              [svgIcon]=\"'heroicons_solid:moon'\"\n            ></mat-icon>\n          </div>\n          <div\n            class=\"flex items-center ml-2 font-medium leading-5\"\n            [class.text-secondary]=\"config.scheme !== 'dark'\"\n          >\n            Dark\n          </div>\n        </div>\n        <!-- Light -->\n        <div\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\n          [class.ring-2]=\"config.scheme === 'light'\"\n          (click)=\"setScheme('light')\"\n        >\n          <div class=\"flex items-center rounded-full overflow-hidden\">\n            <mat-icon\n              class=\"icon-size-5\"\n              [svgIcon]=\"'heroicons_solid:sun'\"\n            ></mat-icon>\n          </div>\n          <div\n            class=\"flex items-center ml-2 font-medium leading-5\"\n            [class.text-secondary]=\"config.scheme !== 'light'\"\n          >\n            Light\n          </div>\n        </div>\n      </div>\n\n      <hr class=\"my-8\" />\n\n      <!-- Layout -->\n      <div class=\"text-md font-semibold text-secondary\">LAYOUT</div>\n      <div class=\"grid grid-cols-3 gap-3 mt-6\">\n\n        <!-- Classic -->\n        <div\n          class=\"flex flex-col cursor-pointer\"\n          (click)=\"setLayout('classic')\"\n        >\n          <div\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\n            [class.border-primary]=\"config.layout === 'classic'\"\n          >\n            <div class=\"w-8 bg-gray-100 dark:bg-gray-800\">\n              <div class=\"mt-3 mx-1.5 space-y-1\">\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\n              </div>\n            </div>\n            <div class=\"flex flex-col flex-auto border-l\">\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                </div>\n              </div>\n              <div\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\n              ></div>\n            </div>\n          </div>\n          <div\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\n            [class.text-primary]=\"config.layout === 'classic'\"\n          >\n            Classic\n          </div>\n        </div>\n\n        <!-- Compact -->\n        <div\n          class=\"flex flex-col cursor-pointer\"\n          (click)=\"setLayout('compact')\"\n        >\n          <div\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\n            [class.border-primary]=\"config.layout === 'compact'\"\n          >\n            <div class=\"w-5 bg-gray-100 dark:bg-gray-800\">\n              <div\n                class=\"w-3 h-3 mt-2 mx-auto rounded-sm bg-gray-300 dark:bg-gray-700\"\n              ></div>\n              <div class=\"flex flex-col items-center w-full mt-2 space-y-1\">\n                <div\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n                <div\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n                <div\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n              </div>\n            </div>\n            <div class=\"flex flex-col flex-auto border-l\">\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                </div>\n              </div>\n              <div\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\n              ></div>\n            </div>\n          </div>\n          <div\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\n            [class.text-primary]=\"config.layout === 'compact'\"\n          >\n            Compact\n          </div>\n        </div>\n\n        <!-- Dense -->\n        <div class=\"flex flex-col cursor-pointer\" (click)=\"setLayout('dense')\">\n          <div\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\n            [class.border-primary]=\"config.layout === 'dense'\"\n          >\n            <div class=\"w-4 bg-gray-100 dark:bg-gray-800\">\n              <div\n                class=\"w-2 h-2 mt-2 mx-auto rounded-sm bg-gray-300 dark:bg-gray-700\"\n              ></div>\n              <div class=\"flex flex-col items-center w-full mt-2 space-y-1\">\n                <div\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n                <div\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n                <div\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\n                ></div>\n              </div>\n            </div>\n            <div class=\"flex flex-col flex-auto border-l\">\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                  <div\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\n                  ></div>\n                </div>\n              </div>\n              <div\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\n              ></div>\n            </div>\n          </div>\n          <div\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\n            [class.text-primary]=\"config.layout === 'dense'\"\n          >\n            Dense\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</fuse-drawer>\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseConfigService } from '@fuse/services/config';\nimport { AppConfig, Scheme, Theme, Themes } from 'app/core/config/app.config';\nimport { Layout } from 'app/layout/layout.types';\nimport { SettingsService } from './settings.service';\nimport { FuseDrawerComponent } from '@fuse/components/drawer';\n\n@Component({\n  selector: 'settings',\n  templateUrl: './settings.component.html',\n  styles: [\n    `\n      settings {\n        position: static;\n        display: block;\n        flex: none;\n        width: auto;\n      }\n\n      @media (screen and min-width: 1280px) {\n        empty-layout + settings .settings-cog {\n          right: 0 !important;\n        }\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SettingsComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(FuseDrawerComponent) settingsDrawer: FuseDrawerComponent;\n\n  config: AppConfig;\n  layout: Layout;\n  scheme: 'dark' | 'light';\n  theme: string;\n  themes: Themes;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _router: Router,\n    private _fuseConfigService: FuseConfigService,\n    private _settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    // Subscribe to config changes\n    this._fuseConfigService.config$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((config: AppConfig) => (this.config = config));\n  }\n\n  ngAfterViewInit(): void {\n    // Subscribe to SettingsDrawerStatus changes\n    this._settingsService.opened$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((opened: boolean) => {\n        if (opened) {\n          this.settingsDrawer.open();\n        } else {\n          this.settingsDrawer.close();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  setLayout(layout: string): void {\n    // Clear the 'layout' query param to allow layout changes\n    this._router\n      .navigate([], {\n        queryParams: {\n          layout: null,\n        },\n        queryParamsHandling: 'merge',\n      })\n      .then(() => {\n        // Set the config\n        this._fuseConfigService.config = { layout };\n      });\n  }\n\n  setScheme(scheme: Scheme): void {\n    this._fuseConfigService.config = { scheme };\n  }\n\n  setTheme(theme: Theme): void {\n    this._fuseConfigService.config = { theme };\n  }\n\n  closeSettingsDrawer(): void {\n    this._settingsService.closeSettingsDrawer();\n  }\n}\n","<ng-container *ngIf=\"show\">\n    <mat-progress-bar\n        [mode]=\"mode\"\n        [value]=\"progress\"></mat-progress-bar>\n</ng-container>\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseLoadingService } from '@fuse/services/loading';\n\n@Component({\n    selector     : 'fuse-loading-bar',\n    templateUrl  : './loading-bar.component.html',\n    styleUrls    : ['./loading-bar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs     : 'fuseLoadingBar'\n})\nexport class FuseLoadingBarComponent implements OnChanges, OnInit, OnDestroy\n{\n    @Input() autoMode: boolean = true;\n    mode: 'determinate' | 'indeterminate';\n    progress: number = 0;\n    show: boolean = false;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(private _fuseLoadingService: FuseLoadingService)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Auto mode\n        if ( 'autoMode' in changes )\n        {\n            // Set the auto mode in the service\n            this._fuseLoadingService.setAutoMode(coerceBooleanProperty(changes.autoMode.currentValue));\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to the service\n        this._fuseLoadingService.mode$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((value) => {\n                this.mode = value;\n            });\n\n        this._fuseLoadingService.progress$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((value) => {\n                this.progress = value;\n            });\n\n        this._fuseLoadingService.show$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((value) => {\n                this.show = value;\n            });\n\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full\">\n  <!-- Content -->\n  <div class=\"flex flex-col flex-auto\">\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n    <router-outlet *ngIf=\"true\"></router-outlet>\n  </div>\n</div>\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'empty-layout',\n  templateUrl: './empty.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class EmptyLayoutComponent implements OnDestroy {\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor() {}\n\n  ngOnDestroy(): void {\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n}\n","/* tslint:disable:max-line-length */\nimport { FuseNavigationItem } from '@fuse/components/navigation';\n\nexport const menuNavigation: FuseNavigationItem[] = [\n  {\n    id: 'home',\n    title: 'Home',\n    type: 'basic',\n    icon: 'heroicons_outline:home',\n    link: '/home',\n  },\n  {\n    id: 'perfil',\n    title: 'Perfil',\n    type: 'basic',\n    icon: 'heroicons_outline:user',\n    link: '/perfil',\n  },\n  {\n    id: 'permissao',\n    title: 'Permissão',\n    type: 'basic',\n    icon: 'mat_outline:lock',\n    link: '/permissao',\n  },\n  {\n    id: 'usuario',\n    title: 'Usuário',\n    type: 'basic',\n    icon: 'heroicons_outline:user-circle',\n    link: '/usuario',\n  },\n];\n\nexport const adminNavigation: FuseNavigationItem[] = [\n  {\n    id: 'admin-home',\n    title: 'Admin',\n    type: 'basic',\n    icon: 'heroicons_outline:chart-pie',\n    link: '/example',\n  },\n];\n\nexport const compactNavigation: FuseNavigationItem[] = [\n  {\n    id: 'home',\n    title: 'Home',\n    type: 'basic',\n    icon: 'heroicons_outline:home',\n    link: '/home',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { Navigation } from 'app/core/navigation/navigation.types';\n\n// Navigation Data\nimport { menuNavigation, adminNavigation, compactNavigation } from './navigation-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  private _navigation: ReplaySubject<Navigation> = new ReplaySubject<Navigation>(1);\n\n  constructor() {\n    this._navigation.next({\n        admin: adminNavigation,\n        default: menuNavigation,\n        compact: compactNavigation,\n    });\n  }\n\n  get navigation$(): Observable<Navigation> {\n    return this._navigation.asObservable();\n  }\n}\n","<!-- Button -->\n<button\n    mat-icon-button\n    [matTooltip]=\"tooltip || 'Toggle Fullscreen'\"\n    (click)=\"toggleFullscreen()\">\n    <ng-container [ngTemplateOutlet]=\"iconTpl || defaultIconTpl\"></ng-container>\n</button>\n\n<!-- Default icon -->\n<ng-template #defaultIconTpl>\n    <mat-icon [svgIcon]=\"'heroicons_outline:arrows-expand'\"></mat-icon>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Inject, Input, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { FSDocument, FSDocumentElement } from '@fuse/components/fullscreen/fullscreen.types';\n\n@Component({\n    selector       : 'fuse-fullscreen',\n    templateUrl    : './fullscreen.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs       : 'fuseFullscreen'\n})\nexport class FuseFullscreenComponent implements OnInit\n{\n    @Input() iconTpl: TemplateRef<any>;\n    @Input() tooltip: string;\n    private _fsDoc: FSDocument;\n    private _fsDocEl: FSDocumentElement;\n    private _isFullscreen: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(@Inject(DOCUMENT) private _document: Document)\n    {\n        this._fsDoc = _document as FSDocument;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._fsDocEl = document.documentElement as FSDocumentElement;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle the fullscreen mode\n     */\n    toggleFullscreen(): void\n    {\n        // Check if the fullscreen is open\n        this._isFullscreen = this._getBrowserFullscreenElement() !== null;\n\n        // Toggle the fullscreen\n        if ( this._isFullscreen )\n        {\n            this._closeFullscreen();\n        }\n        else\n        {\n            this._openFullscreen();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get browser's fullscreen element\n     *\n     * @private\n     */\n    private _getBrowserFullscreenElement(): Element\n    {\n        if ( typeof this._fsDoc.fullscreenElement !== 'undefined' )\n        {\n            return this._fsDoc.fullscreenElement;\n        }\n\n        if ( typeof this._fsDoc.mozFullScreenElement !== 'undefined' )\n        {\n            return this._fsDoc.mozFullScreenElement;\n        }\n\n        if ( typeof this._fsDoc.msFullscreenElement !== 'undefined' )\n        {\n            return this._fsDoc.msFullscreenElement;\n        }\n\n        if ( typeof this._fsDoc.webkitFullscreenElement !== 'undefined' )\n        {\n            return this._fsDoc.webkitFullscreenElement;\n        }\n\n        throw new Error('Fullscreen mode is not supported by this browser');\n    }\n\n    /**\n     * Open the fullscreen\n     *\n     * @private\n     */\n    private _openFullscreen(): void\n    {\n        if ( this._fsDocEl.requestFullscreen )\n        {\n            this._fsDocEl.requestFullscreen();\n            return;\n        }\n\n        // Firefox\n        if ( this._fsDocEl.mozRequestFullScreen )\n        {\n            this._fsDocEl.mozRequestFullScreen();\n            return;\n        }\n\n        // Chrome, Safari and Opera\n        if ( this._fsDocEl.webkitRequestFullscreen )\n        {\n            this._fsDocEl.webkitRequestFullscreen();\n            return;\n        }\n\n        // IE/Edge\n        if ( this._fsDocEl.msRequestFullscreen )\n        {\n            this._fsDocEl.msRequestFullscreen();\n            return;\n        }\n    }\n\n    /**\n     * Close the fullscreen\n     *\n     * @private\n     */\n    private _closeFullscreen(): void\n    {\n        if ( this._fsDoc.exitFullscreen )\n        {\n            this._fsDoc.exitFullscreen();\n            return;\n        }\n\n        // Firefox\n        if ( this._fsDoc.mozCancelFullScreen )\n        {\n            this._fsDoc.mozCancelFullScreen();\n            return;\n        }\n\n        // Chrome, Safari and Opera\n        if ( this._fsDoc.webkitExitFullscreen )\n        {\n            this._fsDoc.webkitExitFullscreen();\n            return;\n        }\n\n        // IE/Edge\n        else if ( this._fsDoc.msExitFullscreen )\n        {\n            this._fsDoc.msExitFullscreen();\n            return;\n        }\n    }\n}\n","<!-- Button -->\n<button mat-icon-button [matMenuTriggerFor]=\"userActions\">\n  <span class=\"relative\">\n    <img\n      class=\"w-7 h-7 rounded-full object-cover\"\n      *ngIf=\"user.imageProfile\"\n      [src]=\"'data:image/png;base64, ' + user.imageProfile\"\n    />\n\n    <mat-icon\n      *ngIf=\"!user.imageProfile\"\n      [svgIcon]=\"'heroicons_outline:user-circle'\"\n    ></mat-icon>\n  </span>\n</button>\n\n<mat-menu [xPosition]=\"'before'\" #userActions=\"matMenu\">\n  <div class=\"px-4\">\n    <span class=\"flex flex-col leading-none\">\n      <span>Você está logado como</span>\n      <span class=\"mt-1.5 text-lg font-medium font-bold\">\n        {{ user.nome }}\n      </span>\n      <span class=\"text-sm mt-1 font-medium font-bold text-gray-500 dark:text-gray-300\">\n        {{ user.perfil.nome | titlecase }}\n      </span>\n    </span>\n  </div>\n\n  <mat-divider class=\"my-2\"></mat-divider>\n\n  <button mat-menu-item (click)=\"openSettingsDrawer()\">\n    <mat-icon [svgIcon]=\"'heroicons_outline:cog'\"></mat-icon>\n    <span>Configurações</span>\n  </button>\n\n  <mat-divider class=\"my-2\"></mat-divider>\n  <button mat-menu-item (click)=\"signOut()\">\n    <mat-icon [svgIcon]=\"'heroicons_outline:logout'\"></mat-icon>\n    <span>Sair</span>\n  </button>\n</mat-menu>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { User } from 'app/core/user/user.types';\nimport { UserService } from 'app/core/user/user.service';\nimport { SettingsService } from '../settings/settings.service';\n\n@Component({\n  selector: 'user',\n  templateUrl: './user.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'user',\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  user: User;\n\n  userFotoUrl: string;\n\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _router: Router,\n    private _userService: UserService,\n    private _settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    // Subscribe to user changes\n    this._userService.user$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((user: User) => {\n        this.user = user;\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n      });\n\n    // TODO: getUserPhotoUrl observable\n    this._userService.userAvatarUrl$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((res) => {\n        this.userFotoUrl = res;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  openSettingsDrawer(): void {\n    this._settingsService.openSettingsDrawer();\n  }\n\n  signOut(): void {\n    this._router.navigate(['/sign-out']);\n  }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Navigation -->\n<ng-container *ngIf=\"isScreenSmall\">\n  <fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"'over'\" [name]=\"'mainNavigation'\"\n    [navigation]=\"navigation.admin\" [opened]=\"false\">\n    <!-- Navigation header hook -->\n    <ng-container fuseVerticalNavigationContentHeader>\n      <!-- Logo -->\n      <div class=\"flex items-center h-20 pt-6 px-8\">\n        <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\n      </div>\n    </ng-container>\n  </fuse-vertical-navigation>\n</ng-container>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto items-center w-full min-w-0 bg-gray-200 dark:bg-card\">\n  <!-- Header -->\n  <div\n    class=\"relative flex flex-col flex-0 justify-center w-full h-16 sm:h-20 md:h-36 overflow-hidden z-49 shadow dark:shadow-none print:hidden\">\n    <!-- Top bar -->\n    <div class=\"relative dark flex flex-auto justify-center w-full px-4 md:px-8 bg-gray-800 dark:bg-gray-900\">\n      <div class=\"flex items-center w-full max-w-360 h-16 sm:h-20\">\n        <!-- Logo -->\n        <ng-container *ngIf=\"!isScreenSmall\">\n          <div class=\"flex items-center\">\n            <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\n          </div>\n        </ng-container>\n        <!-- Navigation toggle button -->\n        <ng-container *ngIf=\"isScreenSmall\">\n          <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\n            <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n          </button>\n        </ng-container>\n        <!-- Components -->\n        <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\n          <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\n          <!-- <search [appearance]=\"'bar'\"></search>\n                    <shortcuts></shortcuts> -->\n          <!-- <notifications></notifications> -->\n          <user></user>\n        </div>\n      </div>\n    </div>\n    <!-- Bottom bar -->\n    <ng-container *ngIf=\"!isScreenSmall\">\n      <div class=\"flex flex-auto justify-center px-4 md:px-8 bg-card dark:bg-gray-700\">\n        <div class=\"relative flex items-center w-full max-w-360 h-16\">\n          <fuse-horizontal-navigation class=\"-mx-4\" [name]=\"'mainNavigation'\" [navigation]=\"navigation.admin\">\n          </fuse-horizontal-navigation>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <!-- Content -->\n  <div class=\"flex flex-auto justify-center w-full sm:p-6 md:p-8\">\n    <div class=\"flex flex-col flex-auto w-full sm:max-w-360 sm:shadow-lg sm:rounded-lg sm:overflow-hidden bg-default\">\n      <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n                 Otherwise, layout changes won't be registered and the view won't be updated! -->\n      <router-outlet *ngIf=\"true\"></router-outlet>\n    </div>\n  </div>\n\n  <!-- Footer -->\n  <div\n    class=\"flex flex-col sm:flex-row items-center justify-between w-full sm:h-24 px-4 md:px-6 z-49 border-t bg-card dark:bg-transparent print:hidden\">\n    <section class=\"font-medium text-secondary\" name=\"endereco\">\n      <p>Mardonio S Costa Desenvolvedor Sr - Copyright ©</p>\n      <p>Coordenadoria de Tecnologia da Informação</p>\n      <p>2021 - Todos os Direitos Reservados</p>\n    </section>\n\n    <section name=\"versao\" class=\"font-medium text-secondary\">\n      <p>\n        Versão: <strong>{{ nomeSistema }} &copy; {{ currentYear }} </strong>\n      </p>\n    </section>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport {\n  FuseNavigationService,\n  FuseVerticalNavigationComponent,\n} from '@fuse/components/navigation';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { environment as env } from 'environments/environment';\n\n@Component({\n  selector: 'enterprise-layout',\n  templateUrl: './enterprise.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class EnterpriseLayoutComponent implements OnInit, OnDestroy {\n  isScreenSmall: boolean;\n  navigation: Navigation;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _navigationService: NavigationService,\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\n    private _fuseNavigationService: FuseNavigationService\n  ) {}\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n\n  get nomeSistema(): string {\n    return env.nomeSistema;\n  }\n\n  ngOnInit(): void {\n    // Subscribe to navigation data\n    this._navigationService.navigation$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((navigation: Navigation) => {\n        this.navigation = navigation;\n      });\n\n    // Subscribe to media changes\n    this._fuseMediaWatcherService.onMediaChange$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(({ matchingAliases }) => {\n        // Check if the screen is small\n        this.isScreenSmall = !matchingAliases.includes('md');\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  toggleNavigation(name: string): void {\n    // Get the navigation\n    const navigation =\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\n        name\n      );\n\n    if (navigation) {\n      // Toggle the opened status\n      navigation.toggle();\n    }\n  }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Navigation -->\n<ng-container *ngIf=\"isScreenSmall\">\n  <fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"'over'\" [name]=\"'mainNavigation'\"\n    [navigation]=\"navigation.admin\" [opened]=\"false\">\n    <!-- Navigation header hook -->\n    <ng-container fuseVerticalNavigationContentHeader>\n      <!-- Logo -->\n      <div class=\"flex items-center h-20 pt-6 px-8\">\n        <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\n      </div>\n    </ng-container>\n  </fuse-vertical-navigation>\n</ng-container>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\n  <!-- Header -->\n  <div\n    class=\"relative flex flex-0 items-center w-full h-16 sm:h-20 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\">\n    <ng-container *ngIf=\"!isScreenSmall\">\n      <!-- Logo -->\n      <div class=\"flex items-center mx-2 lg:mr-8\">\n        <div class=\"hidden lg:flex\">\n          <img class=\"dark:hidden w-24\" src=\"assets/images/logo/logo-text.svg\" />\n          <img class=\"hidden dark:flex w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" />\n        </div>\n        <img class=\"flex lg:hidden w-8\" src=\"assets/logos/corebase.png\" />\n      </div>\n      <!-- Horizontal navigation -->\n      <fuse-horizontal-navigation class=\"mr-2\" [name]=\"'mainNavigation'\" [navigation]=\"navigation.admin\">\n      </fuse-horizontal-navigation>\n    </ng-container>\n    <!-- Navigation toggle button -->\n    <ng-container *ngIf=\"isScreenSmall\">\n      <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\n        <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n      </button>\n    </ng-container>\n    <!-- Components -->\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\n      <!-- <search [appearance]=\"'bar'\"></search>\n            <shortcuts></shortcuts>\n            <notifications></notifications> -->\n      <user></user>\n    </div>\n  </div>\n\n  <!-- Content -->\n  <div class=\"flex flex-col flex-auto w-full\">\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n    <router-outlet *ngIf=\"true\"></router-outlet>\n  </div>\n\n  <!-- Footer -->\n  <div\n    class=\"flex flex-col sm:flex-row items-center justify-between w-full sm:h-24 px-4 md:px-6 z-49 border-t bg-card dark:bg-transparent print:hidden\">\n    <section class=\"font-medium text-secondary\" name=\"endereco\">\n      <p>Mardonio S Costa Desenvolvedor Sr - Copyright ©</p>\n      <p>Coordenadoria de Tecnologia da Informação</p>\n      <p>2021 - Todos os Direitos Reservados</p>\n    </section>\n\n    <section name=\"versao\" class=\"font-medium text-secondary\">\n      <p>\n        Versão: <strong>{{ nomeSistema }} &copy; {{ currentYear }} </strong>\n      </p>\n    </section>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport {\n  FuseNavigationService,\n  FuseVerticalNavigationComponent,\n} from '@fuse/components/navigation';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { environment as env } from 'environments/environment';\n\n@Component({\n  selector: 'modern-layout',\n  templateUrl: './modern.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ModernLayoutComponent implements OnInit, OnDestroy {\n  isScreenSmall: boolean;\n  navigation: Navigation;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _navigationService: NavigationService,\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\n    private _fuseNavigationService: FuseNavigationService\n  ) {}\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n\n  get nomeSistema(): string {\n    return env.nomeSistema;\n  }\n\n  ngOnInit(): void {\n    // Subscribe to navigation data\n    this._navigationService.navigation$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((navigation: Navigation) => {\n        this.navigation = navigation;\n      });\n\n    // Subscribe to media changes\n    this._fuseMediaWatcherService.onMediaChange$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(({ matchingAliases }) => {\n        // Check if the screen is small\n        this.isScreenSmall = !matchingAliases.includes('md');\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  toggleNavigation(name: string): void {\n    // Get the navigation\n    const navigation =\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\n        name\n      );\n\n    if (navigation) {\n      // Toggle the opened status\n      navigation.toggle();\n    }\n  }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Navigation -->\n<fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"isScreenSmall ? 'over' : 'side'\"\n  [name]=\"'mainNavigation'\" [navigation]=\"navigation.default\" [opened]=\"!isScreenSmall\">\n  <!-- Navigation header hook -->\n  <ng-container fuseVerticalNavigationContentHeader>\n    <!-- Logo -->\n    <div>\n      <div class=\"flex items-center h-20 p-6 pb-0 mb-4\">\n        <img class=\"w-20 mr-2\" src=\"assets/logos/corebase.png\" alt=\"Logo image\">\n        <div>\n          <label class=\"text-3xl font-bold\">{{ nomeSistema }}</label>\n          <div class=\"flex-auto border-t border-gray-600 max-w-80\"></div>\n          <div class=\"flex flex-col\">\n            Base de Sistemas\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <!-- Navigation footer hook -->\n  <ng-container fuseVerticalNavigationContentFooter>\n    <div class=\"fixed left-0 bottom-0 w-64  text-center p-5 ml-3 bg-accent-900 border-t text-sm opacity-40\">\n      <p> Desenvolvido por: <span>Mardonio S Costa </span></p>\n      <strong>Developer Front Sr</strong>\n      <p> versão: {{ version }}</p>\n    </div>\n  </ng-container>\n</fuse-vertical-navigation>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\n\n  <!-- Header -->\n  <div\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\">\n    <!-- Navigation toggle button -->\n    <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\n      <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n    </button>\n    <!-- Components -->\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\n      <!-- <search [appearance]=\"'bar'\"></search> -->\n      <!-- <shortcuts></shortcuts> -->\n      <!-- <notifications></notifications> -->\n      <user></user>\n    </div>\n  </div>\n\n  <!-- Content -->\n  <div class=\"flex flex-col flex-auto\">\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n    <router-outlet *ngIf=\"true\"></router-outlet>\n  </div>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport {\n  FuseNavigationService,\n  FuseVerticalNavigationComponent,\n} from '@fuse/components/navigation';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { environment as env } from \"environments/environment\";\n\n@Component({\n  selector: 'classic-layout',\n  templateUrl: './classic.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ClassicLayoutComponent implements OnInit, OnDestroy {\n  isScreenSmall: boolean;\n  navigation: Navigation;\n  version = env.version;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _navigationService: NavigationService,\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\n    private _fuseNavigationService: FuseNavigationService\n  ) {}\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n\n  ngOnInit(): void {\n    // Subscribe to navigation data\n    this._navigationService.navigation$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((navigation: Navigation) => {\n        this.navigation = navigation;\n      });\n\n    // Subscribe to media changes\n    this._fuseMediaWatcherService.onMediaChange$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(({ matchingAliases }) => {\n        // Check if the screen is small\n        this.isScreenSmall = !matchingAliases.includes('md');\n      });\n  }\n\n  get nomeSistema(): string {\n    return env.nomeSistema;\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  toggleNavigation(name: string): void {\n    // Get the navigation\n    const navigation =\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\n        name\n      );\n\n    if (navigation) {\n      // Toggle the opened status\n      navigation.toggle();\n    }\n  }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Navigation -->\n<fuse-vertical-navigation\n  class=\"dark bg-gray-900 print:hidden\"\n  [appearance]=\"'compact'\"\n  [mode]=\"isScreenSmall ? 'over' : 'side'\"\n  [name]=\"'mainNavigation'\"\n  [navigation]=\"navigation.compact\"\n  [opened]=\"!isScreenSmall\"\n>\n  <!-- Navigation header hook -->\n  <ng-container fuseVerticalNavigationContentHeader>\n    <!-- Logo -->\n    <div class=\"flex items-center justify-center h-20 mt-3 mb-4\">\n      <img class=\"w-20\" src=\"assets/logos/corebase.png\" alt=\"Logo image\" />\n    </div>\n  </ng-container>\n</fuse-vertical-navigation>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\n  <!-- Header -->\n  <div\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\"\n  >\n    <!-- Navigation toggle button -->\n    <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\n      <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n    </button>\n    <!-- Components -->\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\n      <!-- <search [appearance]=\"'bar'\"></search>\n            <shortcuts></shortcuts>\n            <notifications></notifications> -->\n      <user></user>\n    </div>\n  </div>\n\n  <!-- Content -->\n  <div class=\"flex flex-col flex-auto\">\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n    <router-outlet *ngIf=\"true\"></router-outlet>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport {\n  FuseNavigationService,\n  FuseVerticalNavigationComponent,\n} from '@fuse/components/navigation';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { environment as env } from \"environments/environment\";\n\n@Component({\n  selector: 'compact-layout',\n  templateUrl: './compact.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CompactLayoutComponent implements OnInit, OnDestroy {\n  isScreenSmall: boolean;\n  navigation: Navigation;\n  version = env.version;\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _navigationService: NavigationService,\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\n    private _fuseNavigationService: FuseNavigationService\n  ) {}\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n\n  ngOnInit(): void {\n    // Subscribe to navigation data\n    this._navigationService.navigation$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((navigation: Navigation) => {\n        this.navigation = navigation;\n      });\n\n    // Subscribe to media changes\n    this._fuseMediaWatcherService.onMediaChange$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(({ matchingAliases }) => {\n        // Check if the screen is small\n        this.isScreenSmall = !matchingAliases.includes('md');\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  toggleNavigation(name: string): void {\n    // Get the navigation\n    const navigation =\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\n        name\n      );\n\n    if (navigation) {\n      // Toggle the opened status\n      navigation.toggle();\n    }\n  }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Navigation -->\n<fuse-vertical-navigation\n  class=\"dark bg-gray-900 print:hidden\"\n  [appearance]=\"navigationAppearance\"\n  [mode]=\"isScreenSmall ? 'over' : 'side'\"\n  [name]=\"'mainNavigation'\"\n  [navigation]=\"navigation.default\"\n  [opened]=\"!isScreenSmall\"\n>\n  <!-- Navigation header hook -->\n  <ng-container fuseVerticalNavigationContentHeader>\n    <!-- Logo -->\n    <div class=\"flex items-center justify-center h-20\">\n      <img class=\"w-12\" src=\"assets/logos/corebase.png\" alt=\"Logo image\" />\n    </div>\n  </ng-container>\n</fuse-vertical-navigation>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\n  <!-- Header -->\n  <div\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\"\n  >\n    <div class=\"flex items-center pr-2 space-x-2\">\n      <!-- Navigation toggle button -->\n      <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\n        <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n      </button>\n      <!-- Navigation appearance toggle button -->\n      <button\n        class=\"hidden md:inline-flex\"\n        mat-icon-button\n        (click)=\"toggleNavigationAppearance()\"\n      >\n        <mat-icon [svgIcon]=\"'heroicons_outline:switch-horizontal'\"></mat-icon>\n      </button>\n    </div>\n    <!-- Components -->\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\n      <!-- <search [appearance]=\"'bar'\"></search>\n            <shortcuts></shortcuts>\n            <notifications></notifications> -->\n      <user></user>\n    </div>\n  </div>\n\n  <!-- Content -->\n  <div class=\"flex flex-col flex-auto\">\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n    <router-outlet *ngIf=\"true\"></router-outlet>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport {\n  FuseNavigationItem,\n  FuseNavigationService,\n  FuseVerticalNavigationComponent,\n} from '@fuse/components/navigation';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { environment as env } from \"environments/environment\";\n\n@Component({\n  selector: 'dense-layout',\n  templateUrl: './dense.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DenseLayoutComponent implements OnInit, OnDestroy {\n  isScreenSmall: boolean;\n  navigation: Navigation;\n  version = env.version;\n  navigationAppearance: 'default' | 'dense' = 'dense';\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _navigationService: NavigationService,\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\n    private _fuseNavigationService: FuseNavigationService\n  ) {}\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n\n  ngOnInit(): void {\n    // Subscribe to navigation data\n    this._navigationService.navigation$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe((navigation: Navigation) => {\n        this.navigation = navigation;\n      });\n\n    // Subscribe to media changes\n    this._fuseMediaWatcherService.onMediaChange$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(({ matchingAliases }) => {\n        // Check if the screen is small\n        this.isScreenSmall = !matchingAliases.includes('md');\n\n        // Change the navigation appearance\n        this.navigationAppearance = this.isScreenSmall ? 'default' : 'dense';\n      });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n\n  toggleNavigation(name: string): void {\n    // Get the navigation\n    const navigation =\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\n        name\n      );\n\n    if (navigation) {\n      // Toggle the opened status\n      navigation.toggle();\n    }\n  }\n\n  toggleNavigationAppearance(): void {\n    this.navigationAppearance =\n      this.navigationAppearance === 'default' ? 'dense' : 'default';\n  }\n}\n","<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Empty layout -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<empty-layout *ngIf=\"layout === 'empty'\"></empty-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Layouts with horizontal navigation -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n\n\n<!-- Enterprise -->\n<enterprise-layout *ngIf=\"layout === 'enterprise'\"></enterprise-layout>\n\n<!-- Modern -->\n<modern-layout *ngIf=\"layout === 'modern'\"></modern-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Layouts with vertical navigation -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n\n<!-- Classic -->\n<classic-layout *ngIf=\"layout === 'classic'\"></classic-layout>\n\n<!-- Compact -->\n<compact-layout *ngIf=\"layout === 'compact'\"></compact-layout>\n\n<!-- Dense -->\n<dense-layout *ngIf=\"layout === 'dense'\"></dense-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Settings drawer - Remove this to remove the drawer and its button -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<settings></settings>\n","import { Component, Inject, OnDestroy, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\nimport { FuseConfigService } from '@fuse/services/config';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { FusePlatformService } from '@fuse/services/platform';\nimport { FUSE_VERSION } from '@fuse/version';\nimport { Layout } from 'app/layout/layout.types';\nimport { AppConfig } from 'app/core/config/app.config';\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\n\n@Component({\n    selector     : 'layout',\n    templateUrl  : './layout.component.html',\n    styleUrls    : ['./layout.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LayoutComponent implements OnInit, OnDestroy\n{\n    config: AppConfig;\n    layout: Layout;\n    scheme: 'dark' | 'light';\n    theme: string;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        @Inject(DOCUMENT) private _document: any,\n        private _renderer2: Renderer2,\n        private _router: Router,\n        private _fuseConfigService: FuseConfigService,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _fusePlatformService: FusePlatformService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the theme and scheme based on the configuration\n        combineLatest([\n            this._fuseConfigService.config$,\n            this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)'])\n        ]).pipe(\n            takeUntil(this._unsubscribeAll),\n            map(([config, mql]) => {\n\n                const options = {\n                    scheme: config.scheme,\n                    theme : config.theme\n                };\n\n                // If the scheme is set to 'auto'...\n                if ( config.scheme === 'auto' )\n                {\n                    // Decide the scheme using the media query\n                    options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\n                }\n\n                return options;\n            })\n        ).subscribe((options) => {\n\n            // Store the options\n            this.scheme = options.scheme;\n            this.theme = options.theme;\n\n            // Update the scheme and theme\n            this._updateScheme();\n            this._updateTheme();\n        });\n\n        // Subscribe to config changes\n        this._fuseConfigService.config$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((config: AppConfig) => {\n                localStorage.setItem(ELocalStorage.APP_CONFIG, JSON.stringify(config))\n                // Store the config\n                this.config = config;\n\n                // Update the layout\n                this._updateLayout();\n            });\n\n        // Subscribe to NavigationEnd event\n        this._router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(() => {\n\n            // Update the layout\n            this._updateLayout();\n        });\n\n        // Set the app version\n        this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\n\n        // Set the OS name\n        this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Update the selected layout\n     */\n    private _updateLayout(): void\n    {\n        // Get the current activated route\n        let route = this._activatedRoute;\n        while ( route.firstChild )\n        {\n            route = route.firstChild;\n        }\n\n        // 1. Set the layout from the config\n        this.layout = this.config.layout;\n\n        // 2. Get the query parameter from the current route and\n        // set the layout and save the layout to the config\n        const layoutFromQueryParam = (route.snapshot.queryParamMap.get('layout') as Layout);\n        if ( layoutFromQueryParam )\n        {\n            this.layout = layoutFromQueryParam;\n            if ( this.config )\n            {\n                this.config.layout = layoutFromQueryParam;\n            }\n        }\n\n        // 3. Iterate through the paths and change the layout as we find\n        // a config for it.\n        //\n        // The reason we do this is that there might be empty grouping\n        // paths or componentless routes along the path. Because of that,\n        // we cannot just assume that the layout configuration will be\n        // in the last path's config or in the first path's config.\n        //\n        // So, we get all the paths that matched starting from root all\n        // the way to the current activated route, walk through them one\n        // by one and change the layout as we find the layout config. This\n        // way, layout configuration can live anywhere within the path and\n        // we won't miss it.\n        //\n        // Also, this will allow overriding the layout in any time so we\n        // can have different layouts for different routes.\n        const paths = route.pathFromRoot;\n        paths.forEach((path) => {\n\n            // Check if there is a 'layout' data\n            if ( path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout )\n            {\n                // Set the layout\n                this.layout = path.routeConfig.data.layout;\n            }\n        });\n    }\n\n    /**\n     * Update the selected scheme\n     *\n     * @private\n     */\n    private _updateScheme(): void\n    {\n        // Remove class names for all schemes\n        this._document.body.classList.remove('light', 'dark');\n\n        // Add class name for the currently selected scheme\n        this._document.body.classList.add(this.scheme);\n    }\n\n    /**\n     * Update the selected theme\n     *\n     * @private\n     */\n    private _updateTheme(): void\n    {\n        // Find the class name for the previously selected theme and remove it\n        this._document.body.classList.forEach((className: string) => {\n            if ( className.startsWith('theme-') )\n            {\n                this._document.body.classList.remove(className, className.split('-')[1]);\n            }\n        });\n\n        // Add class name for the currently selected theme\n        this._document.body.classList.add(this.theme);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { forkJoin, Observable } from 'rxjs';\nimport { UserService } from 'app/core/user/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InitialDataResolver implements Resolve<any> {\n  constructor(\n    private _userService: UserService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    // Fork join multiple API endpoint calls to wait all of them to finish\n    return forkJoin([\n      this._userService.get(),\n    ]);\n  }\n}\n","import { Route } from '@angular/router';\nimport { AuthGuard } from 'app/core/auth/guards/auth.guard';\nimport { NoAuthGuard } from 'app/core/auth/guards/noAuth.guard';\nimport { LayoutComponent } from 'app/layout/layout.component';\nimport { InitialDataResolver } from 'app/app.resolvers';\n\nexport const appRoutes: Route[] = [\n  // Redirect empty path to '/example'\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\n\n  // Redirect signed in user to the '/example'\n  //\n  // After the user signs in, the sign in page will redirect the user to the 'signed-in-redirect'\n  // path. Below is another redirection for that path to redirect the user to the desired\n  // location. This is a small convenience to keep all main routes together here on this file.\n  { path: 'signed-in-redirect', pathMatch: 'full', redirectTo: 'home' },\n\n  // Auth routes for guests\n  {\n    path: '',\n    canActivate: [NoAuthGuard],\n    canActivateChild: [NoAuthGuard],\n    component: LayoutComponent,\n    data: {\n      layout: 'empty',\n    },\n    children: [\n      {\n        path: 'sign-in',\n        loadChildren: () =>\n          import('app/modules/auth/sign-in/sign-in.module').then(\n            (m) => m.AuthSignInModule\n          ),\n      },\n    ],\n  },\n\n  // Auth routes for authenticated users\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    component: LayoutComponent,\n    data: {\n      layout: 'empty',\n    },\n    children: [\n      {\n        path: 'sign-out',\n        loadChildren: () =>\n          import('app/modules/auth/sign-out/sign-out.module').then(\n            (m) => m.AuthSignOutModule\n          ),\n      },\n      {\n        path: 'unlock-session',\n        loadChildren: () =>\n          import('app/modules/auth/unlock-session/unlock-session.module').then(\n            (m) => m.AuthUnlockSessionModule\n          ),\n      },\n    ],\n  },\n\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    resolve: {\n      initialData: InitialDataResolver,\n    },\n    children: [\n      {\n        path: 'home',\n        loadChildren: () =>\n          import('app/modules/home/home.module').then((m) => m.HomeModule),\n      },\n    ],\n  },\n\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    resolve: {\n      initialData: InitialDataResolver,\n    },\n    children: [\n      {\n        path: 'perfil',\n        loadChildren: () =>\n          import('app/modules/perfil/perfil.module').then((m) => m.PerfilModule),\n      },\n    ],\n  },\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    resolve: {\n      initialData: InitialDataResolver,\n    },\n    children: [\n      {\n        path: 'permissao',\n        loadChildren: () =>\n          import('app/modules/permissao/permissao.module').then((m) => m.PermissaoModule),\n      },\n    ],\n  },\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    resolve: {\n      initialData: InitialDataResolver,\n    },\n    children: [\n      {\n        path: 'usuario',\n        loadChildren: () =>\n          import('app/modules/usuario/usuario.module').then((m) => m.UsuarioModule),\n      },\n    ],\n  },\n\n\n  // Admin routes\n  {\n    path: 'admin',\n    canActivate: [AuthGuard],\n    canActivateChild: [AuthGuard],\n    component: LayoutComponent,\n    data: {\n      layout: 'enterprise',\n    },\n    resolve: {\n      initialData: InitialDataResolver,\n    },\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('app/modules/admin/admin.module').then((m) => m.AdminModule),\n      },\n    ],\n  },\n];\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ExtraOptions, PreloadAllModules, RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { FuseModule } from '@fuse';\nimport { FuseConfigModule } from '@fuse/services/config';\nimport { CoreModule } from 'app/core/core.module';\nimport { appConfig } from 'app/core/config/app.config';\nimport { LayoutModule } from 'app/layout/layout.module';\nimport { AppComponent } from 'app/app.component';\nimport { appRoutes } from 'app/app.routing';\nimport { ELocalStorage } from './shared/models/localstorage.model';\n\nconst routerConfig: ExtraOptions = {\n  preloadingStrategy: PreloadAllModules,\n  scrollPositionRestoration: 'enabled',\n};\n\nconst configLocalStorage = JSON.parse(localStorage.getItem(ELocalStorage.APP_CONFIG))\nconst CONFIG_LOCAL = configLocalStorage ?? appConfig;\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes, routerConfig),\n\n    // Fuse, FuseConfig & FuseMockAPI\n    FuseModule,\n    FuseConfigModule.forRoot(CONFIG_LOCAL),\n\n    // Core module of your application\n    CoreModule,\n\n    // Layout module of your application\n    LayoutModule,\n\n    // 3rd party modules that require global configuration via forRoot\n    MarkdownModule.forRoot({}),\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Layout } from 'app/layout/layout.types';\n\n// Types\nexport type Scheme = 'auto' | 'dark' | 'light';\nexport type Screens = { [key: string]: string };\nexport type Theme = 'theme-default' | string;\nexport type Themes = { id: string; name: string }[];\n\n/**\n * AppConfig interface. Update this interface to strictly type your config\n * object.\n */\nexport interface AppConfig\n{\n    layout: Layout;\n    scheme: Scheme;\n    screens: Screens;\n    theme: Theme;\n    themes: Themes;\n}\n\n/**\n * Default configuration for the entire application. This object is used by\n * FuseConfigService to set the default configuration.\n *\n * If you need to store global configuration for your app, you can use this\n * object to set the defaults. To access, update and reset the config, use\n * FuseConfigService and its methods.\n *\n * \"Screens\" are carried over to the BreakpointObserver for accessing them within\n * components, and they are required.\n *\n * \"Themes\" are required for Tailwind to generate themes.\n */\nexport const appConfig: AppConfig = {\n    layout : 'classic',\n    scheme : 'light',\n    screens: {\n        sm: '600px',\n        md: '960px',\n        lg: '1280px',\n        xl: '1440px'\n    },\n    theme  : 'theme-default',\n    themes : [\n        {\n            id  : 'theme-default',\n            name: 'Default'\n        },\n        {\n            id  : 'theme-brand',\n            name: 'Brand'\n        },\n        {\n            id  : 'theme-teal',\n            name: 'Teal'\n        },\n        {\n            id  : 'theme-rose',\n            name: 'Rose'\n        },\n        {\n            id  : 'theme-purple',\n            name: 'Purple'\n        },\n        {\n            id  : 'theme-amber',\n            name: 'Amber'\n        }\n    ]\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from 'environments/environment';\nimport { AppModule } from 'app/app.module';\n\nif ( environment.production )\n{\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n                        .catch(err => console.error(err));\n"],"x_google_ignoreList":[]}