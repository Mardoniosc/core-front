{"version":3,"file":"main.848676387fc44261.js","mappings":"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AyBsqB,IAGzBpY,GAGA0P,GAGAoJ,aAAuB,OAIdJ,CAAb,KEvCKtkB,mBAED2kB,SAGJC,OAAyBC,gBAAgBP,IAChBQ,MAAMC,GAAOne,QAAQC,MAAMke,GADpD,iBCVA,OACA,YACA,eACA,WACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,cACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,cACA,iBACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,kBACA,eACA,kBACA,eACA,YACA,eACA,YACA,eACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,cACA,iBACA,eACA,kBACA,cACA,iBACA,eACA,kBACA,eACA,kBACA,YACA,eACA,YACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,aACA,gBACA,YACA,eACA,YACA,eACA,kBACA,eACA,kBACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,eACA,kBACA,qBACA,kBACA,qBACA,YACA,eACA,YACA,eACA,WACA,cACA,WACA,cACA,YACA,eACA,eACA,kBACA,YACA,eACA,YACA,eACA,YACA,eACA,kBACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,UACA,aACA,YACA,eACA,YACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,kBACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,YACA,eACA,WACA,eACA,kBACA,cACA,YACA,eACA,eACA,kBACA,cACA,iBACA,YACA,eACA,YACA,eACA,kBACA,eACA,YACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,iBACA,oBACA,eACA,YACA,eACA,WACA,cACA,YACA,eACA,YACA,eACA,YACA,eACA,aACA,gBACA,YACA,eACA,YACA,eACA,YACA,eACA,eACA,kBACA,aACA,gBACA,YACA,eACA,aACA,gBACA,YACA,kBACA,qBACA,eACA,cACA,iBACA,YACA,eACA,YACA,eACA,YACA,iBACA,oBACA,eACA,YACA,eACA,kBACA,qBACA,YACA,eACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,mBAIA,cACA,WACA,WACA,CACA,cACA,cACA,8CACA,gCACAC,CACA,CACA,WACA,CACAC,kBACA,qBACA,EACAA,YACAC,YACAD","names":["FuseAnimationCurves","FuseAnimationDurations","fuseAnimations","expandCollapse","trigger","state","style","height","transition","animate","params","timings","fadeIn","opacity","fadeInTop","transform","fadeInBottom","fadeInLeft","fadeInRight","fadeOut","fadeOutTop","fadeOutBottom","fadeOutLeft","fadeOutRight","shake","keyframes","offset","slideInTop","slideInBottom","slideInLeft","slideInRight","slideOutTop","slideOutBottom","slideOutLeft","slideOutRight","zoomIn","zoomOut","FuseCardModule","CommonModule","FUSE_APP_CONFIG","InjectionToken","FuseConfigModule","constructor","_fuseConfigService","static","config","ngModule","providers","provide","useValue","i0","FuseConfigService","this","_config","BehaviorSubject","value","merge","getValue","next","config$","asObservable","reset","factory","FuseConfirmationDialogComponent","data","MAT_DIALOG_DATA","selectors","FuseConfirmationService","_matDialog","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","open","userConfig","_defaultConfig","autoFocus","disableClose","panelClass","FuseMediaWatcherModule","_fuseMediaWatcherService","FuseMediaWatcherService","_breakpointObserver","ReplaySubject","pipe","map","fromPairs","Object","entries","screens","alias","screen","switchMap","observe","values","matchingAliases","matchingQueries","matchingBreakpoints","breakpoints","filter","query","matches","matchingAlias","find","q","push","_onMediaChange","subscribe","onMediaChange$","onMediaQueryChange$","FuseUtilsService","exactMatchOptions","paths","fragment","matrixParams","queryParams","subsetMatchOptions","randomId","length","chars","i","charAt","Math","floor","random","AuthService","_httpClient","accessToken","token","localStorage","setItem","ELocalStorage","getItem","forgotPassword","email","post","environment","resetPassword","password","signIn","credentials","_authenticated","throwError","Error","login","concat","response","headers","get","split","of","refreshToken","res","signOut","removeItem","unlockSession","check","AuthUtils","offsetSeconds","date","_getTokenExpirationDate","valueOf","Date","exp","decodeToken","str","output","String","replace","bs","buffer","bc","idx","fromCharCode","indexOf","decodeURIComponent","Array","prototype","call","_b64decode","c","charCodeAt","toString","slice","join","_b64DecodeUnicode","parts","decoded","_urlBase64Decode","JSON","parse","decodedToken","hasOwnProperty","setUTCSeconds","UserService","user","_user","user$","userAvatarUrl$","_userAvatarUrl","userId","ROLES","tap","permissao","SharedModule","FormsModule","ReactiveFormsModule","RouterModule","MatIconModule","MatInputModule","MatFormFieldModule","MatDialogModule","MatButtonModule","MatTableModule","MatPaginatorModule","MatSelectModule","MatSlideToggleModule","MatDatepickerModule","MatMomentDateModule","MatCheckboxModule","MatMenuModule","MatSidenavModule","MatExpansionModule","production","nomeSistema","api","version","FuseConfirmationModule","_fuseConfirmationService","imports","FuseLoadingService","Map","auto$","_auto$","mode$","_mode$","progress$","_progress$","show$","_show$","hide","setAutoMode","setMode","setProgress","console","error","_setLoadingStatus","status","url","_urlMap","set","has","delete","size","FuseLoadingInterceptor","_fuseLoadingService","handleRequestsAutomatically","intercept","req","handle","finalize","FuseLoadingModule","HTTP_INTERCEPTORS","useClass","multi","FusePlatformService","_platform","isBrowser","navigator","userAgent","includes","osName","IOS","ANDROID","FusePlatformModule","_fusePlatformService","FuseSplashScreenService","_document","_router","events","event","NavigationEnd","take","body","classList","remove","add","DOCUMENT","FuseSplashScreenModule","_fuseSplashScreenService","FuseUtilsModule","_fuseUtilsService","FuseModule","parentModule","MATERIAL_SANITY_CHECKS","doctype","theme","MAT_FORM_FIELD_DEFAULT_OPTIONS","appearance","AuthInterceptor","_authService","request","_executando","interval","val","now","navigate","addToken","handleRefreshToken","content","clone","setHeaders","Authorization","isRefreshing","refreshTokenSubject","newToken","AuthModule","HttpClientModule","IconsModule","_domSanitizer","_matIconRegistry","addSvgIconSet","bypassSecurityTrustResourceUrl","addSvgIconSetInNamespace","CoreModule","FuseLoadingBarModule","MatProgressBarModule","EmptyLayoutModule","FuseFullscreenModule","MatTooltipModule","FuseNavigationService","registerComponent","component","_componentRegistry","deregisterComponent","getComponent","storeNavigation","key","navigation","_navigationStore","getNavigation","deleteNavigation","warn","getFlatNavigation","flatNavigation","item","type","children","id","childItem","getItemParent","parent","FuseHorizontalNavigationComponent","_changeDetectorRef","_fuseNavigationService","Subject","ngOnChanges","changes","markForCheck","ngOnInit","ngOnDestroy","_unsubscribeAll","complete","refresh","onRefreshed","trackByFn","index","changeDetection","ScrollbarGeometry","x","y","w","h","ScrollbarPosition","FuseScrollbarDirective","_elementRef","elementRef","ps","_ps","fuseScrollbar","coerceBooleanProperty","currentValue","_init","_destroy","_options","fuseScrollbarOptions","setTimeout","fromEvent","window","takeUntil","debounceTime","update","isEnabled","destroy","geometry","prefix","nativeElement","position","absolute","scrollbarPosition","reach","scrollLeft","scrollTop","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToBottom","scrollHeight","clientHeight","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToElement","qs","ignoreVisible","element","querySelector","elementPos","getBoundingClientRect","scrollerPos","contains","right","abs","left","bottom","top","target","_animation","cancelAnimationFrame","newValue","scrollCount","oldTimestamp","performance","oldValue","cosParameter","step","newTimestamp","PI","round","cos","requestAnimationFrame","PerfectScrollbar","FuseVerticalNavigationComponent","_animationBuilder","_renderer2","_scrollStrategyOptions","EventEmitter","block","_handleAsideOverlayClick","closeAside","_handleOverlayClick","close","_animationsEnabled","_hovered","inner","mode","opened","styleList","visibility","fuseScrollbarDirectives","_fuseScrollbarDirectives","_fuseScrollbarDirectivesSubscription","unsubscribe","onCollapsableItemCollapsed","onCollapsableItemExpanded","delay","forEach","fuseScrollbarDirective","_onMouseenter","_enableAnimations","_onMouseleave","appearanceChanged","currentMode","previousMode","previousValue","_disableAnimations","_hideOverlay","_showOverlay","modeChanged","_toggleOpened","positionChanged","transparentOverlay","activeAsideItemId","ngAfterViewInit","_navigationContentEl","activeItem","scrollIntoView","toggle","openAside","disabled","_showAsideOverlay","_hideAsideOverlay","toggleAside","_asideOverlay","_overlay","createElement","appendChild","parentElement","_scrollStrategy","enable","_player","build","create","play","addEventListener","onDone","removeEventListener","parentNode","removeChild","disable","openedChanged","ctx","FuseScrollbarModule","FuseHorizontalNavigationBasicItemComponent","isActiveMatchOptions","exactMatch","_fuseHorizontalNavigationComponent","FuseHorizontalNavigationDividerItemComponent","FuseHorizontalNavigationBranchItemComponent","triggerChangeDetection","i7","FuseHorizontalNavigationSpacerItemComponent","FuseVerticalNavigationBasicItemComponent","_fuseVerticalNavigationComponent","FuseVerticalNavigationDividerItemComponent","FuseVerticalNavigationGroupItemComponent","FuseVerticalNavigationSpacerItemComponent","FuseVerticalNavigationCollapsableItemComponent","isCollapsed","isExpanded","_hasActiveChild","expand","autoCollapse","collapse","collapsedItem","_isChildrenOf","expandedItem","urlAfterRedirects","toggleCollapsable","currentUrl","child","link","isActive","FuseVerticalNavigationAsideItemComponent","_markIfActive","active","activeItemId","FuseNavigationModule","MatDividerModule","NotificationsModule","OverlayModule","PortalModule","SearchModule","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","useFactory","overlay","scrollStrategies","deps","Overlay","MatAutocompleteModule","ShortcutsModule","UserModule","EnterpriseLayoutModule","ModernLayoutModule","ClassicLayoutModule","CompactLayoutModule","DenseLayoutModule","FuseDrawerModule","SettingsModule","layoutModules","LayoutModule","AppComponent","AuthGuard","canActivate","route","_check","canActivateChild","childRoute","canLoad","segments","redirectURL","authenticated","NoAuthGuard","FUSE_VERSION","Version","full","major","minor","patch","FuseDrawerService","FuseDrawerComponent","_fuseDrawerService","fixed","fixedChanged","finish","SettingsService","_openedSubject","_opened","opened$","openSettingsDrawer","closeSettingsDrawer","toggleSettingsDrawer","SettingsComponent","_settingsService","settingsDrawer","setLayout","layout","queryParamsHandling","then","setScheme","scheme","setTheme","FuseLoadingBarComponent","autoMode","progress","EmptyLayoutComponent","menuNavigation","adminNavigation","compactNavigation","NavigationService","_navigation","admin","default","compact","navigation$","FuseFullscreenComponent","_fsDoc","_fsDocEl","document","documentElement","toggleFullscreen","_isFullscreen","_getBrowserFullscreenElement","_closeFullscreen","_openFullscreen","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","UserComponent","_userService","userFotoUrl","EnterpriseLayoutComponent","_activatedRoute","_navigationService","currentYear","getFullYear","env","isScreenSmall","toggleNavigation","ModernLayoutComponent","ClassicLayoutComponent","CompactLayoutComponent","DenseLayoutComponent","navigationAppearance","toggleNavigationAppearance","LayoutComponent","combineLatest","mql","options","_updateScheme","_updateTheme","stringify","_updateLayout","setAttribute","addClass","firstChild","layoutFromQueryParam","snapshot","queryParamMap","pathFromRoot","path","routeConfig","className","startsWith","InitialDataResolver","resolve","forkJoin","appRoutes","pathMatch","redirectTo","loadChildren","Promise","m","AuthSignInModule","__webpack_require__","AuthSignOutModule","AuthUnlockSessionModule","initialData","HomeModule","PerfilModule","PermissaoModule","UsuarioModule","PerfilPermissaoModule","LogModule","AdminModule","routerConfig","preloadingStrategy","PreloadAllModules","scrollPositionRestoration","CONFIG_LOCAL","sm","md","lg","xl","themes","AppModule","bootstrap","BrowserModule","BrowserAnimationsModule","MarkdownModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","e","webpackContext","module"],"sourceRoot":"webpack:///","sources":["./src/@fuse/animations/defaults.ts","./src/@fuse/animations/expand-collapse.ts","./src/@fuse/animations/public-api.ts","./src/@fuse/animations/fade.ts","./src/@fuse/animations/shake.ts","./src/@fuse/animations/slide.ts","./src/@fuse/animations/zoom.ts","./src/@fuse/components/card/card.module.ts","./src/@fuse/services/config/config.constants.ts","./src/@fuse/services/config/config.module.ts","./src/@fuse/services/config/config.service.ts","./src/@fuse/services/confirmation/dialog/dialog.component.html","./src/@fuse/services/confirmation/dialog/dialog.component.ts","./src/@fuse/services/confirmation/confirmation.service.ts","./src/@fuse/services/media-watcher/media-watcher.module.ts","./src/@fuse/services/media-watcher/media-watcher.service.ts","./src/@fuse/services/utils/utils.service.ts","./src/app/core/auth/auth.service.ts","./src/app/core/auth/auth.utils.ts","./src/app/core/user/user.service.ts","./src/app/shared/models/localstorage.model.ts","./src/app/shared/shared.module.ts","./src/environments/environment.prod.ts","./src/@fuse/services/confirmation/confirmation.module.ts","./src/@fuse/services/loading/loading.service.ts","./src/@fuse/services/loading/loading.interceptor.ts","./src/@fuse/services/loading/loading.module.ts","./src/@fuse/services/platform/platform.service.ts","./src/@fuse/services/platform/platform.module.ts","./src/@fuse/services/splash-screen/splash-screen.service.ts","./src/@fuse/services/splash-screen/splash-screen.module.ts","./src/@fuse/services/utils/utils.module.ts","./src/@fuse/fuse.module.ts","./src/app/core/auth/auth.interceptor.ts","./src/app/core/auth/auth.module.ts","./src/app/core/icons/icons.module.ts","./src/app/core/core.module.ts","./src/@fuse/components/loading-bar/loading-bar.module.ts","./src/app/layout/layouts/empty/empty.module.ts","./src/@fuse/components/fullscreen/fullscreen.module.ts","./src/@fuse/components/navigation/navigation.service.ts","./src/@fuse/components/navigation/horizontal/horizontal.component.html","./src/@fuse/components/navigation/horizontal/horizontal.component.ts","./src/@fuse/directives/scrollbar/scrollbar.types.ts","./src/@fuse/directives/scrollbar/scrollbar.directive.ts","./src/@fuse/components/navigation/vertical/vertical.component.html","./src/@fuse/components/navigation/vertical/vertical.component.ts","./src/@fuse/directives/scrollbar/scrollbar.module.ts","./src/@fuse/components/navigation/horizontal/components/basic/basic.component.html","./src/@fuse/components/navigation/horizontal/components/basic/basic.component.ts","./src/@fuse/components/navigation/horizontal/components/divider/divider.component.ts","./src/@fuse/components/navigation/horizontal/components/divider/divider.component.html","./src/@fuse/components/navigation/horizontal/components/branch/branch.component.html","./src/@fuse/components/navigation/horizontal/components/branch/branch.component.ts","./src/@fuse/components/navigation/horizontal/components/spacer/spacer.component.ts","./src/@fuse/components/navigation/horizontal/components/spacer/spacer.component.html","./src/@fuse/components/navigation/vertical/components/basic/basic.component.html","./src/@fuse/components/navigation/vertical/components/basic/basic.component.ts","./src/@fuse/components/navigation/vertical/components/divider/divider.component.ts","./src/@fuse/components/navigation/vertical/components/divider/divider.component.html","./src/@fuse/components/navigation/vertical/components/group/group.component.html","./src/@fuse/components/navigation/vertical/components/group/group.component.ts","./src/@fuse/components/navigation/vertical/components/spacer/spacer.component.ts","./src/@fuse/components/navigation/vertical/components/spacer/spacer.component.html","./src/@fuse/components/navigation/vertical/components/collapsable/collapsable.component.html","./src/@fuse/components/navigation/vertical/components/collapsable/collapsable.component.ts","./src/@fuse/components/navigation/vertical/components/aside/aside.component.html","./src/@fuse/components/navigation/vertical/components/aside/aside.component.ts","./src/@fuse/components/navigation/navigation.module.ts","./src/app/layout/common/notifications/notifications.module.ts","./src/app/layout/common/search/search.module.ts","./src/app/layout/common/shortcuts/shortcuts.module.ts","./src/app/layout/common/user/user.module.ts","./src/app/layout/layouts/horizontal/enterprise/enterprise.module.ts","./src/app/layout/layouts/horizontal/modern/modern.module.ts","./src/app/layout/layouts/vertical/classic/classic.module.ts","./src/app/layout/layouts/vertical/compact/compact.module.ts","./src/app/layout/layouts/vertical/dense/dense.module.ts","./src/@fuse/components/drawer/drawer.module.ts","./src/app/layout/common/settings/settings.module.ts","./src/app/layout/layout.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/auth/guards/auth.guard.ts","./src/app/core/auth/guards/noAuth.guard.ts","./src/@fuse/version/fuse-version.ts","./src/@fuse/version/version.ts","./src/@fuse/components/drawer/drawer.service.ts","./src/@fuse/components/drawer/drawer.component.ts","./src/@fuse/components/drawer/drawer.component.html","./src/app/layout/common/settings/settings.service.ts","./src/app/layout/common/settings/settings.component.html","./src/app/layout/common/settings/settings.component.ts","./src/@fuse/components/loading-bar/loading-bar.component.html","./src/@fuse/components/loading-bar/loading-bar.component.ts","./src/app/layout/layouts/empty/empty.component.html","./src/app/layout/layouts/empty/empty.component.ts","./src/app/core/navigation/navigation-data.ts","./src/app/core/navigation/navigation.service.ts","./src/@fuse/components/fullscreen/fullscreen.component.html","./src/@fuse/components/fullscreen/fullscreen.component.ts","./src/app/layout/common/user/user.component.html","./src/app/layout/common/user/user.component.ts","./src/app/layout/layouts/horizontal/enterprise/enterprise.component.html","./src/app/layout/layouts/horizontal/enterprise/enterprise.component.ts","./src/app/layout/layouts/horizontal/modern/modern.component.html","./src/app/layout/layouts/horizontal/modern/modern.component.ts","./src/app/layout/layouts/vertical/classic/classic.component.html","./src/app/layout/layouts/vertical/classic/classic.component.ts","./src/app/layout/layouts/vertical/compact/compact.component.html","./src/app/layout/layouts/vertical/compact/compact.component.ts","./src/app/layout/layouts/vertical/dense/dense.component.html","./src/app/layout/layouts/vertical/dense/dense.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.component.ts","./src/app/app.resolvers.ts","./src/app/app.routing.ts","./src/app/app.module.ts","./src/app/core/config/app.config.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["export class FuseAnimationCurves\r\n{\r\n    static standard = 'cubic-bezier(0.4, 0.0, 0.2, 1)';\r\n    static deceleration = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\r\n    static acceleration = 'cubic-bezier(0.4, 0.0, 1, 1)';\r\n    static sharp = 'cubic-bezier(0.4, 0.0, 0.6, 1)';\r\n}\r\n\r\nexport class FuseAnimationDurations\r\n{\r\n    static complex = '375ms';\r\n    static entering = '225ms';\r\n    static exiting = '195ms';\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Expand / collapse\r\n// -----------------------------------------------------------------------------------------------------\r\nconst expandCollapse = trigger('expandCollapse',\r\n    [\r\n        state('void, collapsed',\r\n            style({\r\n                height: '0'\r\n            })\r\n        ),\r\n\r\n        state('*, expanded',\r\n            style('*')\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void <=> false, collapsed <=> false, expanded <=> false', []),\r\n\r\n        // Transition\r\n        transition('void <=> *, collapsed <=> expanded',\r\n            animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\nexport { expandCollapse };\r\n","import { expandCollapse } from '@fuse/animations/expand-collapse';\r\nimport { fadeIn, fadeInBottom, fadeInLeft, fadeInRight, fadeInTop, fadeOut, fadeOutBottom, fadeOutLeft, fadeOutRight, fadeOutTop } from '@fuse/animations/fade';\r\nimport { shake } from '@fuse/animations/shake';\r\nimport { slideInBottom, slideInLeft, slideInRight, slideInTop, slideOutBottom, slideOutLeft, slideOutRight, slideOutTop } from '@fuse/animations/slide';\r\nimport { zoomIn, zoomOut } from '@fuse/animations/zoom';\r\n\r\nexport const fuseAnimations = [\r\n    expandCollapse,\r\n    fadeIn, fadeInTop, fadeInBottom, fadeInLeft, fadeInRight,\r\n    fadeOut, fadeOutTop, fadeOutBottom, fadeOutLeft, fadeOutRight,\r\n    shake,\r\n    slideInTop, slideInBottom, slideInLeft, slideInRight,\r\n    slideOutTop, slideOutBottom, slideOutLeft, slideOutRight,\r\n    zoomIn, zoomOut\r\n];\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeIn = trigger('fadeIn',\r\n    [\r\n        state('void',\r\n            style({\r\n                opacity: 0\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity: 1\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInTop = trigger('fadeInTop',\r\n    [\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInBottom = trigger('fadeInBottom',\r\n    [\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(0, 100%, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInLeft = trigger('fadeInLeft',\r\n    [\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInRight = trigger('fadeInRight',\r\n    [\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOut = trigger('fadeOut',\r\n    [\r\n        state('*',\r\n            style({\r\n                opacity: 1\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity: 0\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutTop = trigger('fadeOutTop',\r\n    [\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutBottom = trigger('fadeOutBottom',\r\n    [\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(0, 100%, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutLeft = trigger('fadeOutLeft',\r\n    [\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutRight = trigger('fadeOutRight',\r\n    [\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'translate3d(100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\nexport { fadeIn, fadeInTop, fadeInBottom, fadeInLeft, fadeInRight, fadeOut, fadeOutTop, fadeOutBottom, fadeOutLeft, fadeOutRight };\r\n","import { animate, keyframes, style, transition, trigger } from '@angular/animations';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Shake\r\n// -----------------------------------------------------------------------------------------------------\r\nconst shake = trigger('shake',\r\n    [\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *, * => true',\r\n            [\r\n                animate('{{timings}}',\r\n                    keyframes([\r\n                        style({\r\n                            transform: 'translate3d(0, 0, 0)',\r\n                            offset   : 0\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(-10px, 0, 0)',\r\n                            offset   : 0.1\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(10px, 0, 0)',\r\n                            offset   : 0.2\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(-10px, 0, 0)',\r\n                            offset   : 0.3\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(10px, 0, 0)',\r\n                            offset   : 0.4\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(-10px, 0, 0)',\r\n                            offset   : 0.5\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(10px, 0, 0)',\r\n                            offset   : 0.6\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(-10px, 0, 0)',\r\n                            offset   : 0.7\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(10px, 0, 0)',\r\n                            offset   : 0.8\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(-10px, 0, 0)',\r\n                            offset   : 0.9\r\n                        }),\r\n                        style({\r\n                            transform: 'translate3d(0, 0, 0)',\r\n                            offset   : 1\r\n                        })\r\n                    ])\r\n                )\r\n            ],\r\n            {\r\n                params: {\r\n                    timings: '0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955)'\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\nexport { shake };\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInTop = trigger('slideInTop',\r\n    [\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInBottom = trigger('slideInBottom',\r\n    [\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(0, 100%, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInLeft = trigger('slideInLeft',\r\n    [\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInRight = trigger('slideInRight',\r\n    [\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutTop = trigger('slideOutTop',\r\n    [\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(0, -100%, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutBottom = trigger('slideOutBottom',\r\n    [\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(0, 100%, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutLeft = trigger('slideOutLeft',\r\n    [\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(-100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutRight = trigger('slideOutRight',\r\n    [\r\n        state('*',\r\n            style({\r\n                transform: 'translate3d(0, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                transform: 'translate3d(100%, 0, 0)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\nexport { slideInTop, slideInBottom, slideInLeft, slideInRight, slideOutTop, slideOutBottom, slideOutLeft, slideOutRight };\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Zoom in\r\n// -----------------------------------------------------------------------------------------------------\r\nconst zoomIn = trigger('zoomIn',\r\n    [\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'scale(0.5)'\r\n            })\r\n        ),\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'scale(1)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('void => false', []),\r\n\r\n        // Transition\r\n        transition('void => *', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Zoom out\r\n// -----------------------------------------------------------------------------------------------------\r\nconst zoomOut = trigger('zoomOut',\r\n    [\r\n\r\n        state('*',\r\n            style({\r\n                opacity  : 1,\r\n                transform: 'scale(1)'\r\n            })\r\n        ),\r\n\r\n        state('void',\r\n            style({\r\n                opacity  : 0,\r\n                transform: 'scale(0.5)'\r\n            })\r\n        ),\r\n\r\n        // Prevent the transition if the state is false\r\n        transition('false => void', []),\r\n\r\n        // Transition\r\n        transition('* => void', animate('{{timings}}'),\r\n            {\r\n                params: {\r\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\r\n                }\r\n            }\r\n        )\r\n    ]\r\n);\r\n\r\nexport { zoomIn, zoomOut };\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FuseCardComponent } from '@fuse/components/card/card.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseCardComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule\r\n    ],\r\n    exports     : [\r\n        FuseCardComponent\r\n    ]\r\n})\r\nexport class FuseCardModule\r\n{\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const FUSE_APP_CONFIG = new InjectionToken<any>('FUSE_APP_CONFIG');\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FuseConfigService } from '@fuse/services/config/config.service';\r\nimport { FUSE_APP_CONFIG } from '@fuse/services/config/config.constants';\r\n\r\n@NgModule()\r\nexport class FuseConfigModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseConfigService: FuseConfigService)\r\n    {\r\n    }\r\n\r\n    /**\r\n     * forRoot method for setting user configuration\r\n     *\r\n     * @param config\r\n     */\r\n    static forRoot(config: any): ModuleWithProviders<FuseConfigModule>\r\n    {\r\n        return {\r\n            ngModule : FuseConfigModule,\r\n            providers: [\r\n                {\r\n                    provide : FUSE_APP_CONFIG,\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { merge } from 'lodash-es';\r\nimport { FUSE_APP_CONFIG } from '@fuse/services/config/config.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseConfigService\r\n{\r\n    private _config: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(@Inject(FUSE_APP_CONFIG) config: any)\r\n    {\r\n        // Private\r\n        this._config = new BehaviorSubject(config);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Setter & getter for config\r\n     */\r\n    set config(value: any)\r\n    {\r\n        // Merge the new config over to the current config\r\n        const config = merge({}, this._config.getValue(), value);\r\n\r\n        // Execute the observable\r\n        this._config.next(config);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    get config$(): Observable<any>\r\n    {\r\n        return this._config.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resets the config to the default\r\n     */\r\n    reset(): void\r\n    {\r\n        // Set the config\r\n        this._config.next(this.config);\r\n    }\r\n}\r\n","<div class=\"relative flex flex-col w-full h-full\">\r\n\r\n    <!-- Dismiss button -->\r\n    <ng-container *ngIf=\"data.dismissible\">\r\n        <div class=\"absolute top-0 right-0 pt-4 pr-4\">\r\n            <button\r\n                mat-icon-button\r\n                [matDialogClose]=\"undefined\">\r\n                <mat-icon\r\n                    class=\"text-secondary\"\r\n                    [svgIcon]=\"'heroicons_outline:x'\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Content -->\r\n    <div class=\"flex flex-col sm:flex-row flex-auto items-center sm:items-start p-8 pb-6 sm:pb-8\">\r\n\r\n        <!-- Icon -->\r\n        <ng-container *ngIf=\"data.icon.show\">\r\n            <div\r\n                class=\"flex flex-0 items-center justify-center w-10 h-10 sm:mr-4 rounded-full\"\r\n                [ngClass]=\"{'text-primary-600 bg-primary-100 dark:text-primary-50 dark:bg-primary-600': data.icon.color === 'primary',\r\n                            'text-accent-600 bg-accent-100 dark:text-accent-50 dark:bg-accent-600': data.icon.color === 'accent',\r\n                            'text-warn-600 bg-warn-100 dark:text-warn-50 dark:bg-warn-600': data.icon.color === 'warn',\r\n                            'text-gray-600 bg-gray-100 dark:text-gray-50 dark:bg-gray-600': data.icon.color === 'basic',\r\n                            'text-blue-600 bg-blue-100 dark:text-blue-50 dark:bg-blue-600': data.icon.color === 'info',\r\n                            'text-green-500 bg-green-100 dark:text-green-50 dark:bg-green-500': data.icon.color === 'success',\r\n                            'text-amber-500 bg-amber-100 dark:text-amber-50 dark:bg-amber-500': data.icon.color === 'warning',\r\n                            'text-red-600 bg-red-100 dark:text-red-50 dark:bg-red-600': data.icon.color === 'error'\r\n                            }\">\r\n                <mat-icon\r\n                    class=\"text-current\"\r\n                    [svgIcon]=\"data.icon.name\"></mat-icon>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"data.title || data.message\">\r\n            <div class=\"flex flex-col items-center sm:items-start mt-4 sm:mt-0 sm:pr-8 space-y-1 text-center sm:text-left\">\r\n\r\n                <!-- Title -->\r\n                <ng-container *ngIf=\"data.title\">\r\n                    <div\r\n                        class=\"text-xl leading-6 font-medium\"\r\n                        [innerHTML]=\"data.title\"></div>\r\n                </ng-container>\r\n\r\n                <!-- Message -->\r\n                <ng-container *ngIf=\"data.message\">\r\n                    <div\r\n                        class=\"text-secondary\"\r\n                        [innerHTML]=\"data.message\"></div>\r\n                </ng-container>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n    <!-- Actions -->\r\n    <ng-container *ngIf=\"data.actions.confirm.show || data.actions.cancel.show\">\r\n        <div class=\"flex items-center justify-center sm:justify-end px-6 py-4 space-x-3 bg-gray-50 dark:bg-black dark:bg-opacity-10\">\r\n\r\n            <!-- Cancel -->\r\n            <ng-container *ngIf=\"data.actions.cancel.show\">\r\n                <button\r\n                    mat-stroked-button\r\n                    [matDialogClose]=\"'cancelled'\">\r\n                    {{data.actions.cancel.label}}\r\n                </button>\r\n            </ng-container>\r\n\r\n            <!-- Confirm -->\r\n            <ng-container *ngIf=\"data.actions.confirm.show\">\r\n                <button\r\n                    mat-flat-button\r\n                    [color]=\"data.actions.confirm.color\"\r\n                    [matDialogClose]=\"'confirmed'\">\r\n                    {{data.actions.confirm.label}}\r\n                </button>\r\n            </ng-container>\r\n\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FuseConfirmationConfig } from '@fuse/services/confirmation/confirmation.types';\r\n\r\n@Component({\r\n    selector     : 'fuse-confirmation-dialog',\r\n    templateUrl  : './dialog.component.html',\r\n    styles       : [\r\n        `\r\n            .fuse-confirmation-dialog-panel {\r\n                @screen md {\r\n                    @apply w-128;\r\n                }\r\n\r\n                .mat-dialog-container {\r\n                    padding: 0 !important;\r\n                }\r\n            }\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FuseConfirmationDialogComponent\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: FuseConfirmationConfig)\r\n    {\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { merge } from 'lodash-es';\r\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\r\nimport { FuseConfirmationConfig } from '@fuse/services/confirmation/confirmation.types';\r\n\r\n@Injectable()\r\nexport class FuseConfirmationService\r\n{\r\n    private _defaultConfig: FuseConfirmationConfig = {\r\n        title      : 'Confirm action',\r\n        message    : 'Are you sure you want to confirm this action?',\r\n        icon       : {\r\n            show : true,\r\n            name : 'heroicons_outline:exclamation',\r\n            color: 'warn'\r\n        },\r\n        actions    : {\r\n            confirm: {\r\n                show : true,\r\n                label: 'Confirm',\r\n                color: 'warn'\r\n            },\r\n            cancel : {\r\n                show : true,\r\n                label: 'Cancel'\r\n            }\r\n        },\r\n        dismissible: false\r\n    };\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    open(config: FuseConfirmationConfig = {}): MatDialogRef<FuseConfirmationDialogComponent>\r\n    {\r\n        // Merge the user config with the default config\r\n        const userConfig = merge({}, this._defaultConfig, config);\r\n\r\n        // Open the dialog\r\n        return this._matDialog.open(FuseConfirmationDialogComponent, {\r\n            autoFocus   : false,\r\n            disableClose: !userConfig.dismissible,\r\n            data        : userConfig,\r\n            panelClass  : 'fuse-confirmation-dialog-panel'\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher/media-watcher.service';\r\n\r\n@NgModule({\r\n    providers: [\r\n        FuseMediaWatcherService\r\n    ]\r\n})\r\nexport class FuseMediaWatcherModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseMediaWatcherService: FuseMediaWatcherService)\r\n    {\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\r\nimport { map, Observable, ReplaySubject, switchMap } from 'rxjs';\r\nimport { fromPairs } from 'lodash-es';\r\nimport { FuseConfigService } from '@fuse/services/config';\r\n\r\n@Injectable()\r\nexport class FuseMediaWatcherService\r\n{\r\n    private _onMediaChange: ReplaySubject<{ matchingAliases: string[]; matchingQueries: any }> = new ReplaySubject<{ matchingAliases: string[]; matchingQueries: any }>(1);\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _breakpointObserver: BreakpointObserver,\r\n        private _fuseConfigService: FuseConfigService\r\n    )\r\n    {\r\n        this._fuseConfigService.config$.pipe(\r\n            map(config => fromPairs(Object.entries(config.screens).map(([alias, screen]) => ([alias, `(min-width: ${screen})`])))),\r\n            switchMap(screens => this._breakpointObserver.observe(Object.values(screens)).pipe(\r\n                map((state) => {\r\n\r\n                    // Prepare the observable values and set their defaults\r\n                    const matchingAliases: string[] = [];\r\n                    const matchingQueries: any = {};\r\n\r\n                    // Get the matching breakpoints and use them to fill the subject\r\n                    const matchingBreakpoints = Object.entries(state.breakpoints).filter(([query, matches]) => matches) ?? [];\r\n                    for ( const [query] of matchingBreakpoints )\r\n                    {\r\n                        // Find the alias of the matching query\r\n                        const matchingAlias = Object.entries(screens).find(([alias, q]) => q === query)[0];\r\n\r\n                        // Add the matching query to the observable values\r\n                        if ( matchingAlias )\r\n                        {\r\n                            matchingAliases.push(matchingAlias);\r\n                            matchingQueries[matchingAlias] = query;\r\n                        }\r\n                    }\r\n\r\n                    // Execute the observable\r\n                    this._onMediaChange.next({\r\n                        matchingAliases,\r\n                        matchingQueries\r\n                    });\r\n                })\r\n            ))\r\n        ).subscribe();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for _onMediaChange\r\n     */\r\n    get onMediaChange$(): Observable<{ matchingAliases: string[]; matchingQueries: any }>\r\n    {\r\n        return this._onMediaChange.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On media query change\r\n     *\r\n     * @param query\r\n     */\r\n    onMediaQueryChange$(query: string | string[]): Observable<BreakpointState>\r\n    {\r\n        return this._breakpointObserver.observe(query);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IsActiveMatchOptions } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseUtilsService\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = true\".\r\n     */\r\n    get exactMatchOptions(): IsActiveMatchOptions\r\n    {\r\n        return {\r\n            paths       : 'exact',\r\n            fragment    : 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams : 'exact'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = false\".\r\n     */\r\n    get subsetMatchOptions(): IsActiveMatchOptions\r\n    {\r\n        return {\r\n            paths       : 'subset',\r\n            fragment    : 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams : 'subset'\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Generates a random id\r\n     *\r\n     * @param length\r\n     */\r\n    randomId(length: number = 10): string\r\n    {\r\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let name = '';\r\n\r\n        for ( let i = 0; i < 10; i++ )\r\n        {\r\n            name += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n\r\n        return name;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable, of, switchMap, throwError } from 'rxjs';\r\nimport { AuthUtils } from 'app/core/auth/auth.utils';\r\nimport { environment } from 'environments/environment';\r\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _authenticated: boolean = false;\r\n\r\n  constructor(private _httpClient: HttpClient) {}\r\n\r\n  set accessToken(token: string) {\r\n    localStorage.setItem(ELocalStorage.TOKEN, token);\r\n  }\r\n\r\n  get accessToken(): string {\r\n    return localStorage.getItem(ELocalStorage.TOKEN) ?? '';\r\n  }\r\n\r\n  forgotPassword(email: string): Observable<any> {\r\n    return this._httpClient.post(`${environment.api}/auth/forgot`, email);\r\n  }\r\n\r\n  resetPassword(password: string): Observable<any> {\r\n    return this._httpClient.post('api/auth/reset-password', password);\r\n  }\r\n\r\n  signIn(credentials: { login: string; senha: string }): Observable<any> {\r\n    if (this._authenticated) {\r\n      return throwError(() => new Error('Usuário já está autenticado.'));\r\n    }\r\n\r\n    credentials.login = credentials.login.concat('@servicosmsc.com.br');\r\n    return this._httpClient\r\n      .post(`${environment.api}/login`, credentials, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        switchMap((response: any) => {\r\n          const [, token] = response.headers.get('Authorization').split(' ');\r\n          this.accessToken = token;\r\n          this._authenticated = true;\r\n          return of(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  // Consome o endpoint de refresh\r\n  refreshToken(): Observable<any> {\r\n    return this._httpClient\r\n      .post<any>(`${environment.api}/auth/refresh_token`, null, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(\r\n        map((res) => {\r\n          // Desestrutura o token tirando a string Bearer\r\n          const [, token] = res.headers.get('Authorization').split(' ');\r\n\r\n          localStorage.setItem(ELocalStorage.TOKEN, token);\r\n\r\n          return token;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOut(): Observable<any> {\r\n    localStorage.removeItem(ELocalStorage.TOKEN);\r\n    this._authenticated = false;\r\n    return of(true);\r\n  }\r\n\r\n  unlockSession(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Observable<any> {\r\n    return this._httpClient.post('api/auth/unlock-session', credentials);\r\n  }\r\n\r\n  check(): Observable<boolean> {\r\n    if (this._authenticated) {\r\n      return of(true);\r\n    }\r\n\r\n    if (!this.accessToken) {\r\n      return of(false);\r\n    }\r\n\r\n    if (AuthUtils.isTokenExpired(this.accessToken)) {\r\n      return of(false);\r\n    }\r\n\r\n    return of(true);\r\n  }\r\n}\r\n","export class AuthUtils {\r\n  constructor() {}\r\n\r\n  static isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n    // Return if there is no token\r\n    if (!token || token === '') {\r\n      return true;\r\n    }\r\n\r\n    // Get the expiration date\r\n    const date = this._getTokenExpirationDate(token);\r\n\r\n    offsetSeconds = offsetSeconds || 0;\r\n\r\n    if (date === null) {\r\n      return true;\r\n    }\r\n\r\n    // Check if the token is expired\r\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\r\n  }\r\n\r\n  static getTokenExpiration(token): number | null {\r\n    const { exp }: any = this.decodeToken(token);\r\n    return exp || null;\r\n  }\r\n\r\n  private static _b64decode(str: string): string {\r\n    const chars =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let output = '';\r\n\r\n    str = String(str).replace(/=+$/, '');\r\n\r\n    if (str.length % 4 === 1) {\r\n      throw new Error(\r\n        \"'atob' failed: The string to be decoded is not correctly encoded.\"\r\n      );\r\n    }\r\n\r\n    /* eslint-disable */\r\n    for (\r\n      // initialize result and counters\r\n      let bc = 0, bs: any, buffer: any, idx = 0;\r\n      // get next character\r\n      (buffer = str.charAt(idx++));\r\n      // character found in table? initialize bit storage and add its ascii value;\r\n      ~buffer &&\r\n      ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n      // and if not first of each 4 characters,\r\n      // convert the first 8 bits to one ascii character\r\n      bc++ % 4)\r\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\r\n        : 0\r\n    ) {\r\n      // try to find character in table (0-63, not found => -1)\r\n      buffer = chars.indexOf(buffer);\r\n    }\r\n    /* eslint-enable */\r\n\r\n    return output;\r\n  }\r\n\r\n  private static _b64DecodeUnicode(str: any): string {\r\n    return decodeURIComponent(\r\n      Array.prototype.map\r\n        .call(\r\n          this._b64decode(str),\r\n          (c: any) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\r\n        )\r\n        .join('')\r\n    );\r\n  }\r\n\r\n  private static _urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: {\r\n        break;\r\n      }\r\n      case 2: {\r\n        output += '==';\r\n        break;\r\n      }\r\n      case 3: {\r\n        output += '=';\r\n        break;\r\n      }\r\n      default: {\r\n        throw Error('Illegal base64url string!');\r\n      }\r\n    }\r\n    return this._b64DecodeUnicode(output);\r\n  }\r\n\r\n  static decodeToken(token: string): any {\r\n    // Return if there is no token\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    // Split the token\r\n    const parts = token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new Error(\r\n        \"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\"\r\n      );\r\n    }\r\n\r\n    // Decode the token using the Base64 decoder\r\n    const decoded = this._urlBase64Decode(parts[1]);\r\n\r\n    if (!decoded) {\r\n      throw new Error('Cannot decode the token.');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  private static _getTokenExpirationDate(token: string): Date | null {\r\n    // Get the decoded token\r\n    const decodedToken = this.decodeToken(token);\r\n\r\n    // Return if the decodedToken doesn't have an 'exp' field\r\n    if (!decodedToken.hasOwnProperty('exp')) {\r\n      return null;\r\n    }\r\n\r\n    // Convert the expiration date\r\n    const date = new Date(0);\r\n    date.setUTCSeconds(decodedToken.exp);\r\n\r\n    return date;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable, ReplaySubject, tap } from 'rxjs';\r\nimport { User } from 'app/core/user/user.types';\r\nimport { environment } from 'environments/environment';\r\nimport { AuthUtils } from '../auth/auth.utils';\r\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private _user: ReplaySubject<User> = new ReplaySubject<User>(1);\r\n\r\n  private _userAvatarUrl: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n\r\n  constructor(private _httpClient: HttpClient) {}\r\n\r\n  set user(value: User) {\r\n    // Store the value\r\n    this._user.next(value);\r\n  }\r\n\r\n  get user$(): Observable<User> {\r\n    return this._user.asObservable();\r\n  }\r\n\r\n  get userAvatarUrl$(): Observable<string> {\r\n    return this._userAvatarUrl.asObservable();\r\n  }\r\n\r\n  get(): Observable<User> {\r\n    const { userId, ROLES } = AuthUtils.decodeToken(\r\n      localStorage.getItem(ELocalStorage.TOKEN)\r\n    );\r\n\r\n    return this._httpClient\r\n      .get<User>(`${environment.api}/usuarios/${userId}`)\r\n      .pipe(\r\n        tap((user: User) => {\r\n          this._user.next(user);\r\n\r\n          if (\r\n            Object(ROLES).find(\r\n              (permissao) => permissao === 'HOME'\r\n            )\r\n          ) {\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n","export enum ELocalStorage {\r\n  TOKEN = '@core_base/token',\r\n  APP_CONFIG = '@core_base/AppConfig',\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormFieldErrorComponent } from './components/form-field-error/form-field-error.component';\r\nimport { NotFoundDataComponent } from './components/not-found-data/not-found-data.component';\r\nimport { CpfPipe } from './pipes/cpf.pipe';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { PageHeaderComponent } from './components/page-header/page-header.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FuseCardModule } from '@fuse/components/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  exports: [\r\n    // Modulos\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    // Alguma material\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatMomentDateModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatExpansionModule,\r\n\r\n    // FuseModule\r\n    FuseCardModule,\r\n\r\n    // Componentes\r\n    FormFieldErrorComponent,\r\n    NotFoundDataComponent,\r\n    PageHeaderComponent,\r\n\r\n    // PIPES\r\n    CpfPipe,\r\n  ],\r\n  declarations: [\r\n    // Componentes\r\n    FormFieldErrorComponent,\r\n    NotFoundDataComponent,\r\n    PageHeaderComponent,\r\n\r\n    // PIPES\r\n    CpfPipe,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class SharedModule {}\r\n","export const environment = {\r\n  production: true,\r\n  nomeSistema: 'Core Base',\r\n  api: 'http://apicorebase.servicosmsc.com.br',\r\n  version: '1.0.0 - 20221113',\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation/confirmation.service';\r\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseConfirmationDialogComponent\r\n    ],\r\n    imports     : [\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        CommonModule\r\n    ],\r\n    providers   : [\r\n        FuseConfirmationService\r\n    ]\r\n})\r\nexport class FuseConfirmationModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseConfirmationService: FuseConfirmationService)\r\n    {\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseLoadingService\r\n{\r\n    private _auto$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n    private _mode$: BehaviorSubject<'determinate' | 'indeterminate'> = new BehaviorSubject<'determinate' | 'indeterminate'>('indeterminate');\r\n    private _progress$: BehaviorSubject<number | null> = new BehaviorSubject<number | null>(0);\r\n    private _show$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    private _urlMap: Map<string, boolean> = new Map<string, boolean>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _httpClient: HttpClient)\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for auto mode\r\n     */\r\n    get auto$(): Observable<boolean>\r\n    {\r\n        return this._auto$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Getter for mode\r\n     */\r\n    get mode$(): Observable<'determinate' | 'indeterminate'>\r\n    {\r\n        return this._mode$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Getter for progress\r\n     */\r\n    get progress$(): Observable<number>\r\n    {\r\n        return this._progress$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Getter for show\r\n     */\r\n    get show$(): Observable<boolean>\r\n    {\r\n        return this._show$.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Show the loading bar\r\n     */\r\n    show(): void\r\n    {\r\n        this._show$.next(true);\r\n    }\r\n\r\n    /**\r\n     * Hide the loading bar\r\n     */\r\n    hide(): void\r\n    {\r\n        this._show$.next(false);\r\n    }\r\n\r\n    /**\r\n     * Set the auto mode\r\n     *\r\n     * @param value\r\n     */\r\n    setAutoMode(value: boolean): void\r\n    {\r\n        this._auto$.next(value);\r\n    }\r\n\r\n    /**\r\n     * Set the mode\r\n     *\r\n     * @param value\r\n     */\r\n    setMode(value: 'determinate' | 'indeterminate'): void\r\n    {\r\n        this._mode$.next(value);\r\n    }\r\n\r\n    /**\r\n     * Set the progress of the bar manually\r\n     *\r\n     * @param value\r\n     */\r\n    setProgress(value: number): void\r\n    {\r\n        if ( value < 0 || value > 100 )\r\n        {\r\n            console.error('Progress value must be between 0 and 100!');\r\n            return;\r\n        }\r\n\r\n        this._progress$.next(value);\r\n    }\r\n\r\n    /**\r\n     * Sets the loading status on the given url\r\n     *\r\n     * @param status\r\n     * @param url\r\n     */\r\n    _setLoadingStatus(status: boolean, url: string): void\r\n    {\r\n        // Return if the url was not provided\r\n        if ( !url )\r\n        {\r\n            console.error('The request URL must be provided!');\r\n            return;\r\n        }\r\n\r\n        if ( status === true )\r\n        {\r\n            this._urlMap.set(url, status);\r\n            this._show$.next(true);\r\n        }\r\n        else if ( status === false && this._urlMap.has(url) )\r\n        {\r\n            this._urlMap.delete(url);\r\n        }\r\n\r\n        // Only set the status to 'false' if all outgoing requests are completed\r\n        if ( this._urlMap.size === 0 )\r\n        {\r\n            this._show$.next(false);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { finalize, Observable } from 'rxjs';\r\nimport { FuseLoadingService } from '@fuse/services/loading/loading.service';\r\n\r\n@Injectable()\r\nexport class FuseLoadingInterceptor implements HttpInterceptor\r\n{\r\n    handleRequestsAutomatically: boolean;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _fuseLoadingService: FuseLoadingService\r\n    )\r\n    {\r\n        // Subscribe to the auto\r\n        this._fuseLoadingService.auto$\r\n            .subscribe((value) => {\r\n                this.handleRequestsAutomatically = value;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Intercept\r\n     *\r\n     * @param req\r\n     * @param next\r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\r\n    {\r\n        // If the Auto mode is turned off, do nothing\r\n        if ( !this.handleRequestsAutomatically )\r\n        {\r\n            return next.handle(req);\r\n        }\r\n\r\n        // Set the loading status to true\r\n        this._fuseLoadingService._setLoadingStatus(true, req.url);\r\n\r\n        return next.handle(req).pipe(\r\n            finalize(() => {\r\n                // Set the status to false if there are any errors or the request is completed\r\n                this._fuseLoadingService._setLoadingStatus(false, req.url);\r\n            }));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FuseLoadingInterceptor } from '@fuse/services/loading/loading.interceptor';\r\n\r\n@NgModule({\r\n    providers: [\r\n        {\r\n            provide : HTTP_INTERCEPTORS,\r\n            useClass: FuseLoadingInterceptor,\r\n            multi   : true\r\n        }\r\n    ]\r\n})\r\nexport class FuseLoadingModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FusePlatformService\r\n{\r\n    osName = 'os-unknown';\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _platform: Platform)\r\n    {\r\n        // If the platform is not a browser, return immediately\r\n        if ( !this._platform.isBrowser )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Windows\r\n        if ( navigator.userAgent.includes('Win') )\r\n        {\r\n            this.osName = 'os-windows';\r\n        }\r\n\r\n        // Mac OS\r\n        if ( navigator.userAgent.includes('Mac') )\r\n        {\r\n            this.osName = 'os-mac';\r\n        }\r\n\r\n        // Unix\r\n        if ( navigator.userAgent.includes('X11') )\r\n        {\r\n            this.osName = 'os-unix';\r\n        }\r\n\r\n        // Linux\r\n        if ( navigator.userAgent.includes('Linux') )\r\n        {\r\n            this.osName = 'os-linux';\r\n        }\r\n\r\n        // iOS\r\n        if ( this._platform.IOS )\r\n        {\r\n            this.osName = 'os-ios';\r\n        }\r\n\r\n        // Android\r\n        if ( this._platform.ANDROID )\r\n        {\r\n            this.osName = 'os-android';\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FusePlatformService } from '@fuse/services/platform/platform.service';\r\n\r\n@NgModule({\r\n    providers: [\r\n        FusePlatformService\r\n    ]\r\n})\r\nexport class FusePlatformModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fusePlatformService: FusePlatformService)\r\n    {\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter, take } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FuseSplashScreenService\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Hide it on the first NavigationEnd event\r\n        this._router.events\r\n            .pipe(\r\n                filter(event => event instanceof NavigationEnd),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this.hide();\r\n            });\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Show the splash screen\r\n     */\r\n    show(): void\r\n    {\r\n        this._document.body.classList.remove('fuse-splash-screen-hidden');\r\n    }\r\n\r\n    /**\r\n     * Hide the splash screen\r\n     */\r\n    hide(): void\r\n    {\r\n        this._document.body.classList.add('fuse-splash-screen-hidden');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FuseSplashScreenService } from '@fuse/services/splash-screen/splash-screen.service';\r\n\r\n@NgModule({\r\n    providers: [\r\n        FuseSplashScreenService\r\n    ]\r\n})\r\nexport class FuseSplashScreenModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseSplashScreenService: FuseSplashScreenService)\r\n    {\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\n\r\n@NgModule({\r\n    providers: [\r\n        FuseUtilsService\r\n    ]\r\n})\r\nexport class FuseUtilsModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseUtilsService: FuseUtilsService)\r\n    {\r\n    }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { MATERIAL_SANITY_CHECKS } from '@angular/material/core';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { FuseConfirmationModule } from '@fuse/services/confirmation';\r\nimport { FuseLoadingModule } from '@fuse/services/loading';\r\nimport { FuseMediaWatcherModule } from '@fuse/services/media-watcher/media-watcher.module';\r\nimport { FusePlatformModule } from '@fuse/services/platform/platform.module';\r\nimport { FuseSplashScreenModule } from '@fuse/services/splash-screen/splash-screen.module';\r\nimport { FuseUtilsModule } from '@fuse/services/utils/utils.module';\r\n\r\n@NgModule({\r\n    imports  : [\r\n        FuseConfirmationModule,\r\n        FuseLoadingModule,\r\n        FuseMediaWatcherModule,\r\n        FusePlatformModule,\r\n        FuseSplashScreenModule,\r\n        FuseUtilsModule\r\n    ],\r\n    providers: [\r\n        {\r\n            // Disable 'theme' sanity check\r\n            provide : MATERIAL_SANITY_CHECKS,\r\n            useValue: {\r\n                doctype: true,\r\n                theme  : false,\r\n                version: true\r\n            }\r\n        },\r\n        {\r\n            // Use the 'fill' appearance on Angular Material form fields by default\r\n            provide : MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n            useValue: {\r\n                appearance: 'fill'\r\n            }\r\n        }\r\n    ]\r\n})\r\nexport class FuseModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(@Optional() @SkipSelf() parentModule?: FuseModule)\r\n    {\r\n        if ( parentModule )\r\n        {\r\n            throw new Error('FuseModule has already been loaded. Import this module in the AppModule only!');\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\nimport { AuthUtils } from 'app/core/auth/auth.utils';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  // Flag \"semáforo\" para verificar se o token está em processo de refresh\r\n  private isRefreshing = false;\r\n\r\n  private _executando = false;\r\n\r\n  // Utilizado para salvar o token \"refreshado\" de imediato e emitir\r\n  // para as requisições que estavam no aguardo do refresh de token\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n    null\r\n  );\r\n\r\n  constructor(private _authService: AuthService, private _router: Router) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n\r\n    // CÓDIGO QUE REDIRECIONA SISTEMA PARA TELA DE LOGIN 1 SEGUNDO APÓS EXPIRAR TOKEN\r\n    if (!this._executando && this._authService.accessToken) {\r\n      this._executando = true;\r\n\r\n      const source = interval(1000);\r\n\r\n      source.subscribe((val) => {\r\n        if(this._authService.accessToken) {\r\n          const now = Math.floor(Date.now() / 1000); // Pega o timestamp referente ao momento agora\r\n          if((AuthUtils.getTokenExpiration(this._authService.accessToken) - now) / 60 <= 0) {\r\n            this._authService.signOut().subscribe(() => {\r\n              this._router.navigate(['/sign-in']);\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Para prosseguir rotas que já foram informadas o authorization\r\n    if (request.headers.get('authorization')) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    // Para prosseguir rotas que não devem ter token\r\n    if (request.headers.get('NoToken')) {\r\n      request.headers.delete('NoToken');\r\n      return next.handle(request);\r\n    }\r\n\r\n    const token = this._authService.accessToken;\r\n    if (token && !AuthUtils.isTokenExpired(token)) {\r\n      const exp = AuthUtils.getTokenExpiration(token) - 300;\r\n      const now = Math.floor(Date.now() / 1000); // Pega o timestamp referente ao momento agora\r\n\r\n      // Verifica se o momento de expiração (-5 min) é maior que o momento atual.\r\n      if (exp > now) {\r\n        request = this.addToken(request, token);\r\n      } else {\r\n        request = this.addToken(request, token);\r\n        this.handleRefreshToken(request, next); // Se está próximo a expirar, hora de executar o refresh\r\n      }\r\n    } else if (token && AuthUtils.isTokenExpired(token)) {\r\n      this._authService.signOut();\r\n    }\r\n\r\n    // Verefica se e uma requisição do proxy\r\n    if (request.url.includes('integrador-proxy')) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  // Retorna um clone da requisição com o token adicionado ao header\r\n  private addToken(request: HttpRequest<any>, token: string) {\r\n    const content = request.headers.get('Content-Type')\r\n      ? request.headers.get('Content-Type')\r\n      : 'application/json';\r\n\r\n    if (content !== 'none') {\r\n      return request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': content,\r\n        },\r\n      });\r\n    }\r\n\r\n    return request.clone({\r\n      headers: request.headers.delete('Content-Type', 'none'),\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Efetua o refresh do token\r\n  private handleRefreshToken(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n\r\n      return this._authService.refreshToken().subscribe((token) => {\r\n        this.isRefreshing = false;\r\n        this.refreshTokenSubject.next(token);\r\n        return next.handle(request);\r\n      });\r\n    }\r\n\r\n    return this.refreshTokenSubject\r\n      .pipe(\r\n        filter((token) => token != null),\r\n        take(1),\r\n        switchMap((newToken) => {\r\n          // Next passando a requisição com o novo token gerado\r\n          return next.handle(this.addToken(request, newToken));\r\n        })\r\n      )\r\n      .subscribe(); // Fim Senão\r\n  } // Fim handleRefresh\r\n} // Fim TokenInterceptor\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\nimport { AuthInterceptor } from 'app/core/auth/auth.interceptor';\r\n\r\n@NgModule({\r\n    imports  : [\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        AuthService,\r\n        {\r\n            provide : HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi   : true\r\n        }\r\n    ]\r\n})\r\nexport class AuthModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\n@NgModule()\r\nexport class IconsModule\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _domSanitizer: DomSanitizer,\r\n        private _matIconRegistry: MatIconRegistry\r\n    )\r\n    {\r\n        // Register icon sets\r\n        this._matIconRegistry.addSvgIconSet(this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-twotone.svg'));\r\n        this._matIconRegistry.addSvgIconSetInNamespace('mat_outline', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-outline.svg'));\r\n        this._matIconRegistry.addSvgIconSetInNamespace('mat_solid', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/material-solid.svg'));\r\n        this._matIconRegistry.addSvgIconSetInNamespace('feather', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/feather.svg'));\r\n        this._matIconRegistry.addSvgIconSetInNamespace('heroicons_outline', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/heroicons-outline.svg'));\r\n        this._matIconRegistry.addSvgIconSetInNamespace('heroicons_solid', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/heroicons-solid.svg'));\r\n    }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { AuthModule } from 'app/core/auth/auth.module';\r\nimport { IconsModule } from 'app/core/icons/icons.module';\r\n\r\n@NgModule({\r\n  imports: [AuthModule, IconsModule],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\r\n    // Do not allow multiple injections\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreModule has already been loaded. Import this module in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { FuseLoadingBarComponent } from '@fuse/components/loading-bar/loading-bar.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseLoadingBarComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule,\r\n        MatProgressBarModule\r\n    ],\r\n    exports     : [\r\n        FuseLoadingBarComponent\r\n    ]\r\n})\r\nexport class FuseLoadingBarModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { EmptyLayoutComponent } from 'app/layout/layouts/empty/empty.component';\r\n\r\n@NgModule({\r\n  declarations: [EmptyLayoutComponent],\r\n  imports: [\r\n    RouterModule,\r\n    FuseLoadingBarModule,\r\n    SharedModule\r\n  ],\r\n  exports: [EmptyLayoutComponent],\r\n})\r\nexport class EmptyLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FuseFullscreenComponent } from '@fuse/components/fullscreen/fullscreen.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseFullscreenComponent\r\n    ],\r\n    imports     : [\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        CommonModule\r\n    ],\r\n    exports     : [\r\n        FuseFullscreenComponent\r\n    ]\r\n})\r\nexport class FuseFullscreenModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseNavigationService\r\n{\r\n    private _componentRegistry: Map<string, any> = new Map<string, any>();\r\n    private _navigationStore: Map<string, FuseNavigationItem[]> = new Map<string, any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Register navigation component\r\n     *\r\n     * @param name\r\n     * @param component\r\n     */\r\n    registerComponent(name: string, component: any): void\r\n    {\r\n        this._componentRegistry.set(name, component);\r\n    }\r\n\r\n    /**\r\n     * Deregister navigation component\r\n     *\r\n     * @param name\r\n     */\r\n    deregisterComponent(name: string): void\r\n    {\r\n        this._componentRegistry.delete(name);\r\n    }\r\n\r\n    /**\r\n     * Get navigation component from the registry\r\n     *\r\n     * @param name\r\n     */\r\n    getComponent<T>(name: string): T\r\n    {\r\n        return this._componentRegistry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Store the given navigation with the given key\r\n     *\r\n     * @param key\r\n     * @param navigation\r\n     */\r\n    storeNavigation(key: string, navigation: FuseNavigationItem[]): void\r\n    {\r\n        // Add to the store\r\n        this._navigationStore.set(key, navigation);\r\n    }\r\n\r\n    /**\r\n     * Get navigation from storage by key\r\n     *\r\n     * @param key\r\n     */\r\n    getNavigation(key: string): FuseNavigationItem[]\r\n    {\r\n        return this._navigationStore.get(key) ?? [];\r\n    }\r\n\r\n    /**\r\n     * Delete the navigation from the storage\r\n     *\r\n     * @param key\r\n     */\r\n    deleteNavigation(key: string): void\r\n    {\r\n        // Check if the navigation exists\r\n        if ( !this._navigationStore.has(key) )\r\n        {\r\n            console.warn(`Navigation with the key '${key}' does not exist in the store.`);\r\n        }\r\n\r\n        // Delete from the storage\r\n        this._navigationStore.delete(key);\r\n    }\r\n\r\n    /**\r\n     * Utility function that returns a flattened\r\n     * version of the given navigation array\r\n     *\r\n     * @param navigation\r\n     * @param flatNavigation\r\n     */\r\n    getFlatNavigation(navigation: FuseNavigationItem[], flatNavigation: FuseNavigationItem[] = []): FuseNavigationItem[]\r\n    {\r\n        for ( const item of navigation )\r\n        {\r\n            if ( item.type === 'basic' )\r\n            {\r\n                flatNavigation.push(item);\r\n                continue;\r\n            }\r\n\r\n            if ( item.type === 'aside' || item.type === 'collapsable' || item.type === 'group' )\r\n            {\r\n                if ( item.children )\r\n                {\r\n                    this.getFlatNavigation(item.children, flatNavigation);\r\n                }\r\n            }\r\n        }\r\n\r\n        return flatNavigation;\r\n    }\r\n\r\n    /**\r\n     * Utility function that returns the item\r\n     * with the given id from given navigation\r\n     *\r\n     * @param id\r\n     * @param navigation\r\n     */\r\n    getItem(id: string, navigation: FuseNavigationItem[]): FuseNavigationItem | null\r\n    {\r\n        for ( const item of navigation )\r\n        {\r\n            if ( item.id === id )\r\n            {\r\n                return item;\r\n            }\r\n\r\n            if ( item.children )\r\n            {\r\n                const childItem = this.getItem(id, item.children);\r\n\r\n                if ( childItem )\r\n                {\r\n                    return childItem;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Utility function that returns the item's parent\r\n     * with the given id from given navigation\r\n     *\r\n     * @param id\r\n     * @param navigation\r\n     * @param parent\r\n     */\r\n    getItemParent(\r\n        id: string,\r\n        navigation: FuseNavigationItem[],\r\n        parent: FuseNavigationItem[] | FuseNavigationItem\r\n    ): FuseNavigationItem[] | FuseNavigationItem | null\r\n    {\r\n        for ( const item of navigation )\r\n        {\r\n            if ( item.id === id )\r\n            {\r\n                return parent;\r\n            }\r\n\r\n            if ( item.children )\r\n            {\r\n                const childItem = this.getItemParent(id, item.children, item);\r\n\r\n                if ( childItem )\r\n                {\r\n                    return childItem;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","<div class=\"fuse-horizontal-navigation-wrapper\">\r\n\r\n    <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\r\n\r\n        <!-- Skip the hidden items -->\r\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n            <!-- Basic -->\r\n            <ng-container *ngIf=\"item.type === 'basic'\">\r\n                <fuse-horizontal-navigation-basic-item\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-horizontal-navigation-basic-item>\r\n            </ng-container>\r\n\r\n            <!-- Branch: aside, collapsable, group -->\r\n            <ng-container *ngIf=\"item.type === 'aside' || item.type === 'collapsable' || item.type === 'group'\">\r\n                <fuse-horizontal-navigation-branch-item\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-horizontal-navigation-branch-item>\r\n            </ng-container>\r\n\r\n            <!-- Spacer -->\r\n            <ng-container *ngIf=\"item.type === 'spacer'\">\r\n                <fuse-horizontal-navigation-spacer-item\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-horizontal-navigation-spacer-item>\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n    </ng-container>\r\n\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\n\r\n@Component({\r\n    selector       : 'fuse-horizontal-navigation',\r\n    templateUrl    : './horizontal.component.html',\r\n    styleUrls      : ['./horizontal.component.scss'],\r\n    animations     : fuseAnimations,\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    exportAs       : 'fuseHorizontalNavigation'\r\n})\r\nexport class FuseHorizontalNavigationComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    @Input() name: string = this._fuseUtilsService.randomId();\r\n    @Input() navigation: FuseNavigationItem[];\r\n\r\n    onRefreshed: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Navigation\r\n        if ( 'navigation' in changes )\r\n        {\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Make sure the name input is not an empty string\r\n        if ( this.name === '' )\r\n        {\r\n            this.name = this._fuseUtilsService.randomId();\r\n        }\r\n\r\n        // Register the navigation component\r\n        this._fuseNavigationService.registerComponent(this.name, this);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Deregister the navigation component from the registry\r\n        this._fuseNavigationService.deregisterComponent(this.name);\r\n\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Refresh the component to apply the changes\r\n     */\r\n    refresh(): void\r\n    {\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Execute the observable\r\n        this.onRefreshed.next(true);\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n}\r\n","export class ScrollbarGeometry\r\n{\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class ScrollbarPosition\r\n{\r\n    public x: number | 'start' | 'end';\r\n    public y: number | 'start' | 'end';\r\n\r\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end')\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { debounceTime, fromEvent, Subject, takeUntil } from 'rxjs';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { merge } from 'lodash-es';\r\nimport { ScrollbarGeometry, ScrollbarPosition } from '@fuse/directives/scrollbar/scrollbar.types';\r\n\r\n/**\r\n * Wrapper directive for the Perfect Scrollbar: https://github.com/mdbootstrap/perfect-scrollbar\r\n */\r\n@Directive({\r\n    selector: '[fuseScrollbar]',\r\n    exportAs: 'fuseScrollbar'\r\n})\r\nexport class FuseScrollbarDirective implements OnChanges, OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_fuseScrollbar: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() fuseScrollbar: boolean = true;\r\n    @Input() fuseScrollbarOptions: PerfectScrollbar.Options;\r\n\r\n    private _animation: number;\r\n    private _options: PerfectScrollbar.Options;\r\n    private _ps: PerfectScrollbar;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _elementRef: ElementRef,\r\n        private _platform: Platform,\r\n        private _router: Router\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for _elementRef\r\n     */\r\n    get elementRef(): ElementRef\r\n    {\r\n        return this._elementRef;\r\n    }\r\n\r\n    /**\r\n     * Getter for _ps\r\n     */\r\n    get ps(): PerfectScrollbar | null\r\n    {\r\n        return this._ps;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Enabled\r\n        if ( 'fuseScrollbar' in changes )\r\n        {\r\n            // Interpret empty string as 'true'\r\n            this.fuseScrollbar = coerceBooleanProperty(changes.fuseScrollbar.currentValue);\r\n\r\n            // If enabled, init the directive\r\n            if ( this.fuseScrollbar )\r\n            {\r\n                this._init();\r\n            }\r\n            // Otherwise destroy it\r\n            else\r\n            {\r\n                this._destroy();\r\n            }\r\n        }\r\n\r\n        // Scrollbar options\r\n        if ( 'fuseScrollbarOptions' in changes )\r\n        {\r\n            // Merge the options\r\n            this._options = merge({}, this._options, changes.fuseScrollbarOptions.currentValue);\r\n\r\n            // Return if not initialized\r\n            if ( !this._ps )\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Destroy and re-init the PerfectScrollbar to update its options\r\n            setTimeout(() => {\r\n                this._destroy();\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this._init();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to window resize event\r\n        fromEvent(window, 'resize')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(150)\r\n            )\r\n            .subscribe(() => {\r\n\r\n                // Update the PerfectScrollbar\r\n                this.update();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        this._destroy();\r\n\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Is enabled\r\n     */\r\n    isEnabled(): boolean\r\n    {\r\n        return this.fuseScrollbar;\r\n    }\r\n\r\n    /**\r\n     * Update the scrollbar\r\n     */\r\n    update(): void\r\n    {\r\n        // Return if not initialized\r\n        if ( !this._ps )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Update the PerfectScrollbar\r\n        this._ps.update();\r\n    }\r\n\r\n    /**\r\n     * Destroy the scrollbar\r\n     */\r\n    destroy(): void\r\n    {\r\n        this.ngOnDestroy();\r\n    }\r\n\r\n    /**\r\n     * Returns the geometry of the scrollable element\r\n     *\r\n     * @param prefix\r\n     */\r\n    geometry(prefix: string = 'scroll'): ScrollbarGeometry\r\n    {\r\n        return new ScrollbarGeometry(\r\n            this._elementRef.nativeElement[prefix + 'Left'],\r\n            this._elementRef.nativeElement[prefix + 'Top'],\r\n            this._elementRef.nativeElement[prefix + 'Width'],\r\n            this._elementRef.nativeElement[prefix + 'Height']);\r\n    }\r\n\r\n    /**\r\n     * Returns the position of the scrollable element\r\n     *\r\n     * @param absolute\r\n     */\r\n    position(absolute: boolean = false): ScrollbarPosition\r\n    {\r\n        let scrollbarPosition;\r\n\r\n        if ( !absolute && this._ps )\r\n        {\r\n            scrollbarPosition = new ScrollbarPosition(\r\n                this._ps.reach.x || 0,\r\n                this._ps.reach.y || 0\r\n            );\r\n        }\r\n        else\r\n        {\r\n            scrollbarPosition = new ScrollbarPosition(\r\n                this._elementRef.nativeElement.scrollLeft,\r\n                this._elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n\r\n        return scrollbarPosition;\r\n    }\r\n\r\n    /**\r\n     * Scroll to\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @param speed\r\n     */\r\n    scrollTo(x: number, y?: number, speed?: number): void\r\n    {\r\n        if ( y == null && speed == null )\r\n        {\r\n            this.animateScrolling('scrollTop', x, speed);\r\n        }\r\n        else\r\n        {\r\n            if ( x != null )\r\n            {\r\n                this.animateScrolling('scrollLeft', x, speed);\r\n            }\r\n\r\n            if ( y != null )\r\n            {\r\n                this.animateScrolling('scrollTop', y, speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scroll to X\r\n     *\r\n     * @param x\r\n     * @param speed\r\n     */\r\n    scrollToX(x: number, speed?: number): void\r\n    {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to Y\r\n     *\r\n     * @param y\r\n     * @param speed\r\n     */\r\n    scrollToY(y: number, speed?: number): void\r\n    {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to top\r\n     *\r\n     * @param offset\r\n     * @param speed\r\n     */\r\n    scrollToTop(offset: number = 0, speed?: number): void\r\n    {\r\n        this.animateScrolling('scrollTop', offset, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to bottom\r\n     *\r\n     * @param offset\r\n     * @param speed\r\n     */\r\n    scrollToBottom(offset: number = 0, speed?: number): void\r\n    {\r\n        const top = this._elementRef.nativeElement.scrollHeight - this._elementRef.nativeElement.clientHeight;\r\n        this.animateScrolling('scrollTop', top - offset, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to left\r\n     *\r\n     * @param offset\r\n     * @param speed\r\n     */\r\n    scrollToLeft(offset: number = 0, speed?: number): void\r\n    {\r\n        this.animateScrolling('scrollLeft', offset, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to right\r\n     *\r\n     * @param offset\r\n     * @param speed\r\n     */\r\n    scrollToRight(offset: number = 0, speed?: number): void\r\n    {\r\n        const left = this._elementRef.nativeElement.scrollWidth - this._elementRef.nativeElement.clientWidth;\r\n        this.animateScrolling('scrollLeft', left - offset, speed);\r\n    }\r\n\r\n    /**\r\n     * Scroll to element\r\n     *\r\n     * @param qs\r\n     * @param offset\r\n     * @param ignoreVisible If true, scrollToElement won't happen if element is already inside the current viewport\r\n     * @param speed\r\n     */\r\n    scrollToElement(qs: string, offset: number = 0, ignoreVisible: boolean = false, speed?: number): void\r\n    {\r\n        const element = this._elementRef.nativeElement.querySelector(qs);\r\n\r\n        if ( !element )\r\n        {\r\n            return;\r\n        }\r\n\r\n        const elementPos = element.getBoundingClientRect();\r\n        const scrollerPos = this._elementRef.nativeElement.getBoundingClientRect();\r\n\r\n        if ( this._elementRef.nativeElement.classList.contains('ps--active-x') )\r\n        {\r\n            if ( ignoreVisible && elementPos.right <= (scrollerPos.right - Math.abs(offset)) )\r\n            {\r\n                return;\r\n            }\r\n\r\n            const currentPos = this._elementRef.nativeElement['scrollLeft'];\r\n            const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n            this.animateScrolling('scrollLeft', position + offset, speed);\r\n        }\r\n\r\n        if ( this._elementRef.nativeElement.classList.contains('ps--active-y') )\r\n        {\r\n            if ( ignoreVisible && elementPos.bottom <= (scrollerPos.bottom - Math.abs(offset)) )\r\n            {\r\n                return;\r\n            }\r\n\r\n            const currentPos = this._elementRef.nativeElement['scrollTop'];\r\n            const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n            this.animateScrolling('scrollTop', position + offset, speed);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Animate scrolling\r\n     *\r\n     * @param target\r\n     * @param value\r\n     * @param speed\r\n     */\r\n    animateScrolling(target: string, value: number, speed?: number): void\r\n    {\r\n        if ( this._animation )\r\n        {\r\n            window.cancelAnimationFrame(this._animation);\r\n            this._animation = null;\r\n        }\r\n\r\n        if ( !speed || typeof window === 'undefined' )\r\n        {\r\n            this._elementRef.nativeElement[target] = value;\r\n        }\r\n        else if ( value !== this._elementRef.nativeElement[target] )\r\n        {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this._elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number): void => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if ( this._elementRef.nativeElement[target] === oldValue )\r\n                {\r\n                    if ( scrollCount >= Math.PI )\r\n                    {\r\n                        this.animateScrolling(target, value, 0);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this._elementRef.nativeElement[target];\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this._animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Initialize\r\n     *\r\n     * @private\r\n     */\r\n    private _init(): void\r\n    {\r\n        // Return if already initialized\r\n        if ( this._ps )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Return if on mobile or not on browser\r\n        if ( this._platform.ANDROID || this._platform.IOS || !this._platform.isBrowser )\r\n        {\r\n            this.fuseScrollbar = false;\r\n            return;\r\n        }\r\n\r\n        // Initialize the PerfectScrollbar\r\n        this._ps = new PerfectScrollbar(this._elementRef.nativeElement, {...this._options});\r\n    }\r\n\r\n    /**\r\n     * Destroy\r\n     *\r\n     * @private\r\n     */\r\n    private _destroy(): void\r\n    {\r\n        // Return if not initialized\r\n        if ( !this._ps )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Destroy the PerfectScrollbar\r\n        this._ps.destroy();\r\n\r\n        // Clean up\r\n        this._ps = null;\r\n    }\r\n}\r\n","<div class=\"fuse-vertical-navigation-wrapper\">\r\n\r\n    <!-- Header -->\r\n    <div class=\"fuse-vertical-navigation-header\">\r\n        <ng-content select=\"[fuseVerticalNavigationHeader]\"></ng-content>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div\r\n        class=\"fuse-vertical-navigation-content\"\r\n        fuseScrollbar\r\n        [fuseScrollbarOptions]=\"{wheelPropagation: inner, suppressScrollX: true}\"\r\n        #navigationContent>\r\n\r\n        <!-- Content header -->\r\n        <div class=\"fuse-vertical-navigation-content-header\">\r\n            <ng-content select=\"[fuseVerticalNavigationContentHeader]\"></ng-content>\r\n        </div>\r\n\r\n        <!-- Items -->\r\n        <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\r\n\r\n            <!-- Skip the hidden items -->\r\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n                <!-- Aside -->\r\n                <ng-container *ngIf=\"item.type === 'aside'\">\r\n                    <fuse-vertical-navigation-aside-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        [activeItemId]=\"activeAsideItemId\"\r\n                        [autoCollapse]=\"autoCollapse\"\r\n                        [skipChildren]=\"true\"\r\n                        (click)=\"toggleAside(item)\"></fuse-vertical-navigation-aside-item>\r\n                </ng-container>\r\n\r\n                <!-- Basic -->\r\n                <ng-container *ngIf=\"item.type === 'basic'\">\r\n                    <fuse-vertical-navigation-basic-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-basic-item>\r\n                </ng-container>\r\n\r\n                <!-- Collapsable -->\r\n                <ng-container *ngIf=\"item.type === 'collapsable'\">\r\n                    <fuse-vertical-navigation-collapsable-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\r\n                </ng-container>\r\n\r\n                <!-- Divider -->\r\n                <ng-container *ngIf=\"item.type === 'divider'\">\r\n                    <fuse-vertical-navigation-divider-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-divider-item>\r\n                </ng-container>\r\n\r\n                <!-- Group -->\r\n                <ng-container *ngIf=\"item.type === 'group'\">\r\n                    <fuse-vertical-navigation-group-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-group-item>\r\n                </ng-container>\r\n\r\n                <!-- Spacer -->\r\n                <ng-container *ngIf=\"item.type === 'spacer'\">\r\n                    <fuse-vertical-navigation-spacer-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-spacer-item>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n        <!-- Content footer -->\r\n        <div class=\"fuse-vertical-navigation-content-footer\">\r\n            <ng-content select=\"[fuseVerticalNavigationContentFooter]\"></ng-content>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Footer -->\r\n    <div class=\"fuse-vertical-navigation-footer\">\r\n        <ng-content select=\"[fuseVerticalNavigationFooter]\"></ng-content>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!-- Aside -->\r\n<ng-container *ngIf=\"activeAsideItemId\">\r\n    <div\r\n        class=\"fuse-vertical-navigation-aside-wrapper\"\r\n        fuseScrollbar\r\n        [fuseScrollbarOptions]=\"{wheelPropagation: false, suppressScrollX: true}\"\r\n        [@fadeInLeft]=\"position === 'left'\"\r\n        [@fadeInRight]=\"position === 'right'\"\r\n        [@fadeOutLeft]=\"position === 'left'\"\r\n        [@fadeOutRight]=\"position === 'right'\">\r\n\r\n        <!-- Items -->\r\n        <ng-container *ngFor=\"let item of navigation; trackBy: trackByFn\">\r\n\r\n            <!-- Skip the hidden items -->\r\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n                <!-- Aside -->\r\n                <ng-container *ngIf=\"item.type === 'aside' && item.id === activeAsideItemId\">\r\n                    <fuse-vertical-navigation-aside-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-aside-item>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n    </div>\r\n</ng-container>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, Renderer2, SimpleChanges, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\r\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ScrollStrategy, ScrollStrategyOptions } from '@angular/cdk/overlay';\r\nimport { delay, filter, merge, ReplaySubject, Subject, Subscription, takeUntil } from 'rxjs';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseNavigationItem, FuseVerticalNavigationAppearance, FuseVerticalNavigationMode, FuseVerticalNavigationPosition } from '@fuse/components/navigation/navigation.types';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseScrollbarDirective } from '@fuse/directives/scrollbar/scrollbar.directive';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation',\r\n    templateUrl    : './vertical.component.html',\r\n    styleUrls      : ['./vertical.component.scss'],\r\n    animations     : fuseAnimations,\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    exportAs       : 'fuseVerticalNavigation'\r\n})\r\nexport class FuseVerticalNavigationComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_inner: BooleanInput;\r\n    static ngAcceptInputType_opened: BooleanInput;\r\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() appearance: FuseVerticalNavigationAppearance = 'default';\r\n    @Input() autoCollapse: boolean = true;\r\n    @Input() inner: boolean = false;\r\n    @Input() mode: FuseVerticalNavigationMode = 'side';\r\n    @Input() name: string = this._fuseUtilsService.randomId();\r\n    @Input() navigation: FuseNavigationItem[];\r\n    @Input() opened: boolean = true;\r\n    @Input() position: FuseVerticalNavigationPosition = 'left';\r\n    @Input() transparentOverlay: boolean = false;\r\n    @Output() readonly appearanceChanged: EventEmitter<FuseVerticalNavigationAppearance> = new EventEmitter<FuseVerticalNavigationAppearance>();\r\n    @Output() readonly modeChanged: EventEmitter<FuseVerticalNavigationMode> = new EventEmitter<FuseVerticalNavigationMode>();\r\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() readonly positionChanged: EventEmitter<FuseVerticalNavigationPosition> = new EventEmitter<FuseVerticalNavigationPosition>();\r\n    @ViewChild('navigationContent') private _navigationContentEl: ElementRef;\r\n\r\n    activeAsideItemId: string | null = null;\r\n    onCollapsableItemCollapsed: ReplaySubject<FuseNavigationItem> = new ReplaySubject<FuseNavigationItem>(1);\r\n    onCollapsableItemExpanded: ReplaySubject<FuseNavigationItem> = new ReplaySubject<FuseNavigationItem>(1);\r\n    onRefreshed: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\r\n    private _animationsEnabled: boolean = false;\r\n    private _asideOverlay: HTMLElement;\r\n    private readonly _handleAsideOverlayClick: any;\r\n    private readonly _handleOverlayClick: any;\r\n    private _hovered: boolean = false;\r\n    private _overlay: HTMLElement;\r\n    private _player: AnimationPlayer;\r\n    private _scrollStrategy: ScrollStrategy = this._scrollStrategyOptions.block();\r\n    private _fuseScrollbarDirectives!: QueryList<FuseScrollbarDirective>;\r\n    private _fuseScrollbarDirectivesSubscription: Subscription;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _animationBuilder: AnimationBuilder,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _elementRef: ElementRef,\r\n        private _renderer2: Renderer2,\r\n        private _router: Router,\r\n        private _scrollStrategyOptions: ScrollStrategyOptions,\r\n        private _fuseNavigationService: FuseNavigationService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n        this._handleAsideOverlayClick = (): void => {\r\n            this.closeAside();\r\n        };\r\n        this._handleOverlayClick = (): void => {\r\n            this.close();\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Host binding for component classes\r\n     */\r\n    @HostBinding('class') get classList(): any\r\n    {\r\n        /* eslint-disable @typescript-eslint/naming-convention */\r\n        return {\r\n            'fuse-vertical-navigation-animations-enabled'             : this._animationsEnabled,\r\n            [`fuse-vertical-navigation-appearance-${this.appearance}`]: true,\r\n            'fuse-vertical-navigation-hover'                          : this._hovered,\r\n            'fuse-vertical-navigation-inner'                          : this.inner,\r\n            'fuse-vertical-navigation-mode-over'                      : this.mode === 'over',\r\n            'fuse-vertical-navigation-mode-side'                      : this.mode === 'side',\r\n            'fuse-vertical-navigation-opened'                         : this.opened,\r\n            'fuse-vertical-navigation-position-left'                  : this.position === 'left',\r\n            'fuse-vertical-navigation-position-right'                 : this.position === 'right'\r\n        };\r\n        /* eslint-enable @typescript-eslint/naming-convention */\r\n    }\r\n\r\n    /**\r\n     * Host binding for component inline styles\r\n     */\r\n    @HostBinding('style') get styleList(): any\r\n    {\r\n        return {\r\n            'visibility': this.opened ? 'visible' : 'hidden'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Setter for fuseScrollbarDirectives\r\n     */\r\n    @ViewChildren(FuseScrollbarDirective)\r\n    set fuseScrollbarDirectives(fuseScrollbarDirectives: QueryList<FuseScrollbarDirective>)\r\n    {\r\n        // Store the directives\r\n        this._fuseScrollbarDirectives = fuseScrollbarDirectives;\r\n\r\n        // Return if there are no directives\r\n        if ( fuseScrollbarDirectives.length === 0 )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Unsubscribe the previous subscriptions\r\n        if ( this._fuseScrollbarDirectivesSubscription )\r\n        {\r\n            this._fuseScrollbarDirectivesSubscription.unsubscribe();\r\n        }\r\n\r\n        // Update the scrollbars on collapsable items' collapse/expand\r\n        this._fuseScrollbarDirectivesSubscription =\r\n            merge(\r\n                this.onCollapsableItemCollapsed,\r\n                this.onCollapsableItemExpanded\r\n            )\r\n                .pipe(\r\n                    takeUntil(this._unsubscribeAll),\r\n                    delay(250)\r\n                )\r\n                .subscribe(() => {\r\n\r\n                    // Loop through the scrollbars and update them\r\n                    fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {\r\n                        fuseScrollbarDirective.update();\r\n                    });\r\n                });\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Decorated methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On mouseenter\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseenter')\r\n    private _onMouseenter(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = true;\r\n    }\r\n\r\n    /**\r\n     * On mouseleave\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseleave')\r\n    private _onMouseleave(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = false;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Appearance\r\n        if ( 'appearance' in changes )\r\n        {\r\n            // Execute the observable\r\n            this.appearanceChanged.next(changes.appearance.currentValue);\r\n        }\r\n\r\n        // Inner\r\n        if ( 'inner' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.inner = coerceBooleanProperty(changes.inner.currentValue);\r\n        }\r\n\r\n        // Mode\r\n        if ( 'mode' in changes )\r\n        {\r\n            // Get the previous and current values\r\n            const currentMode = changes.mode.currentValue;\r\n            const previousMode = changes.mode.previousValue;\r\n\r\n            // Disable the animations\r\n            this._disableAnimations();\r\n\r\n            // If the mode changes: 'over -> side'\r\n            if ( previousMode === 'over' && currentMode === 'side' )\r\n            {\r\n                // Hide the overlay\r\n                this._hideOverlay();\r\n            }\r\n\r\n            // If the mode changes: 'side -> over'\r\n            if ( previousMode === 'side' && currentMode === 'over' )\r\n            {\r\n                // Close the aside\r\n                this.closeAside();\r\n\r\n                // If the navigation is opened\r\n                if ( this.opened )\r\n                {\r\n                    // Show the overlay\r\n                    this._showOverlay();\r\n                }\r\n            }\r\n\r\n            // Execute the observable\r\n            this.modeChanged.next(currentMode);\r\n\r\n            // Enable the animations after a delay\r\n            // The delay must be bigger than the current transition-duration\r\n            // to make sure nothing will be animated while the mode changing\r\n            setTimeout(() => {\r\n                this._enableAnimations();\r\n            }, 500);\r\n        }\r\n\r\n        // Navigation\r\n        if ( 'navigation' in changes )\r\n        {\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n\r\n        // Opened\r\n        if ( 'opened' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.opened = coerceBooleanProperty(changes.opened.currentValue);\r\n\r\n            // Open/close the navigation\r\n            this._toggleOpened(this.opened);\r\n        }\r\n\r\n        // Position\r\n        if ( 'position' in changes )\r\n        {\r\n            // Execute the observable\r\n            this.positionChanged.next(changes.position.currentValue);\r\n        }\r\n\r\n        // Transparent overlay\r\n        if ( 'transparentOverlay' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Make sure the name input is not an empty string\r\n        if ( this.name === '' )\r\n        {\r\n            this.name = this._fuseUtilsService.randomId();\r\n        }\r\n\r\n        // Register the navigation component\r\n        this._fuseNavigationService.registerComponent(this.name, this);\r\n\r\n        // Subscribe to the 'NavigationEnd' event\r\n        this._router.events\r\n            .pipe(\r\n                filter(event => event instanceof NavigationEnd),\r\n                takeUntil(this._unsubscribeAll)\r\n            )\r\n            .subscribe(() => {\r\n\r\n                // If the mode is 'over' and the navigation is opened...\r\n                if ( this.mode === 'over' && this.opened )\r\n                {\r\n                    // Close the navigation\r\n                    this.close();\r\n                }\r\n\r\n                // If the mode is 'side' and the aside is active...\r\n                if ( this.mode === 'side' && this.activeAsideItemId )\r\n                {\r\n                    // Close the aside\r\n                    this.closeAside();\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        setTimeout(() => {\r\n\r\n            // Return if 'navigation content' element does not exist\r\n            if ( !this._navigationContentEl )\r\n            {\r\n                return;\r\n            }\r\n\r\n            // If 'navigation content' element doesn't have\r\n            // perfect scrollbar activated on it...\r\n            if ( !this._navigationContentEl.nativeElement.classList.contains('ps') )\r\n            {\r\n                // Find the active item\r\n                const activeItem = this._navigationContentEl.nativeElement.querySelector('.fuse-vertical-navigation-item-active');\r\n\r\n                // If the active item exists, scroll it into view\r\n                if ( activeItem )\r\n                {\r\n                    activeItem.scrollIntoView();\r\n                }\r\n            }\r\n            // Otherwise\r\n            else\r\n            {\r\n                // Go through all the scrollbar directives\r\n                this._fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {\r\n\r\n                    // Skip if not enabled\r\n                    if ( !fuseScrollbarDirective.isEnabled() )\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    // Scroll to the active element\r\n                    fuseScrollbarDirective.scrollToElement('.fuse-vertical-navigation-item-active', -120, true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Forcefully close the navigation and aside in case they are opened\r\n        this.close();\r\n        this.closeAside();\r\n\r\n        // Deregister the navigation component from the registry\r\n        this._fuseNavigationService.deregisterComponent(this.name);\r\n\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Refresh the component to apply the changes\r\n     */\r\n    refresh(): void\r\n    {\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Execute the observable\r\n        this.onRefreshed.next(true);\r\n    }\r\n\r\n    /**\r\n     * Open the navigation\r\n     */\r\n    open(): void\r\n    {\r\n        // Return if the navigation is already open\r\n        if ( this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Set the opened\r\n        this._toggleOpened(true);\r\n    }\r\n\r\n    /**\r\n     * Close the navigation\r\n     */\r\n    close(): void\r\n    {\r\n        // Return if the navigation is already closed\r\n        if ( !this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Close the aside\r\n        this.closeAside();\r\n\r\n        // Set the opened\r\n        this._toggleOpened(false);\r\n    }\r\n\r\n    /**\r\n     * Toggle the navigation\r\n     */\r\n    toggle(): void\r\n    {\r\n        // Toggle\r\n        if ( this.opened )\r\n        {\r\n            this.close();\r\n        }\r\n        else\r\n        {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open the aside\r\n     *\r\n     * @param item\r\n     */\r\n    openAside(item: FuseNavigationItem): void\r\n    {\r\n        // Return if the item is disabled\r\n        if ( item.disabled || !item.id )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Open\r\n        this.activeAsideItemId = item.id;\r\n\r\n        // Show the aside overlay\r\n        this._showAsideOverlay();\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Close the aside\r\n     */\r\n    closeAside(): void\r\n    {\r\n        // Close\r\n        this.activeAsideItemId = null;\r\n\r\n        // Hide the aside overlay\r\n        this._hideAsideOverlay();\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Toggle the aside\r\n     *\r\n     * @param item\r\n     */\r\n    toggleAside(item: FuseNavigationItem): void\r\n    {\r\n        // Toggle\r\n        if ( this.activeAsideItemId === item.id )\r\n        {\r\n            this.closeAside();\r\n        }\r\n        else\r\n        {\r\n            this.openAside(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Enable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _enableAnimations(): void\r\n    {\r\n        // Return if the animations are already enabled\r\n        if ( this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Enable the animations\r\n        this._animationsEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _disableAnimations(): void\r\n    {\r\n        // Return if the animations are already disabled\r\n        if ( !this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Disable the animations\r\n        this._animationsEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * Show the overlay\r\n     *\r\n     * @private\r\n     */\r\n    private _showOverlay(): void\r\n    {\r\n        // Return if there is already an overlay\r\n        if ( this._asideOverlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the overlay element\r\n        this._overlay = this._renderer2.createElement('div');\r\n\r\n        // Add a class to the overlay element\r\n        this._overlay.classList.add('fuse-vertical-navigation-overlay');\r\n\r\n        // Add a class depending on the transparentOverlay option\r\n        if ( this.transparentOverlay )\r\n        {\r\n            this._overlay.classList.add('fuse-vertical-navigation-overlay-transparent');\r\n        }\r\n\r\n        // Append the overlay to the parent of the navigation\r\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\r\n\r\n        // Enable block scroll strategy\r\n        this._scrollStrategy.enable();\r\n\r\n        // Create the enter animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Add an event listener to the overlay\r\n        this._overlay.addEventListener('click', this._handleOverlayClick);\r\n    }\r\n\r\n    /**\r\n     * Hide the overlay\r\n     *\r\n     * @private\r\n     */\r\n    private _hideOverlay(): void\r\n    {\r\n        if ( !this._overlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the leave animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Once the animation is done...\r\n        this._player.onDone(() => {\r\n\r\n            // If the overlay still exists...\r\n            if ( this._overlay )\r\n            {\r\n                // Remove the event listener\r\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\r\n\r\n                // Remove the overlay\r\n                this._overlay.parentNode.removeChild(this._overlay);\r\n                this._overlay = null;\r\n            }\r\n\r\n            // Disable block scroll strategy\r\n            this._scrollStrategy.disable();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show the aside overlay\r\n     *\r\n     * @private\r\n     */\r\n    private _showAsideOverlay(): void\r\n    {\r\n        // Return if there is already an overlay\r\n        if ( this._asideOverlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the aside overlay element\r\n        this._asideOverlay = this._renderer2.createElement('div');\r\n\r\n        // Add a class to the aside overlay element\r\n        this._asideOverlay.classList.add('fuse-vertical-navigation-aside-overlay');\r\n\r\n        // Append the aside overlay to the parent of the navigation\r\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._asideOverlay);\r\n\r\n        // Create the enter animation and attach it to the player\r\n        this._player =\r\n            this._animationBuilder\r\n                .build([\r\n                    animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\r\n                ]).create(this._asideOverlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Add an event listener to the aside overlay\r\n        this._asideOverlay.addEventListener('click', this._handleAsideOverlayClick);\r\n    }\r\n\r\n    /**\r\n     * Hide the aside overlay\r\n     *\r\n     * @private\r\n     */\r\n    private _hideAsideOverlay(): void\r\n    {\r\n        if ( !this._asideOverlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the leave animation and attach it to the player\r\n        this._player =\r\n            this._animationBuilder\r\n                .build([\r\n                    animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\r\n                ]).create(this._asideOverlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Once the animation is done...\r\n        this._player.onDone(() => {\r\n\r\n            // If the aside overlay still exists...\r\n            if ( this._asideOverlay )\r\n            {\r\n                // Remove the event listener\r\n                this._asideOverlay.removeEventListener('click', this._handleAsideOverlayClick);\r\n\r\n                // Remove the aside overlay\r\n                this._asideOverlay.parentNode.removeChild(this._asideOverlay);\r\n                this._asideOverlay = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open/close the navigation\r\n     *\r\n     * @param open\r\n     * @private\r\n     */\r\n    private _toggleOpened(open: boolean): void\r\n    {\r\n        // Set the opened\r\n        this.opened = open;\r\n\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // If the navigation opened, and the mode\r\n        // is 'over', show the overlay\r\n        if ( this.mode === 'over' )\r\n        {\r\n            if ( this.opened )\r\n            {\r\n                this._showOverlay();\r\n            }\r\n            else\r\n            {\r\n                this._hideOverlay();\r\n            }\r\n        }\r\n\r\n        // Execute the observable\r\n        this.openedChanged.next(open);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FuseScrollbarDirective } from '@fuse/directives/scrollbar/scrollbar.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseScrollbarDirective\r\n    ],\r\n    exports     : [\r\n        FuseScrollbarDirective\r\n    ]\r\n})\r\nexport class FuseScrollbarModule\r\n{\r\n}\r\n","<!-- Item wrapper -->\r\n<div\r\n    class=\"fuse-horizontal-navigation-item-wrapper\"\r\n    [class.fuse-horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n    [ngClass]=\"item.classes?.wrapper\">\r\n\r\n    <!-- Item with an internal link -->\r\n    <ng-container *ngIf=\"item.link && !item.externalLink && !item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\r\n            [routerLink]=\"[item.link]\"\r\n            [fragment]=\"item.fragment ?? null\"\r\n            [preserveFragment]=\"item.preserveFragment ?? false\"\r\n            [queryParams]=\"item.queryParams ?? null\"\r\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\r\n            [routerLinkActive]=\"'fuse-horizontal-navigation-item-active'\"\r\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item with an external link -->\r\n    <ng-container *ngIf=\"item.link && item.externalLink && !item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [href]=\"item.link\"\r\n            [target]=\"item.target || '_self'\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with a function -->\r\n    <ng-container *ngIf=\"!item.link && item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item with an internal link and function -->\r\n    <ng-container *ngIf=\"item.link && !item.externalLink && item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\r\n            [routerLink]=\"[item.link]\"\r\n            [fragment]=\"item.fragment ?? null\"\r\n            [preserveFragment]=\"item.preserveFragment ?? false\"\r\n            [queryParams]=\"item.queryParams ?? null\"\r\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\r\n            [routerLinkActive]=\"'fuse-horizontal-navigation-item-active'\"\r\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item with an external link and function -->\r\n    <ng-container *ngIf=\"item.link && item.externalLink && item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [href]=\"item.link\"\r\n            [target]=\"item.target || '_self'\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\"\r\n            mat-menu-item>\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with a no link and no function -->\r\n    <ng-container *ngIf=\"!item.link && !item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [ngClass]=\"{'fuse-horizontal-navigation-item-active-forced': item.active}\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item is disabled -->\r\n    <ng-container *ngIf=\"item.disabled\">\r\n        <div class=\"fuse-horizontal-navigation-item fuse-horizontal-navigation-item-disabled\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n\r\n<!-- Item template -->\r\n<ng-template #itemTemplate>\r\n\r\n    <!-- Icon -->\r\n    <ng-container *ngIf=\"item.icon\">\r\n        <mat-icon\r\n            class=\"fuse-horizontal-navigation-item-icon\"\r\n            [ngClass]=\"item.classes?.icon\"\r\n            [svgIcon]=\"item.icon\"></mat-icon>\r\n    </ng-container>\r\n\r\n    <!-- Title & Subtitle -->\r\n    <div class=\"fuse-horizontal-navigation-item-title-wrapper\">\r\n        <div class=\"fuse-horizontal-navigation-item-title\">\r\n            <span [ngClass]=\"item.classes?.title\">\r\n                {{item.title}}\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"item.subtitle\">\r\n            <div class=\"fuse-horizontal-navigation-item-subtitle text-hint\">\r\n                <span [ngClass]=\"item.classes?.subtitle\">\r\n                    {{item.subtitle}}\r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <!-- Badge -->\r\n    <ng-container *ngIf=\"item.badge\">\r\n        <div class=\"fuse-horizontal-navigation-item-badge\">\r\n            <div\r\n                class=\"fuse-horizontal-navigation-item-badge-content\"\r\n                [ngClass]=\"item.badge.classes\">\r\n                {{item.badge.title}}\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { IsActiveMatchOptions } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\n\r\n@Component({\r\n    selector       : 'fuse-horizontal-navigation-basic-item',\r\n    templateUrl    : './basic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseHorizontalNavigationBasicItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    isActiveMatchOptions: IsActiveMatchOptions;\r\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n        // Set the equivalent of {exact: false} as default for active match options.\r\n        // We are not assigning the item.isActiveMatchOptions directly to the\r\n        // [routerLinkActiveOptions] because if it's \"undefined\" initially, the router\r\n        // will throw an error and stop working.\r\n        this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the \"isActiveMatchOptions\" either from item's\r\n        // \"isActiveMatchOptions\" or the equivalent form of\r\n        // item's \"exactMatch\" option\r\n        this.isActiveMatchOptions =\r\n            this.item.isActiveMatchOptions ?? this.item.exactMatch\r\n                ? this._fuseUtilsService.exactMatchOptions\r\n                : this._fuseUtilsService.subsetMatchOptions;\r\n\r\n        // Get the parent navigation component\r\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-horizontal-navigation-divider-item',\r\n    templateUrl    : './divider.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseHorizontalNavigationDividerItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- Divider -->\r\n<div\r\n    class=\"fuse-horizontal-navigation-item-wrapper divider\"\r\n    [ngClass]=\"item.classes?.wrapper\"></div>\r\n","<ng-container *ngIf=\"!child\">\r\n    <div\r\n        [ngClass]=\"{'fuse-horizontal-navigation-menu-active': trigger.menuOpen,\r\n                 'fuse-horizontal-navigation-menu-active-forced': item.active}\"\r\n        [matMenuTriggerFor]=\"matMenu\"\r\n        (onMenuOpen)=\"triggerChangeDetection()\"\r\n        (onMenuClose)=\"triggerChangeDetection()\"\r\n        #trigger=\"matMenuTrigger\">\r\n        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\r\n    </div>\r\n</ng-container>\r\n\r\n<mat-menu\r\n    class=\"fuse-horizontal-navigation-menu-panel\"\r\n    [overlapTrigger]=\"false\"\r\n    #matMenu=\"matMenu\">\r\n\r\n    <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\r\n\r\n        <!-- Skip the hidden items -->\r\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n            <!-- Basic -->\r\n            <ng-container *ngIf=\"item.type === 'basic'\">\r\n                <div\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    [disabled]=\"item.disabled\"\r\n                    mat-menu-item>\r\n                    <fuse-horizontal-navigation-basic-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-horizontal-navigation-basic-item>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <!-- Branch: aside, collapsable, group -->\r\n            <ng-container *ngIf=\"item.type === 'aside' || item.type === 'collapsable' || item.type === 'group'\">\r\n                <div\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    [disabled]=\"item.disabled\"\r\n                    [matMenuTriggerFor]=\"branch.matMenu\"\r\n                    mat-menu-item>\r\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item}\"></ng-container>\r\n                    <fuse-horizontal-navigation-branch-item\r\n                        [child]=\"true\"\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        #branch></fuse-horizontal-navigation-branch-item>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <!-- Divider -->\r\n            <ng-container *ngIf=\"item.type === 'divider'\">\r\n                <div\r\n                    class=\"fuse-horizontal-navigation-menu-item\"\r\n                    mat-menu-item>\r\n                    <fuse-horizontal-navigation-divider-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-horizontal-navigation-divider-item>\r\n                </div>\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n    </ng-container>\r\n\r\n</mat-menu>\r\n\r\n<!-- Item template -->\r\n<ng-template\r\n    let-item\r\n    #itemTemplate>\r\n\r\n    <div\r\n        class=\"fuse-horizontal-navigation-item-wrapper\"\r\n        [class.fuse-horizontal-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n        [ngClass]=\"item.classes?.wrapper\">\r\n\r\n        <div\r\n            class=\"fuse-horizontal-navigation-item\"\r\n            [ngClass]=\"{'fuse-horizontal-navigation-item-disabled': item.disabled,\r\n                         'fuse-horizontal-navigation-item-active-forced': item.active}\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n\r\n            <!-- Icon -->\r\n            <ng-container *ngIf=\"item.icon\">\r\n                <mat-icon\r\n                    class=\"fuse-horizontal-navigation-item-icon\"\r\n                    [ngClass]=\"item.classes?.icon\"\r\n                    [svgIcon]=\"item.icon\"></mat-icon>\r\n            </ng-container>\r\n\r\n            <!-- Title & Subtitle -->\r\n            <div class=\"fuse-horizontal-navigation-item-title-wrapper\">\r\n                <div class=\"fuse-horizontal-navigation-item-title\">\r\n                    <span [ngClass]=\"item.classes?.title\">\r\n                        {{item.title}}\r\n                    </span>\r\n                </div>\r\n                <ng-container *ngIf=\"item.subtitle\">\r\n                    <div class=\"fuse-horizontal-navigation-item-subtitle text-hint\">\r\n                        <span [ngClass]=\"item.classes?.subtitle\">\r\n                            {{item.subtitle}}\r\n                        </span>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <!-- Badge -->\r\n            <ng-container *ngIf=\"item.badge\">\r\n                <div class=\"fuse-horizontal-navigation-item-badge\">\r\n                    <div\r\n                        class=\"fuse-horizontal-navigation-item-badge-content\"\r\n                        [ngClass]=\"item.badge.classes\">\r\n                        {{item.badge.title}}\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { MatMenu } from '@angular/material/menu';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-horizontal-navigation-branch-item',\r\n    templateUrl    : './branch.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseHorizontalNavigationBranchItemComponent implements OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_child: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() child: boolean = false;\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n    @ViewChild('matMenu', {static: true}) matMenu: MatMenu;\r\n\r\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Trigger the change detection\r\n     */\r\n    triggerChangeDetection(): void\r\n    {\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-horizontal-navigation-spacer-item',\r\n    templateUrl    : './spacer.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseHorizontalNavigationSpacerItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    private _fuseHorizontalNavigationComponent: FuseHorizontalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseHorizontalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- Spacer -->\r\n<div\r\n    class=\"fuse-horizontal-navigation-item-wrapper\"\r\n    [ngClass]=\"item.classes?.wrapper\"></div>\r\n","<!-- Item wrapper -->\r\n<div\r\n    class=\"fuse-vertical-navigation-item-wrapper\"\r\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n    [ngClass]=\"item.classes?.wrapper\">\r\n\r\n    <!-- Item with an internal link -->\r\n    <ng-container *ngIf=\"item.link && !item.externalLink && !item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\r\n            [routerLink]=\"[item.link]\"\r\n            [fragment]=\"item.fragment ?? null\"\r\n            [preserveFragment]=\"item.preserveFragment ?? false\"\r\n            [queryParams]=\"item.queryParams ?? null\"\r\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\r\n            [routerLinkActive]=\"'fuse-vertical-navigation-item-active'\"\r\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with an external link -->\r\n    <ng-container *ngIf=\"item.link && item.externalLink && !item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [href]=\"item.link\"\r\n            [target]=\"item.target || '_self'\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with a function -->\r\n    <ng-container *ngIf=\"!item.link && item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item with an internal link and function -->\r\n    <ng-container *ngIf=\"item.link && !item.externalLink && item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\r\n            [routerLink]=\"[item.link]\"\r\n            [fragment]=\"item.fragment ?? null\"\r\n            [preserveFragment]=\"item.preserveFragment ?? false\"\r\n            [queryParams]=\"item.queryParams ?? null\"\r\n            [queryParamsHandling]=\"item.queryParamsHandling ?? null\"\r\n            [routerLinkActive]=\"'fuse-vertical-navigation-item-active'\"\r\n            [routerLinkActiveOptions]=\"isActiveMatchOptions\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with an external link and function -->\r\n    <ng-container *ngIf=\"item.link && item.externalLink && item.function && !item.disabled\">\r\n        <a\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [href]=\"item.link\"\r\n            [target]=\"item.target || '_self'\"\r\n            [matTooltip]=\"item.tooltip || ''\"\r\n            (click)=\"item.function(item)\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </a>\r\n    </ng-container>\r\n\r\n    <!-- Item with a no link and no function -->\r\n    <ng-container *ngIf=\"!item.link && !item.function && !item.disabled\">\r\n        <div\r\n            class=\"fuse-vertical-navigation-item\"\r\n            [ngClass]=\"{'fuse-vertical-navigation-item-active-forced': item.active}\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!-- Item is disabled -->\r\n    <ng-container *ngIf=\"item.disabled\">\r\n        <div\r\n            class=\"fuse-vertical-navigation-item fuse-vertical-navigation-item-disabled\"\r\n            [matTooltip]=\"item.tooltip || ''\">\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate\"></ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n</div>\r\n\r\n<!-- Item template -->\r\n<ng-template #itemTemplate>\r\n\r\n    <!-- Icon -->\r\n    <ng-container *ngIf=\"item.icon\">\r\n        <mat-icon\r\n            class=\"fuse-vertical-navigation-item-icon\"\r\n            [ngClass]=\"item.classes?.icon\"\r\n            [svgIcon]=\"item.icon\"></mat-icon>\r\n    </ng-container>\r\n\r\n    <!-- Title & Subtitle -->\r\n    <div class=\"fuse-vertical-navigation-item-title-wrapper\">\r\n        <div class=\"fuse-vertical-navigation-item-title\">\r\n            <span [ngClass]=\"item.classes?.title\">\r\n                {{item.title}}\r\n            </span>\r\n        </div>\r\n        <ng-container *ngIf=\"item.subtitle\">\r\n            <div class=\"fuse-vertical-navigation-item-subtitle\">\r\n                <span [ngClass]=\"item.classes?.subtitle\">\r\n                    {{item.subtitle}}\r\n                </span>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <!-- Badge -->\r\n    <ng-container *ngIf=\"item.badge\">\r\n        <div class=\"fuse-vertical-navigation-item-badge\">\r\n            <div\r\n                class=\"fuse-vertical-navigation-item-badge-content\"\r\n                [ngClass]=\"item.badge.classes\">\r\n                {{item.badge.title}}\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { IsActiveMatchOptions } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-basic-item',\r\n    templateUrl    : './basic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationBasicItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    isActiveMatchOptions: IsActiveMatchOptions;\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n        // Set the equivalent of {exact: false} as default for active match options.\r\n        // We are not assigning the item.isActiveMatchOptions directly to the\r\n        // [routerLinkActiveOptions] because if it's \"undefined\" initially, the router\r\n        // will throw an error and stop working.\r\n        this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the \"isActiveMatchOptions\" either from item's\r\n        // \"isActiveMatchOptions\" or the equivalent form of\r\n        // item's \"exactMatch\" option\r\n        this.isActiveMatchOptions =\r\n            this.item.isActiveMatchOptions ?? this.item.exactMatch\r\n                ? this._fuseUtilsService.exactMatchOptions\r\n                : this._fuseUtilsService.subsetMatchOptions;\r\n\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-divider-item',\r\n    templateUrl    : './divider.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationDividerItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- Divider -->\r\n<div\r\n    class=\"fuse-vertical-navigation-item-wrapper divider\"\r\n    [ngClass]=\"item.classes?.wrapper\"></div>\r\n","<!-- Item wrapper -->\r\n<div\r\n    class=\"fuse-vertical-navigation-item-wrapper\"\r\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n    [ngClass]=\"item.classes?.wrapper\">\r\n\r\n    <div class=\"fuse-vertical-navigation-item\">\r\n\r\n        <!-- Icon -->\r\n        <ng-container *ngIf=\"item.icon\">\r\n            <mat-icon\r\n                class=\"fuse-vertical-navigation-item-icon\"\r\n                [ngClass]=\"item.classes?.icon\"\r\n                [svgIcon]=\"item.icon\"></mat-icon>\r\n        </ng-container>\r\n\r\n        <!-- Title & Subtitle -->\r\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\r\n            <div class=\"fuse-vertical-navigation-item-title\">\r\n                <span [ngClass]=\"item.classes?.title\">\r\n                    {{item.title}}\r\n                </span>\r\n            </div>\r\n            <ng-container *ngIf=\"item.subtitle\">\r\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\r\n                    <span [ngClass]=\"item.classes?.subtitle\">\r\n                        {{item.subtitle}}\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <!-- Badge -->\r\n        <ng-container *ngIf=\"item.badge\">\r\n            <div class=\"fuse-vertical-navigation-item-badge\">\r\n                <div\r\n                    class=\"fuse-vertical-navigation-item-badge-content\"\r\n                    [ngClass]=\"item.badge.classes\">\r\n                    {{item.badge.title}}\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\r\n\r\n    <!-- Skip the hidden items -->\r\n    <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n        <!-- Basic -->\r\n        <ng-container *ngIf=\"item.type === 'basic'\">\r\n            <fuse-vertical-navigation-basic-item\r\n                [item]=\"item\"\r\n                [name]=\"name\"></fuse-vertical-navigation-basic-item>\r\n        </ng-container>\r\n\r\n        <!-- Collapsable -->\r\n        <ng-container *ngIf=\"item.type === 'collapsable'\">\r\n            <fuse-vertical-navigation-collapsable-item\r\n                [item]=\"item\"\r\n                [name]=\"name\"\r\n                [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\r\n        </ng-container>\r\n\r\n        <!-- Divider -->\r\n        <ng-container *ngIf=\"item.type === 'divider'\">\r\n            <fuse-vertical-navigation-divider-item\r\n                [item]=\"item\"\r\n                [name]=\"name\"></fuse-vertical-navigation-divider-item>\r\n        </ng-container>\r\n\r\n        <!-- Group -->\r\n        <ng-container *ngIf=\"item.type === 'group'\">\r\n            <fuse-vertical-navigation-group-item\r\n                [item]=\"item\"\r\n                [name]=\"name\"></fuse-vertical-navigation-group-item>\r\n        </ng-container>\r\n\r\n        <!-- Spacer -->\r\n        <ng-container *ngIf=\"item.type === 'spacer'\">\r\n            <fuse-vertical-navigation-spacer-item\r\n                [item]=\"item\"\r\n                [name]=\"name\"></fuse-vertical-navigation-spacer-item>\r\n        </ng-container>\r\n\r\n    </ng-container>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-group-item',\r\n    templateUrl    : './group.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationGroupItemComponent implements OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_autoCollapse: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() autoCollapse: boolean;\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-spacer-item',\r\n    templateUrl    : './spacer.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationSpacerItemComponent implements OnInit, OnDestroy\r\n{\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- Spacer -->\r\n<div\r\n    class=\"fuse-vertical-navigation-item-wrapper\"\r\n    [ngClass]=\"item.classes?.wrapper\"></div>\r\n","<div\r\n    class=\"fuse-vertical-navigation-item-wrapper\"\r\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n    [ngClass]=\"item.classes?.wrapper\">\r\n\r\n    <div\r\n        class=\"fuse-vertical-navigation-item\"\r\n        [ngClass]=\"{'fuse-vertical-navigation-item-disabled': item.disabled}\"\r\n        [matTooltip]=\"item.tooltip || ''\"\r\n        (click)=\"toggleCollapsable()\">\r\n\r\n        <!-- Icon -->\r\n        <ng-container *ngIf=\"item.icon\">\r\n            <mat-icon\r\n                class=\"fuse-vertical-navigation-item-icon\"\r\n                [ngClass]=\"item.classes?.icon\"\r\n                [svgIcon]=\"item.icon\"></mat-icon>\r\n        </ng-container>\r\n\r\n        <!-- Title & Subtitle -->\r\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\r\n            <div class=\"fuse-vertical-navigation-item-title\">\r\n                <span [ngClass]=\"item.classes?.title\">\r\n                    {{item.title}}\r\n                </span>\r\n            </div>\r\n            <ng-container *ngIf=\"item.subtitle\">\r\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\r\n                    <span [ngClass]=\"item.classes?.subtitle\">\r\n                        {{item.subtitle}}\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <!-- Badge -->\r\n        <ng-container *ngIf=\"item.badge\">\r\n            <div class=\"fuse-vertical-navigation-item-badge\">\r\n                <div\r\n                    class=\"fuse-vertical-navigation-item-badge-content\"\r\n                    [ngClass]=\"item.badge.classes\">\r\n                    {{item.badge.title}}\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- Arrow -->\r\n        <mat-icon\r\n            class=\"fuse-vertical-navigation-item-arrow icon-size-4\"\r\n            [svgIcon]=\"'heroicons_solid:chevron-right'\"></mat-icon>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div\r\n    class=\"fuse-vertical-navigation-item-children\"\r\n    *ngIf=\"!isCollapsed\"\r\n    @expandCollapse>\r\n\r\n    <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\r\n\r\n        <!-- Skip the hidden items -->\r\n        <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n            <!-- Basic -->\r\n            <ng-container *ngIf=\"item.type === 'basic'\">\r\n                <fuse-vertical-navigation-basic-item\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-vertical-navigation-basic-item>\r\n            </ng-container>\r\n\r\n            <!-- Collapsable -->\r\n            <ng-container *ngIf=\"item.type === 'collapsable'\">\r\n                <fuse-vertical-navigation-collapsable-item\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"\r\n                    [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\r\n            </ng-container>\r\n\r\n            <!-- Divider -->\r\n            <ng-container *ngIf=\"item.type === 'divider'\">\r\n                <fuse-vertical-navigation-divider-item\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-vertical-navigation-divider-item>\r\n            </ng-container>\r\n\r\n            <!-- Group -->\r\n            <ng-container *ngIf=\"item.type === 'group'\">\r\n                <fuse-vertical-navigation-group-item\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-vertical-navigation-group-item>\r\n            </ng-container>\r\n\r\n            <!-- Spacer -->\r\n            <ng-container *ngIf=\"item.type === 'spacer'\">\r\n                <fuse-vertical-navigation-spacer-item\r\n                    [item]=\"item\"\r\n                    [name]=\"name\"></fuse-vertical-navigation-spacer-item>\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n    </ng-container>\r\n\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { filter, Subject, takeUntil } from 'rxjs';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-collapsable-item',\r\n    templateUrl    : './collapsable.component.html',\r\n    animations     : fuseAnimations,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationCollapsableItemComponent implements OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_autoCollapse: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() autoCollapse: boolean;\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n\r\n    isCollapsed: boolean = true;\r\n    isExpanded: boolean = false;\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _router: Router,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Host binding for component classes\r\n     */\r\n    @HostBinding('class') get classList(): any\r\n    {\r\n        /* eslint-disable @typescript-eslint/naming-convention */\r\n        return {\r\n            'fuse-vertical-navigation-item-collapsed': this.isCollapsed,\r\n            'fuse-vertical-navigation-item-expanded' : this.isExpanded\r\n        };\r\n        /* eslint-enable @typescript-eslint/naming-convention */\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // If the item has a children that has a matching url with the current url, expand...\r\n        if ( this._hasActiveChild(this.item, this._router.url) )\r\n        {\r\n            this.expand();\r\n        }\r\n        // Otherwise...\r\n        else\r\n        {\r\n            // If the autoCollapse is on, collapse...\r\n            if ( this.autoCollapse )\r\n            {\r\n                this.collapse();\r\n            }\r\n        }\r\n\r\n        // Listen for the onCollapsableItemCollapsed from the service\r\n        this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((collapsedItem) => {\r\n\r\n                // Check if the collapsed item is null\r\n                if ( collapsedItem === null )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                // Collapse if this is a children of the collapsed item\r\n                if ( this._isChildrenOf(collapsedItem, this.item) )\r\n                {\r\n                    this.collapse();\r\n                }\r\n            });\r\n\r\n        // Listen for the onCollapsableItemExpanded from the service if the autoCollapse is on\r\n        if ( this.autoCollapse )\r\n        {\r\n            this._fuseVerticalNavigationComponent.onCollapsableItemExpanded\r\n                .pipe(takeUntil(this._unsubscribeAll))\r\n                .subscribe((expandedItem) => {\r\n\r\n                    // Check if the expanded item is null\r\n                    if ( expandedItem === null )\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    // Check if this is a parent of the expanded item\r\n                    if ( this._isChildrenOf(this.item, expandedItem) )\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    // Check if this has a children with a matching url with the current active url\r\n                    if ( this._hasActiveChild(this.item, this._router.url) )\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    // Check if this is the expanded item\r\n                    if ( this.item === expandedItem )\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    // If none of the above conditions are matched, collapse this item\r\n                    this.collapse();\r\n                });\r\n        }\r\n\r\n        // Attach a listener to the NavigationEnd event\r\n        this._router.events\r\n            .pipe(\r\n                filter((event): event is NavigationEnd => event instanceof NavigationEnd),\r\n                takeUntil(this._unsubscribeAll)\r\n            )\r\n            .subscribe((event: NavigationEnd) => {\r\n\r\n                // If the item has a children that has a matching url with the current url, expand...\r\n                if ( this._hasActiveChild(this.item, event.urlAfterRedirects) )\r\n                {\r\n                    this.expand();\r\n                }\r\n                // Otherwise...\r\n                else\r\n                {\r\n                    // If the autoCollapse is on, collapse...\r\n                    if ( this.autoCollapse )\r\n                    {\r\n                        this.collapse();\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Collapse\r\n     */\r\n    collapse(): void\r\n    {\r\n        // Return if the item is disabled\r\n        if ( this.item.disabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Return if the item is already collapsed\r\n        if ( this.isCollapsed )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Collapse it\r\n        this.isCollapsed = true;\r\n        this.isExpanded = !this.isCollapsed;\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Execute the observable\r\n        this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.next(this.item);\r\n    }\r\n\r\n    /**\r\n     * Expand\r\n     */\r\n    expand(): void\r\n    {\r\n        // Return if the item is disabled\r\n        if ( this.item.disabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Return if the item is already expanded\r\n        if ( !this.isCollapsed )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Expand it\r\n        this.isCollapsed = false;\r\n        this.isExpanded = !this.isCollapsed;\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n\r\n        // Execute the observable\r\n        this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.next(this.item);\r\n    }\r\n\r\n    /**\r\n     * Toggle collapsable\r\n     */\r\n    toggleCollapsable(): void\r\n    {\r\n        // Toggle collapse/expand\r\n        if ( this.isCollapsed )\r\n        {\r\n            this.expand();\r\n        }\r\n        else\r\n        {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Check if the given item has the given url\r\n     * in one of its children\r\n     *\r\n     * @param item\r\n     * @param currentUrl\r\n     * @private\r\n     */\r\n    private _hasActiveChild(item: FuseNavigationItem, currentUrl: string): boolean\r\n    {\r\n        const children = item.children;\r\n\r\n        if ( !children )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        for ( const child of children )\r\n        {\r\n            if ( child.children )\r\n            {\r\n                if ( this._hasActiveChild(child, currentUrl) )\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Check if the child has a link and is active\r\n            if ( child.link && this._router.isActive(child.link, child.exactMatch || false) )\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if this is a children\r\n     * of the given item\r\n     *\r\n     * @param parent\r\n     * @param item\r\n     * @private\r\n     */\r\n    private _isChildrenOf(parent: FuseNavigationItem, item: FuseNavigationItem): boolean\r\n    {\r\n        const children = parent.children;\r\n\r\n        if ( !children )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if ( children.indexOf(item) > -1 )\r\n        {\r\n            return true;\r\n        }\r\n\r\n        for ( const child of children )\r\n        {\r\n            if ( child.children )\r\n            {\r\n                if ( this._isChildrenOf(child, item) )\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","<div\r\n    class=\"fuse-vertical-navigation-item-wrapper\"\r\n    [class.fuse-vertical-navigation-item-has-subtitle]=\"!!item.subtitle\"\r\n    [ngClass]=\"item.classes?.wrapper\">\r\n\r\n    <div\r\n        class=\"fuse-vertical-navigation-item\"\r\n        [ngClass]=\"{'fuse-vertical-navigation-item-active': active,\r\n                    'fuse-vertical-navigation-item-disabled': item.disabled,\r\n                    'fuse-vertical-navigation-item-active-forced': item.active}\"\r\n        [matTooltip]=\"item.tooltip || ''\">\r\n\r\n        <!-- Icon -->\r\n        <ng-container *ngIf=\"item.icon\">\r\n            <mat-icon\r\n                class=\"fuse-vertical-navigation-item-icon\"\r\n                [ngClass]=\"item.classes?.icon\"\r\n                [svgIcon]=\"item.icon\"></mat-icon>\r\n        </ng-container>\r\n\r\n        <!-- Title & Subtitle -->\r\n        <div class=\"fuse-vertical-navigation-item-title-wrapper\">\r\n            <div class=\"fuse-vertical-navigation-item-title\">\r\n                <span [ngClass]=\"item.classes?.title\">\r\n                    {{item.title}}\r\n                </span>\r\n            </div>\r\n            <ng-container *ngIf=\"item.subtitle\">\r\n                <div class=\"fuse-vertical-navigation-item-subtitle\">\r\n                    <span [ngClass]=\"item.classes?.subtitle\">\r\n                        {{item.subtitle}}\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <!-- Badge -->\r\n        <ng-container *ngIf=\"item.badge\">\r\n            <div class=\"fuse-vertical-navigation-item-badge\">\r\n                <div\r\n                    class=\"fuse-vertical-navigation-item-badge-content\"\r\n                    [ngClass]=\"item.badge.classes\">\r\n                    {{item.badge.title}}\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-container *ngIf=\"!skipChildren\">\r\n\r\n    <div class=\"fuse-vertical-navigation-item-children\">\r\n\r\n        <ng-container *ngFor=\"let item of item.children; trackBy: trackByFn\">\r\n\r\n            <!-- Skip the hidden items -->\r\n            <ng-container *ngIf=\"(item.hidden && !item.hidden(item)) || !item.hidden\">\r\n\r\n                <!-- Basic -->\r\n                <ng-container *ngIf=\"item.type === 'basic'\">\r\n                    <fuse-vertical-navigation-basic-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-basic-item>\r\n                </ng-container>\r\n\r\n                <!-- Collapsable -->\r\n                <ng-container *ngIf=\"item.type === 'collapsable'\">\r\n                    <fuse-vertical-navigation-collapsable-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"\r\n                        [autoCollapse]=\"autoCollapse\"></fuse-vertical-navigation-collapsable-item>\r\n                </ng-container>\r\n\r\n                <!-- Divider -->\r\n                <ng-container *ngIf=\"item.type === 'divider'\">\r\n                    <fuse-vertical-navigation-divider-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-divider-item>\r\n                </ng-container>\r\n\r\n                <!-- Group -->\r\n                <ng-container *ngIf=\"item.type === 'group'\">\r\n                    <fuse-vertical-navigation-group-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-group-item>\r\n                </ng-container>\r\n\r\n                <!-- Spacer -->\r\n                <ng-container *ngIf=\"item.type === 'spacer'\">\r\n                    <fuse-vertical-navigation-spacer-item\r\n                        [item]=\"item\"\r\n                        [name]=\"name\"></fuse-vertical-navigation-spacer-item>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n\r\n    </div>\r\n\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { filter, Subject, takeUntil } from 'rxjs';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation/navigation.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-vertical-navigation-aside-item',\r\n    templateUrl    : './aside.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseVerticalNavigationAsideItemComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_autoCollapse: BooleanInput;\r\n    static ngAcceptInputType_skipChildren: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() activeItemId: string;\r\n    @Input() autoCollapse: boolean;\r\n    @Input() item: FuseNavigationItem;\r\n    @Input() name: string;\r\n    @Input() skipChildren: boolean;\r\n\r\n    active: boolean = false;\r\n    private _fuseVerticalNavigationComponent: FuseVerticalNavigationComponent;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _router: Router,\r\n        private _fuseNavigationService: FuseNavigationService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Active item id\r\n        if ( 'activeItemId' in changes )\r\n        {\r\n            // Mark if active\r\n            this._markIfActive(this._router.url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Mark if active\r\n        this._markIfActive(this._router.url);\r\n\r\n        // Attach a listener to the NavigationEnd event\r\n        this._router.events\r\n            .pipe(\r\n                filter((event): event is NavigationEnd => event instanceof NavigationEnd),\r\n                takeUntil(this._unsubscribeAll)\r\n            )\r\n            .subscribe((event: NavigationEnd) => {\r\n\r\n                // Mark if active\r\n                this._markIfActive(event.urlAfterRedirects);\r\n            });\r\n\r\n        // Get the parent navigation component\r\n        this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);\r\n\r\n        // Subscribe to onRefreshed on the navigation component\r\n        this._fuseVerticalNavigationComponent.onRefreshed.pipe(\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Check if the given item has the given url\r\n     * in one of its children\r\n     *\r\n     * @param item\r\n     * @param currentUrl\r\n     * @private\r\n     */\r\n    private _hasActiveChild(item: FuseNavigationItem, currentUrl: string): boolean\r\n    {\r\n        const children = item.children;\r\n\r\n        if ( !children )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        for ( const child of children )\r\n        {\r\n            if ( child.children )\r\n            {\r\n                if ( this._hasActiveChild(child, currentUrl) )\r\n                {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Skip items other than 'basic'\r\n            if ( child.type !== 'basic' )\r\n            {\r\n                continue;\r\n            }\r\n\r\n            // Check if the child has a link and is active\r\n            if ( child.link && this._router.isActive(child.link, child.exactMatch || false) )\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Decide and mark if the item is active\r\n     *\r\n     * @private\r\n     */\r\n    private _markIfActive(currentUrl: string): void\r\n    {\r\n        // Check if the activeItemId is equals to this item id\r\n        this.active = this.activeItemId === this.item.id;\r\n\r\n        // If the aside has a children that is active,\r\n        // always mark it as active\r\n        if ( this._hasActiveChild(this.item, currentUrl) )\r\n        {\r\n            this.active = true;\r\n        }\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FuseScrollbarModule } from '@fuse/directives/scrollbar/public-api';\r\nimport { FuseHorizontalNavigationBasicItemComponent } from '@fuse/components/navigation/horizontal/components/basic/basic.component';\r\nimport { FuseHorizontalNavigationBranchItemComponent } from '@fuse/components/navigation/horizontal/components/branch/branch.component';\r\nimport { FuseHorizontalNavigationDividerItemComponent } from '@fuse/components/navigation/horizontal/components/divider/divider.component';\r\nimport { FuseHorizontalNavigationSpacerItemComponent } from '@fuse/components/navigation/horizontal/components/spacer/spacer.component';\r\nimport { FuseHorizontalNavigationComponent } from '@fuse/components/navigation/horizontal/horizontal.component';\r\nimport { FuseVerticalNavigationAsideItemComponent } from '@fuse/components/navigation/vertical/components/aside/aside.component';\r\nimport { FuseVerticalNavigationBasicItemComponent } from '@fuse/components/navigation/vertical/components/basic/basic.component';\r\nimport { FuseVerticalNavigationCollapsableItemComponent } from '@fuse/components/navigation/vertical/components/collapsable/collapsable.component';\r\nimport { FuseVerticalNavigationDividerItemComponent } from '@fuse/components/navigation/vertical/components/divider/divider.component';\r\nimport { FuseVerticalNavigationGroupItemComponent } from '@fuse/components/navigation/vertical/components/group/group.component';\r\nimport { FuseVerticalNavigationSpacerItemComponent } from '@fuse/components/navigation/vertical/components/spacer/spacer.component';\r\nimport { FuseVerticalNavigationComponent } from '@fuse/components/navigation/vertical/vertical.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseHorizontalNavigationBasicItemComponent,\r\n        FuseHorizontalNavigationBranchItemComponent,\r\n        FuseHorizontalNavigationDividerItemComponent,\r\n        FuseHorizontalNavigationSpacerItemComponent,\r\n        FuseHorizontalNavigationComponent,\r\n        FuseVerticalNavigationAsideItemComponent,\r\n        FuseVerticalNavigationBasicItemComponent,\r\n        FuseVerticalNavigationCollapsableItemComponent,\r\n        FuseVerticalNavigationDividerItemComponent,\r\n        FuseVerticalNavigationGroupItemComponent,\r\n        FuseVerticalNavigationSpacerItemComponent,\r\n        FuseVerticalNavigationComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule,\r\n        RouterModule,\r\n        MatButtonModule,\r\n        MatDividerModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatTooltipModule,\r\n        FuseScrollbarModule\r\n    ],\r\n    exports     : [\r\n        FuseHorizontalNavigationComponent,\r\n        FuseVerticalNavigationComponent\r\n    ]\r\n})\r\nexport class FuseNavigationModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NotificationsComponent } from 'app/layout/common/notifications/notifications.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [NotificationsComponent],\r\n  imports: [\r\n    RouterModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [NotificationsComponent],\r\n})\r\nexport class NotificationsModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BlockScrollStrategy, Overlay } from '@angular/cdk/overlay';\r\nimport {\r\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\r\n  MatAutocompleteModule,\r\n} from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { SearchComponent } from 'app/layout/common/search/search.component';\r\n\r\n@NgModule({\r\n  declarations: [SearchComponent],\r\n  imports: [\r\n    RouterModule.forChild([]),\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [SearchComponent],\r\n  providers: [\r\n    {\r\n      provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\r\n      useFactory: (overlay: Overlay) => (): BlockScrollStrategy =>\r\n        overlay.scrollStrategies.block(),\r\n      deps: [Overlay],\r\n    },\r\n  ],\r\n})\r\nexport class SearchModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ShortcutsComponent } from 'app/layout/common/shortcuts/shortcuts.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShortcutsComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        OverlayModule,\r\n        PortalModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatSlideToggleModule,\r\n        MatTooltipModule\r\n    ],\r\n    exports     : [\r\n        ShortcutsComponent\r\n    ]\r\n})\r\nexport class ShortcutsModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { UserComponent } from 'app/layout/common/user/user.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { FirstLastNames } from './user.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    FirstLastNames,\r\n  ],\r\n  imports: [\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [UserComponent],\r\n})\r\nexport class UserModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { FuseNavigationModule } from '@fuse/components/navigation';\r\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\r\nimport { SearchModule } from 'app/layout/common/search/search.module';\r\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\r\nimport { UserModule } from 'app/layout/common/user/user.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { EnterpriseLayoutComponent } from 'app/layout/layouts/horizontal/enterprise/enterprise.component';\r\n\r\n@NgModule({\r\n  declarations: [EnterpriseLayoutComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    FuseFullscreenModule,\r\n    FuseLoadingBarModule,\r\n    FuseNavigationModule,\r\n    NotificationsModule,\r\n    SearchModule,\r\n    ShortcutsModule,\r\n    UserModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [EnterpriseLayoutComponent],\r\n})\r\nexport class EnterpriseLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { FuseNavigationModule } from '@fuse/components/navigation';\r\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\r\nimport { SearchModule } from 'app/layout/common/search/search.module';\r\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\r\nimport { UserModule } from 'app/layout/common/user/user.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ModernLayoutComponent } from 'app/layout/layouts/horizontal/modern/modern.component';\r\n\r\n@NgModule({\r\n  declarations: [ModernLayoutComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    FuseFullscreenModule,\r\n    FuseLoadingBarModule,\r\n    FuseNavigationModule,\r\n    NotificationsModule,\r\n    SearchModule,\r\n    ShortcutsModule,\r\n    UserModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [ModernLayoutComponent],\r\n})\r\nexport class ModernLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { FuseNavigationModule } from '@fuse/components/navigation';\r\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\r\nimport { SearchModule } from 'app/layout/common/search/search.module';\r\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\r\nimport { UserModule } from 'app/layout/common/user/user.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ClassicLayoutComponent } from 'app/layout/layouts/vertical/classic/classic.component';\r\n\r\n@NgModule({\r\n  declarations: [ClassicLayoutComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    FuseFullscreenModule,\r\n    FuseLoadingBarModule,\r\n    FuseNavigationModule,\r\n    NotificationsModule,\r\n    SearchModule,\r\n    ShortcutsModule,\r\n    UserModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [ClassicLayoutComponent],\r\n})\r\nexport class ClassicLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { FuseNavigationModule } from '@fuse/components/navigation';\r\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\r\nimport { SearchModule } from 'app/layout/common/search/search.module';\r\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\r\nimport { UserModule } from 'app/layout/common/user/user.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CompactLayoutComponent } from 'app/layout/layouts/vertical/compact/compact.component';\r\n\r\n@NgModule({\r\n  declarations: [CompactLayoutComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    FuseFullscreenModule,\r\n    FuseLoadingBarModule,\r\n    FuseNavigationModule,\r\n    NotificationsModule,\r\n    SearchModule,\r\n    ShortcutsModule,\r\n    UserModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [CompactLayoutComponent],\r\n})\r\nexport class CompactLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FuseFullscreenModule } from '@fuse/components/fullscreen';\r\nimport { FuseLoadingBarModule } from '@fuse/components/loading-bar';\r\nimport { FuseNavigationModule } from '@fuse/components/navigation';\r\nimport { NotificationsModule } from 'app/layout/common/notifications/notifications.module';\r\nimport { SearchModule } from 'app/layout/common/search/search.module';\r\nimport { ShortcutsModule } from 'app/layout/common/shortcuts/shortcuts.module';\r\nimport { UserModule } from 'app/layout/common/user/user.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { DenseLayoutComponent } from 'app/layout/layouts/vertical/dense/dense.component';\r\n\r\n@NgModule({\r\n  declarations: [DenseLayoutComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    FuseFullscreenModule,\r\n    FuseLoadingBarModule,\r\n    FuseNavigationModule,\r\n    NotificationsModule,\r\n    SearchModule,\r\n    ShortcutsModule,\r\n    UserModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [DenseLayoutComponent],\r\n})\r\nexport class DenseLayoutModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FuseDrawerComponent } from '@fuse/components/drawer/drawer.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FuseDrawerComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule\r\n    ],\r\n    exports     : [\r\n        FuseDrawerComponent\r\n    ]\r\n})\r\nexport class FuseDrawerModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FuseDrawerModule } from '@fuse/components/drawer';\r\nimport { SettingsComponent } from 'app/layout/common/settings/settings.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SettingsComponent\r\n    ],\r\n    imports     : [\r\n        CommonModule,\r\n        RouterModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        FuseDrawerModule,\r\n        MatButtonModule\r\n    ],\r\n    exports     : [\r\n        SettingsComponent\r\n    ]\r\n})\r\nexport class SettingsModule\r\n{\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LayoutComponent } from 'app/layout/layout.component';\r\nimport { EmptyLayoutModule } from 'app/layout/layouts/empty/empty.module';\r\nimport { EnterpriseLayoutModule } from 'app/layout/layouts/horizontal/enterprise/enterprise.module';\r\nimport { ModernLayoutModule } from 'app/layout/layouts/horizontal/modern/modern.module';\r\nimport { ClassicLayoutModule } from 'app/layout/layouts/vertical/classic/classic.module';\r\nimport { CompactLayoutModule } from 'app/layout/layouts/vertical/compact/compact.module';\r\nimport { DenseLayoutModule } from 'app/layout/layouts/vertical/dense/dense.module';\r\nimport { SettingsModule } from 'app/layout/common/settings/settings.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nconst layoutModules = [\r\n  // Empty\r\n  EmptyLayoutModule,\r\n\r\n  // Horizontal navigation\r\n  EnterpriseLayoutModule,\r\n  ModernLayoutModule,\r\n\r\n  // Vertical navigation\r\n  ClassicLayoutModule,\r\n  CompactLayoutModule,\r\n  DenseLayoutModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LayoutComponent],\r\n  imports: [SharedModule, SettingsModule, ...layoutModules],\r\n  exports: [LayoutComponent, ...layoutModules],\r\n})\r\nexport class LayoutModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector   : 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls  : ['./app.component.scss']\r\n})\r\nexport class AppComponent\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlSegment,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n\r\n  constructor(private _authService: AuthService, private _router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    const redirectUrl = state.url === '/sign-out' ? '/' : state.url;\r\n    return this._check(redirectUrl);\r\n  }\r\n\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const redirectUrl = state.url === '/sign-out' ? '/' : state.url;\r\n    return this._check(redirectUrl);\r\n  }\r\n\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this._check('/');\r\n  }\r\n\r\n  private _check(redirectURL: string): Observable<boolean> {\r\n    // Check the authentication status\r\n    return this._authService.check().pipe(\r\n      switchMap((authenticated) => {\r\n        // If the user is not authenticated...\r\n        if (!authenticated) {\r\n          // Redirect to the sign-in page\r\n          this._router.navigate(['sign-in']); //, { queryParams: { redirectURL } }\r\n\r\n          // Prevent the access\r\n          return of(false);\r\n        }\r\n\r\n        // Allow the access\r\n        return of(true);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlSegment,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable, of, switchMap } from 'rxjs';\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NoAuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(private _authService: AuthService, private _router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this._check();\r\n  }\r\n\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return this._check();\r\n  }\r\n\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this._check();\r\n  }\r\n\r\n  private _check(): Observable<boolean> {\r\n    // Check the authentication status\r\n    return this._authService.check().pipe(\r\n      switchMap((authenticated) => {\r\n        // If the user is authenticated...\r\n        if (authenticated) {\r\n          // Redirect to the root\r\n          this._router.navigate(['']);\r\n\r\n          // Prevent the access\r\n          return of(false);\r\n        }\r\n\r\n        // Allow the access\r\n        return of(true);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Version } from '@fuse/version/version';\r\n\r\nexport const FUSE_VERSION = new Version('15.1.0').full;\r\n","/**\r\n * Derived from Angular's version class\r\n */\r\nexport class Version\r\n{\r\n    public readonly full: string;\r\n    public readonly major: string;\r\n    public readonly minor: string;\r\n    public readonly patch: string;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(public version: string)\r\n    {\r\n        this.full = version;\r\n        this.major = version.split('.')[0];\r\n        this.minor = version.split('.')[1];\r\n        this.patch = version.split('.').slice(2).join('.');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FuseDrawerComponent } from '@fuse/components/drawer/drawer.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseDrawerService\r\n{\r\n    private _componentRegistry: Map<string, FuseDrawerComponent> = new Map<string, FuseDrawerComponent>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Register drawer component\r\n     *\r\n     * @param name\r\n     * @param component\r\n     */\r\n    registerComponent(name: string, component: FuseDrawerComponent): void\r\n    {\r\n        this._componentRegistry.set(name, component);\r\n    }\r\n\r\n    /**\r\n     * Deregister drawer component\r\n     *\r\n     * @param name\r\n     */\r\n    deregisterComponent(name: string): void\r\n    {\r\n        this._componentRegistry.delete(name);\r\n    }\r\n\r\n    /**\r\n     * Get drawer component from the registry\r\n     *\r\n     * @param name\r\n     */\r\n    getComponent(name: string): FuseDrawerComponent | undefined\r\n    {\r\n        return this._componentRegistry.get(name);\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\r\nimport { FuseDrawerMode, FuseDrawerPosition } from '@fuse/components/drawer/drawer.types';\r\nimport { FuseDrawerService } from '@fuse/components/drawer/drawer.service';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector     : 'fuse-drawer',\r\n    templateUrl  : './drawer.component.html',\r\n    styleUrls    : ['./drawer.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs     : 'fuseDrawer'\r\n})\r\nexport class FuseDrawerComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_fixed: BooleanInput;\r\n    static ngAcceptInputType_opened: BooleanInput;\r\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() fixed: boolean = false;\r\n    @Input() mode: FuseDrawerMode = 'side';\r\n    @Input() name: string = this._fuseUtilsService.randomId();\r\n    @Input() opened: boolean = false;\r\n    @Input() position: FuseDrawerPosition = 'left';\r\n    @Input() transparentOverlay: boolean = false;\r\n    @Output() readonly fixedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() readonly modeChanged: EventEmitter<FuseDrawerMode> = new EventEmitter<FuseDrawerMode>();\r\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() readonly positionChanged: EventEmitter<FuseDrawerPosition> = new EventEmitter<FuseDrawerPosition>();\r\n\r\n    private _animationsEnabled: boolean = false;\r\n    private readonly _handleOverlayClick: any;\r\n    private _hovered: boolean = false;\r\n    private _overlay: HTMLElement;\r\n    private _player: AnimationPlayer;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _animationBuilder: AnimationBuilder,\r\n        private _elementRef: ElementRef,\r\n        private _renderer2: Renderer2,\r\n        private _fuseDrawerService: FuseDrawerService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n        this._handleOverlayClick = (): void => {\r\n            this.close();\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Host binding for component classes\r\n     */\r\n    @HostBinding('class') get classList(): any\r\n    {\r\n        /* eslint-disable @typescript-eslint/naming-convention */\r\n        return {\r\n            'fuse-drawer-animations-enabled'         : this._animationsEnabled,\r\n            'fuse-drawer-fixed'                      : this.fixed,\r\n            'fuse-drawer-hover'                      : this._hovered,\r\n            [`fuse-drawer-mode-${this.mode}`]        : true,\r\n            'fuse-drawer-opened'                     : this.opened,\r\n            [`fuse-drawer-position-${this.position}`]: true\r\n        };\r\n        /* eslint-enable @typescript-eslint/naming-convention */\r\n    }\r\n\r\n    /**\r\n     * Host binding for component inline styles\r\n     */\r\n    @HostBinding('style') get styleList(): any\r\n    {\r\n        return {\r\n            'visibility': this.opened ? 'visible' : 'hidden'\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Decorated methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On mouseenter\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseenter')\r\n    private _onMouseenter(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = true;\r\n    }\r\n\r\n    /**\r\n     * On mouseleave\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseleave')\r\n    private _onMouseleave(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = false;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Fixed\r\n        if ( 'fixed' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\r\n\r\n            // Execute the observable\r\n            this.fixedChanged.next(this.fixed);\r\n        }\r\n\r\n        // Mode\r\n        if ( 'mode' in changes )\r\n        {\r\n            // Get the previous and current values\r\n            const previousMode = changes.mode.previousValue;\r\n            const currentMode = changes.mode.currentValue;\r\n\r\n            // Disable the animations\r\n            this._disableAnimations();\r\n\r\n            // If the mode changes: 'over -> side'\r\n            if ( previousMode === 'over' && currentMode === 'side' )\r\n            {\r\n                // Hide the overlay\r\n                this._hideOverlay();\r\n            }\r\n\r\n            // If the mode changes: 'side -> over'\r\n            if ( previousMode === 'side' && currentMode === 'over' )\r\n            {\r\n                // If the drawer is opened\r\n                if ( this.opened )\r\n                {\r\n                    // Show the overlay\r\n                    this._showOverlay();\r\n                }\r\n            }\r\n\r\n            // Execute the observable\r\n            this.modeChanged.next(currentMode);\r\n\r\n            // Enable the animations after a delay\r\n            // The delay must be bigger than the current transition-duration\r\n            // to make sure nothing will be animated while the mode is changing\r\n            setTimeout(() => {\r\n                this._enableAnimations();\r\n            }, 500);\r\n        }\r\n\r\n        // Opened\r\n        if ( 'opened' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            const open = coerceBooleanProperty(changes.opened.currentValue);\r\n\r\n            // Open/close the drawer\r\n            this._toggleOpened(open);\r\n        }\r\n\r\n        // Position\r\n        if ( 'position' in changes )\r\n        {\r\n            // Execute the observable\r\n            this.positionChanged.next(this.position);\r\n        }\r\n\r\n        // Transparent overlay\r\n        if ( 'transparentOverlay' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Register the drawer\r\n        this._fuseDrawerService.registerComponent(this.name, this);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Finish the animation\r\n        if ( this._player )\r\n        {\r\n            this._player.finish();\r\n        }\r\n\r\n        // Deregister the drawer from the registry\r\n        this._fuseDrawerService.deregisterComponent(this.name);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the drawer\r\n     */\r\n    open(): void\r\n    {\r\n        // Return if the drawer has already opened\r\n        if ( this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Open the drawer\r\n        this._toggleOpened(true);\r\n    }\r\n\r\n    /**\r\n     * Close the drawer\r\n     */\r\n    close(): void\r\n    {\r\n        // Return if the drawer has already closed\r\n        if ( !this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Close the drawer\r\n        this._toggleOpened(false);\r\n    }\r\n\r\n    /**\r\n     * Toggle the drawer\r\n     */\r\n    toggle(): void\r\n    {\r\n        if ( this.opened )\r\n        {\r\n            this.close();\r\n        }\r\n        else\r\n        {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Enable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _enableAnimations(): void\r\n    {\r\n        // Return if the animations are already enabled\r\n        if ( this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Enable the animations\r\n        this._animationsEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _disableAnimations(): void\r\n    {\r\n        // Return if the animations are already disabled\r\n        if ( !this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Disable the animations\r\n        this._animationsEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * Show the backdrop\r\n     *\r\n     * @private\r\n     */\r\n    private _showOverlay(): void\r\n    {\r\n        // Create the backdrop element\r\n        this._overlay = this._renderer2.createElement('div');\r\n\r\n        // Add a class to the backdrop element\r\n        this._overlay.classList.add('fuse-drawer-overlay');\r\n\r\n        // Add a class depending on the fixed option\r\n        if ( this.fixed )\r\n        {\r\n            this._overlay.classList.add('fuse-drawer-overlay-fixed');\r\n        }\r\n\r\n        // Add a class depending on the transparentOverlay option\r\n        if ( this.transparentOverlay )\r\n        {\r\n            this._overlay.classList.add('fuse-drawer-overlay-transparent');\r\n        }\r\n\r\n        // Append the backdrop to the parent of the drawer\r\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\r\n\r\n        // Create enter animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            style({opacity: 0}),\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Add an event listener to the overlay\r\n        this._overlay.addEventListener('click', this._handleOverlayClick);\r\n    }\r\n\r\n    /**\r\n     * Hide the backdrop\r\n     *\r\n     * @private\r\n     */\r\n    private _hideOverlay(): void\r\n    {\r\n        if ( !this._overlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the leave animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Once the animation is done...\r\n        this._player.onDone(() => {\r\n\r\n            // If the overlay still exists...\r\n            if ( this._overlay )\r\n            {\r\n                // Remove the event listener\r\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\r\n\r\n                // Remove the overlay\r\n                this._overlay.parentNode.removeChild(this._overlay);\r\n                this._overlay = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open/close the drawer\r\n     *\r\n     * @param open\r\n     * @private\r\n     */\r\n    private _toggleOpened(open: boolean): void\r\n    {\r\n        // Set the opened\r\n        this.opened = open;\r\n\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // If the mode is 'over'\r\n        if ( this.mode === 'over' )\r\n        {\r\n            // If the drawer opens, show the overlay\r\n            if ( open )\r\n            {\r\n                this._showOverlay();\r\n            }\r\n            // Otherwise, close the overlay\r\n            else\r\n            {\r\n                this._hideOverlay();\r\n            }\r\n        }\r\n\r\n        // Execute the observable\r\n        this.openedChanged.next(open);\r\n    }\r\n}\r\n","<div class=\"fuse-drawer-content\">\r\n    <ng-content></ng-content>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingsService {\r\n  opened$: Observable<boolean>;\r\n  private _opened: boolean = false;\r\n  private _openedSubject: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this._openedSubject = new BehaviorSubject(this._opened);\r\n    this.opened$ = this._openedSubject.asObservable();\r\n  }\r\n\r\n  openSettingsDrawer(): void {\r\n    this._opened = true;\r\n    this._openedSubject.next(true);\r\n  }\r\n\r\n  closeSettingsDrawer(): void {\r\n    this._opened = false;\r\n    this._openedSubject.next(false);\r\n  }\r\n\r\n  toggleSettingsDrawer(): void {\r\n    this._opened = !this._opened;\r\n    this._openedSubject.next(this._opened);\r\n  }\r\n}\r\n","<fuse-drawer\r\n  class=\"w-screen min-w-screen sm:w-100 sm:min-w-100 z-999\"\r\n  fixed\r\n  [mode]=\"'over'\"\r\n  [name]=\"'settingsDrawer'\"\r\n  [position]=\"'right'\"\r\n  #settingsDrawer\r\n>\r\n  <div class=\"flex flex-col w-full overflow-auto bg-card\">\r\n    <div\r\n      class=\"flex flex-row items-center px-6 h-20 min-h-20 text-white bg-primary\"\r\n    >\r\n      <mat-icon\r\n        class=\"icon-size-7 text-current\"\r\n        [svgIcon]=\"'heroicons_solid:cog'\"\r\n      ></mat-icon>\r\n      <div class=\"ml-3 text-2xl font-semibold tracking-tight\">Settings</div>\r\n      <button class=\"ml-auto\" mat-icon-button (click)=\"closeSettingsDrawer()\">\r\n        <mat-icon\r\n          class=\"text-current\"\r\n          [svgIcon]=\"'heroicons_outline:x'\"\r\n        ></mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col p-6\">\r\n      <!-- Theme -->\r\n      <div class=\"text-md font-semibold text-secondary\">THEME</div>\r\n      <div class=\"grid grid-cols-2 sm:grid-cols-3 gap-3 mt-6\">\r\n        <ng-container *ngFor=\"let theme of config.themes\">\r\n          <div\r\n            class=\"flex items-center justify-center px-4 py-3 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\r\n            [class.ring-2]=\"config.theme === theme.id\"\r\n            [ngClass]=\"theme.id\"\r\n            (click)=\"setTheme(theme.id)\"\r\n          >\r\n            <div class=\"flex-0 w-3 h-3 rounded-full bg-primary\"></div>\r\n            <div\r\n              class=\"ml-2.5 font-medium leading-5 truncate\"\r\n              [class.text-secondary]=\"config.theme !== theme.id\"\r\n            >\r\n              {{ theme.name }}\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <hr class=\"my-8\" />\r\n\r\n      <!-- Scheme -->\r\n      <div class=\"text-md font-semibold text-secondary\">SCHEME</div>\r\n      <div class=\"grid grid-cols-3 gap-3 justify-items-start mt-6\">\r\n        <!-- Auto -->\r\n        <div\r\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\r\n          [class.ring-2]=\"config.scheme === 'auto'\"\r\n          matTooltip=\"Automatically sets the scheme based on user's operating system's color scheme preference using 'prefer-color-scheme' media query.\"\r\n          (click)=\"setScheme('auto')\"\r\n        >\r\n          <div class=\"flex items-center rounded-full overflow-hidden\">\r\n            <mat-icon\r\n              class=\"icon-size-5\"\r\n              [svgIcon]=\"'heroicons_solid:lightning-bolt'\"\r\n            ></mat-icon>\r\n          </div>\r\n          <div\r\n            class=\"flex items-center ml-2 font-medium leading-5\"\r\n            [class.text-secondary]=\"config.scheme !== 'auto'\"\r\n          >\r\n            Auto\r\n          </div>\r\n        </div>\r\n        <!-- Dark -->\r\n        <div\r\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\r\n          [class.ring-2]=\"config.scheme === 'dark'\"\r\n          (click)=\"setScheme('dark')\"\r\n        >\r\n          <div class=\"flex items-center rounded-full overflow-hidden\">\r\n            <mat-icon\r\n              class=\"icon-size-5\"\r\n              [svgIcon]=\"'heroicons_solid:moon'\"\r\n            ></mat-icon>\r\n          </div>\r\n          <div\r\n            class=\"flex items-center ml-2 font-medium leading-5\"\r\n            [class.text-secondary]=\"config.scheme !== 'dark'\"\r\n          >\r\n            Dark\r\n          </div>\r\n        </div>\r\n        <!-- Light -->\r\n        <div\r\n          class=\"flex items-center py-3 pl-5 pr-6 rounded-full cursor-pointer ring-inset ring-primary bg-hover\"\r\n          [class.ring-2]=\"config.scheme === 'light'\"\r\n          (click)=\"setScheme('light')\"\r\n        >\r\n          <div class=\"flex items-center rounded-full overflow-hidden\">\r\n            <mat-icon\r\n              class=\"icon-size-5\"\r\n              [svgIcon]=\"'heroicons_solid:sun'\"\r\n            ></mat-icon>\r\n          </div>\r\n          <div\r\n            class=\"flex items-center ml-2 font-medium leading-5\"\r\n            [class.text-secondary]=\"config.scheme !== 'light'\"\r\n          >\r\n            Light\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr class=\"my-8\" />\r\n\r\n      <!-- Layout -->\r\n      <div class=\"text-md font-semibold text-secondary\">LAYOUT</div>\r\n      <div class=\"grid grid-cols-3 gap-3 mt-6\">\r\n\r\n        <!-- Classic -->\r\n        <div\r\n          class=\"flex flex-col cursor-pointer\"\r\n          (click)=\"setLayout('classic')\"\r\n        >\r\n          <div\r\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\r\n            [class.border-primary]=\"config.layout === 'classic'\"\r\n          >\r\n            <div class=\"w-8 bg-gray-100 dark:bg-gray-800\">\r\n              <div class=\"mt-3 mx-1.5 space-y-1\">\r\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\r\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\r\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\r\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\r\n                <div class=\"h-1 rounded-sm bg-gray-300 dark:bg-gray-700\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex flex-col flex-auto border-l\">\r\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\r\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\r\n            [class.text-primary]=\"config.layout === 'classic'\"\r\n          >\r\n            Classic\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Compact -->\r\n        <div\r\n          class=\"flex flex-col cursor-pointer\"\r\n          (click)=\"setLayout('compact')\"\r\n        >\r\n          <div\r\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\r\n            [class.border-primary]=\"config.layout === 'compact'\"\r\n          >\r\n            <div class=\"w-5 bg-gray-100 dark:bg-gray-800\">\r\n              <div\r\n                class=\"w-3 h-3 mt-2 mx-auto rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n              ></div>\r\n              <div class=\"flex flex-col items-center w-full mt-2 space-y-1\">\r\n                <div\r\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n                <div\r\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n                <div\r\n                  class=\"w-3 h-2.5 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex flex-col flex-auto border-l\">\r\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\r\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\r\n            [class.text-primary]=\"config.layout === 'compact'\"\r\n          >\r\n            Compact\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Dense -->\r\n        <div class=\"flex flex-col cursor-pointer\" (click)=\"setLayout('dense')\">\r\n          <div\r\n            class=\"flex h-20 rounded-md overflow-hidden border-2 hover:opacity-80\"\r\n            [class.border-primary]=\"config.layout === 'dense'\"\r\n          >\r\n            <div class=\"w-4 bg-gray-100 dark:bg-gray-800\">\r\n              <div\r\n                class=\"w-2 h-2 mt-2 mx-auto rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n              ></div>\r\n              <div class=\"flex flex-col items-center w-full mt-2 space-y-1\">\r\n                <div\r\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n                <div\r\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n                <div\r\n                  class=\"w-2 h-2 rounded-sm bg-gray-300 dark:bg-gray-700\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex flex-col flex-auto border-l\">\r\n              <div class=\"h-3 bg-gray-100 dark:bg-gray-800\">\r\n                <div class=\"flex items-center justify-end h-full mr-1.5\">\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"w-1 h-1 ml-1 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"flex flex-auto border-t bg-gray-50 dark:bg-gray-900\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"mt-2 text-md font-medium text-center text-secondary\"\r\n            [class.text-primary]=\"config.layout === 'dense'\"\r\n          >\r\n            Dense\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</fuse-drawer>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseConfigService } from '@fuse/services/config';\r\nimport { AppConfig, Scheme, Theme, Themes } from 'app/core/config/app.config';\r\nimport { Layout } from 'app/layout/layout.types';\r\nimport { SettingsService } from './settings.service';\r\nimport { FuseDrawerComponent } from '@fuse/components/drawer';\r\n\r\n@Component({\r\n  selector: 'settings',\r\n  templateUrl: './settings.component.html',\r\n  styles: [\r\n    `\r\n      settings {\r\n        position: static;\r\n        display: block;\r\n        flex: none;\r\n        width: auto;\r\n      }\r\n\r\n      @media (screen and min-width: 1280px) {\r\n        empty-layout + settings .settings-cog {\r\n          right: 0 !important;\r\n        }\r\n      }\r\n    `,\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  @ViewChild(FuseDrawerComponent) settingsDrawer: FuseDrawerComponent;\r\n\r\n  config: AppConfig;\r\n  layout: Layout;\r\n  scheme: 'dark' | 'light';\r\n  theme: string;\r\n  themes: Themes;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _fuseConfigService: FuseConfigService,\r\n    private _settingsService: SettingsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to config changes\r\n    this._fuseConfigService.config$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config: AppConfig) => (this.config = config));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Subscribe to SettingsDrawerStatus changes\r\n    this._settingsService.opened$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((opened: boolean) => {\r\n        if (opened) {\r\n          this.settingsDrawer.open();\r\n        } else {\r\n          this.settingsDrawer.close();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  setLayout(layout: string): void {\r\n    // Clear the 'layout' query param to allow layout changes\r\n    this._router\r\n      .navigate([], {\r\n        queryParams: {\r\n          layout: null,\r\n        },\r\n        queryParamsHandling: 'merge',\r\n      })\r\n      .then(() => {\r\n        // Set the config\r\n        this._fuseConfigService.config = { layout };\r\n      });\r\n  }\r\n\r\n  setScheme(scheme: Scheme): void {\r\n    this._fuseConfigService.config = { scheme };\r\n  }\r\n\r\n  setTheme(theme: Theme): void {\r\n    this._fuseConfigService.config = { theme };\r\n  }\r\n\r\n  closeSettingsDrawer(): void {\r\n    this._settingsService.closeSettingsDrawer();\r\n  }\r\n}\r\n","<ng-container *ngIf=\"show\">\r\n    <mat-progress-bar\r\n        [mode]=\"mode\"\r\n        [value]=\"progress\"></mat-progress-bar>\r\n</ng-container>\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseLoadingService } from '@fuse/services/loading';\r\n\r\n@Component({\r\n    selector     : 'fuse-loading-bar',\r\n    templateUrl  : './loading-bar.component.html',\r\n    styleUrls    : ['./loading-bar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs     : 'fuseLoadingBar'\r\n})\r\nexport class FuseLoadingBarComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    @Input() autoMode: boolean = true;\r\n    mode: 'determinate' | 'indeterminate';\r\n    progress: number = 0;\r\n    show: boolean = false;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseLoadingService: FuseLoadingService)\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Auto mode\r\n        if ( 'autoMode' in changes )\r\n        {\r\n            // Set the auto mode in the service\r\n            this._fuseLoadingService.setAutoMode(coerceBooleanProperty(changes.autoMode.currentValue));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to the service\r\n        this._fuseLoadingService.mode$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((value) => {\r\n                this.mode = value;\r\n            });\r\n\r\n        this._fuseLoadingService.progress$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((value) => {\r\n                this.progress = value;\r\n            });\r\n\r\n        this._fuseLoadingService.show$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((value) => {\r\n                this.show = value;\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto w-full\">\r\n  <!-- Content -->\r\n  <div class=\"flex flex-col flex-auto\">\r\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n    <router-outlet *ngIf=\"true\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'empty-layout',\r\n  templateUrl: './empty.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class EmptyLayoutComponent implements OnDestroy {\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","/* tslint:disable:max-line-length */\r\nimport { FuseNavigationItem } from '@fuse/components/navigation';\r\n\r\nexport const menuNavigation: FuseNavigationItem[] = [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    type: 'basic',\r\n    icon: 'heroicons_outline:home',\r\n    link: '/home',\r\n  },\r\n  {\r\n    id: 'administracao',\r\n    title: 'Administração',\r\n    type: 'collapsable',\r\n    icon: 'heroicons_outline:cog',\r\n    children: [\r\n      {\r\n        id: 'perfil',\r\n        title: 'Perfil',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user',\r\n        link: '/perfil',\r\n      },\r\n      {\r\n        id: 'permissao',\r\n        title: 'Permissão',\r\n        type: 'basic',\r\n        icon: 'mat_outline:lock',\r\n        link: '/permissao',\r\n      },\r\n      {\r\n        id: 'perfil-permissao',\r\n        title: 'Perfil/Permissão',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user-group',\r\n        link: '/perfil-permissao',\r\n      },\r\n      {\r\n        id: 'usuario',\r\n        title: 'Usuário',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user-circle',\r\n        link: '/usuario',\r\n      },\r\n      {\r\n        id: 'log',\r\n        title: 'Log',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:document-text',\r\n        link: '/log',\r\n      },\r\n    ]\r\n  },\r\n];\r\n\r\nexport const adminNavigation: FuseNavigationItem[] = [\r\n  {\r\n    id: 'admin-home',\r\n    title: 'Admin',\r\n    type: 'basic',\r\n    icon: 'heroicons_outline:chart-pie',\r\n    link: '/example',\r\n  },\r\n];\r\n\r\nexport const compactNavigation: FuseNavigationItem[] = [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    type: 'basic',\r\n    icon: 'heroicons_outline:home',\r\n    link: '/home',\r\n  },\r\n  {\r\n    id: 'administracao',\r\n    title: 'Administração',\r\n    type: 'aside',\r\n    icon: 'heroicons_outline:cog',\r\n    children: [\r\n      {\r\n        id: 'perfil',\r\n        title: 'Perfil',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user',\r\n        link: '/perfil',\r\n      },\r\n      {\r\n        id: 'permissao',\r\n        title: 'Permissão',\r\n        type: 'basic',\r\n        icon: 'mat_outline:lock',\r\n        link: '/permissao',\r\n      },\r\n      {\r\n        id: 'perfil-permissao',\r\n        title: 'Perfil/Permissão',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user-group',\r\n        link: '/perfil-permissao',\r\n      },\r\n      {\r\n        id: 'usuario',\r\n        title: 'Usuário',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:user-circle',\r\n        link: '/usuario',\r\n      },\r\n      {\r\n        id: 'log',\r\n        title: 'Log',\r\n        type: 'basic',\r\n        icon: 'heroicons_outline:document-text',\r\n        link: '/log',\r\n      },\r\n    ]\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\n\r\n// Navigation Data\r\nimport { menuNavigation, adminNavigation, compactNavigation } from './navigation-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavigationService {\r\n  private _navigation: ReplaySubject<Navigation> = new ReplaySubject<Navigation>(1);\r\n\r\n  constructor() {\r\n    this._navigation.next({\r\n        admin: adminNavigation,\r\n        default: menuNavigation,\r\n        compact: compactNavigation,\r\n    });\r\n  }\r\n\r\n  get navigation$(): Observable<Navigation> {\r\n    return this._navigation.asObservable();\r\n  }\r\n}\r\n","<!-- Button -->\r\n<button\r\n    mat-icon-button\r\n    [matTooltip]=\"tooltip || 'Toggle Fullscreen'\"\r\n    (click)=\"toggleFullscreen()\">\r\n    <ng-container [ngTemplateOutlet]=\"iconTpl || defaultIconTpl\"></ng-container>\r\n</button>\r\n\r\n<!-- Default icon -->\r\n<ng-template #defaultIconTpl>\r\n    <mat-icon [svgIcon]=\"'heroicons_outline:arrows-expand'\"></mat-icon>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, Inject, Input, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { FSDocument, FSDocumentElement } from '@fuse/components/fullscreen/fullscreen.types';\r\n\r\n@Component({\r\n    selector       : 'fuse-fullscreen',\r\n    templateUrl    : './fullscreen.component.html',\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    exportAs       : 'fuseFullscreen'\r\n})\r\nexport class FuseFullscreenComponent implements OnInit\r\n{\r\n    @Input() iconTpl: TemplateRef<any>;\r\n    @Input() tooltip: string;\r\n    private _fsDoc: FSDocument;\r\n    private _fsDocEl: FSDocumentElement;\r\n    private _isFullscreen: boolean = false;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(@Inject(DOCUMENT) private _document: Document)\r\n    {\r\n        this._fsDoc = _document as FSDocument;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._fsDocEl = document.documentElement as FSDocumentElement;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle the fullscreen mode\r\n     */\r\n    toggleFullscreen(): void\r\n    {\r\n        // Check if the fullscreen is open\r\n        this._isFullscreen = this._getBrowserFullscreenElement() !== null;\r\n\r\n        // Toggle the fullscreen\r\n        if ( this._isFullscreen )\r\n        {\r\n            this._closeFullscreen();\r\n        }\r\n        else\r\n        {\r\n            this._openFullscreen();\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get browser's fullscreen element\r\n     *\r\n     * @private\r\n     */\r\n    private _getBrowserFullscreenElement(): Element\r\n    {\r\n        if ( typeof this._fsDoc.fullscreenElement !== 'undefined' )\r\n        {\r\n            return this._fsDoc.fullscreenElement;\r\n        }\r\n\r\n        if ( typeof this._fsDoc.mozFullScreenElement !== 'undefined' )\r\n        {\r\n            return this._fsDoc.mozFullScreenElement;\r\n        }\r\n\r\n        if ( typeof this._fsDoc.msFullscreenElement !== 'undefined' )\r\n        {\r\n            return this._fsDoc.msFullscreenElement;\r\n        }\r\n\r\n        if ( typeof this._fsDoc.webkitFullscreenElement !== 'undefined' )\r\n        {\r\n            return this._fsDoc.webkitFullscreenElement;\r\n        }\r\n\r\n        throw new Error('Fullscreen mode is not supported by this browser');\r\n    }\r\n\r\n    /**\r\n     * Open the fullscreen\r\n     *\r\n     * @private\r\n     */\r\n    private _openFullscreen(): void\r\n    {\r\n        if ( this._fsDocEl.requestFullscreen )\r\n        {\r\n            this._fsDocEl.requestFullscreen();\r\n            return;\r\n        }\r\n\r\n        // Firefox\r\n        if ( this._fsDocEl.mozRequestFullScreen )\r\n        {\r\n            this._fsDocEl.mozRequestFullScreen();\r\n            return;\r\n        }\r\n\r\n        // Chrome, Safari and Opera\r\n        if ( this._fsDocEl.webkitRequestFullscreen )\r\n        {\r\n            this._fsDocEl.webkitRequestFullscreen();\r\n            return;\r\n        }\r\n\r\n        // IE/Edge\r\n        if ( this._fsDocEl.msRequestFullscreen )\r\n        {\r\n            this._fsDocEl.msRequestFullscreen();\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the fullscreen\r\n     *\r\n     * @private\r\n     */\r\n    private _closeFullscreen(): void\r\n    {\r\n        if ( this._fsDoc.exitFullscreen )\r\n        {\r\n            this._fsDoc.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        // Firefox\r\n        if ( this._fsDoc.mozCancelFullScreen )\r\n        {\r\n            this._fsDoc.mozCancelFullScreen();\r\n            return;\r\n        }\r\n\r\n        // Chrome, Safari and Opera\r\n        if ( this._fsDoc.webkitExitFullscreen )\r\n        {\r\n            this._fsDoc.webkitExitFullscreen();\r\n            return;\r\n        }\r\n\r\n        // IE/Edge\r\n        else if ( this._fsDoc.msExitFullscreen )\r\n        {\r\n            this._fsDoc.msExitFullscreen();\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<!-- Button -->\r\n<button mat-icon-button [matMenuTriggerFor]=\"userActions\">\r\n  <span class=\"relative\">\r\n    <img\r\n      class=\"w-7 h-7 rounded-full object-cover\"\r\n      *ngIf=\"user.imageProfile\"\r\n      [src]=\"'data:image/png;base64, ' + user.imageProfile\"\r\n    />\r\n\r\n    <mat-icon\r\n      *ngIf=\"!user.imageProfile\"\r\n      [svgIcon]=\"'heroicons_outline:user-circle'\"\r\n    ></mat-icon>\r\n  </span>\r\n</button>\r\n\r\n<mat-menu [xPosition]=\"'before'\" #userActions=\"matMenu\">\r\n  <div class=\"px-4\">\r\n    <span class=\"flex flex-col leading-none\">\r\n      <span>Você está logado como</span>\r\n      <span class=\"mt-1.5 text-lg font-medium font-bold\">\r\n        {{ user.nome }}\r\n      </span>\r\n      <span class=\"text-sm mt-1 font-medium font-bold text-gray-500 dark:text-gray-300\">\r\n        {{ user.perfil.nome | titlecase }}\r\n      </span>\r\n    </span>\r\n  </div>\r\n\r\n  <mat-divider class=\"my-2\"></mat-divider>\r\n\r\n  <button mat-menu-item (click)=\"openSettingsDrawer()\">\r\n    <mat-icon [svgIcon]=\"'heroicons_outline:cog'\"></mat-icon>\r\n    <span>Configurações</span>\r\n  </button>\r\n\r\n  <mat-divider class=\"my-2\"></mat-divider>\r\n  <button mat-menu-item (click)=\"signOut()\">\r\n    <mat-icon [svgIcon]=\"'heroicons_outline:logout'\"></mat-icon>\r\n    <span>Sair</span>\r\n  </button>\r\n</mat-menu>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { User } from 'app/core/user/user.types';\r\nimport { UserService } from 'app/core/user/user.service';\r\nimport { SettingsService } from '../settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'user',\r\n  templateUrl: './user.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  exportAs: 'user',\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n  user: User;\r\n\r\n  userFotoUrl: string;\r\n\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _settingsService: SettingsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to user changes\r\n    this._userService.user$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((user: User) => {\r\n        this.user = user;\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n\r\n    // TODO: getUserPhotoUrl observable\r\n    this._userService.userAvatarUrl$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((res) => {\r\n        this.userFotoUrl = res;\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  openSettingsDrawer(): void {\r\n    this._settingsService.openSettingsDrawer();\r\n  }\r\n\r\n  signOut(): void {\r\n    this._router.navigate(['/sign-out']);\r\n  }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Navigation -->\r\n<ng-container *ngIf=\"isScreenSmall\">\r\n  <fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"'over'\" [name]=\"'mainNavigation'\"\r\n    [navigation]=\"navigation.admin\" [opened]=\"false\">\r\n    <!-- Navigation header hook -->\r\n    <ng-container fuseVerticalNavigationContentHeader>\r\n      <!-- Logo -->\r\n      <div class=\"flex items-center h-20 pt-6 px-8\">\r\n        <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\r\n      </div>\r\n    </ng-container>\r\n  </fuse-vertical-navigation>\r\n</ng-container>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto items-center w-full min-w-0 bg-gray-200 dark:bg-card\">\r\n  <!-- Header -->\r\n  <div\r\n    class=\"relative flex flex-col flex-0 justify-center w-full h-16 sm:h-20 md:h-36 overflow-hidden z-49 shadow dark:shadow-none print:hidden\">\r\n    <!-- Top bar -->\r\n    <div class=\"relative dark flex flex-auto justify-center w-full px-4 md:px-8 bg-gray-800 dark:bg-gray-900\">\r\n      <div class=\"flex items-center w-full max-w-360 h-16 sm:h-20\">\r\n        <!-- Logo -->\r\n        <ng-container *ngIf=\"!isScreenSmall\">\r\n          <div class=\"flex items-center\">\r\n            <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\r\n          </div>\r\n        </ng-container>\r\n        <!-- Navigation toggle button -->\r\n        <ng-container *ngIf=\"isScreenSmall\">\r\n          <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\r\n            <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <!-- Components -->\r\n        <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\r\n          <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\r\n          <!-- <search [appearance]=\"'bar'\"></search>\r\n                    <shortcuts></shortcuts> -->\r\n          <!-- <notifications></notifications> -->\r\n          <user></user>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Bottom bar -->\r\n    <ng-container *ngIf=\"!isScreenSmall\">\r\n      <div class=\"flex flex-auto justify-center px-4 md:px-8 bg-card dark:bg-gray-700\">\r\n        <div class=\"relative flex items-center w-full max-w-360 h-16\">\r\n          <fuse-horizontal-navigation class=\"-mx-4\" [name]=\"'mainNavigation'\" [navigation]=\"navigation.admin\">\r\n          </fuse-horizontal-navigation>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"flex flex-auto justify-center w-full sm:p-6 md:p-8\">\r\n    <div class=\"flex flex-col flex-auto w-full sm:max-w-360 sm:shadow-lg sm:rounded-lg sm:overflow-hidden bg-default\">\r\n      <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n                 Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n      <router-outlet *ngIf=\"true\"></router-outlet>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Footer -->\r\n  <div\r\n    class=\"flex flex-col sm:flex-row items-center justify-between w-full sm:h-24 px-4 md:px-6 z-49 border-t bg-card dark:bg-transparent print:hidden\">\r\n    <section class=\"font-medium text-secondary\" name=\"endereco\">\r\n      <p>Mardonio S Costa Desenvolvedor Sr - Copyright ©</p>\r\n      <p>Coordenadoria de Tecnologia da Informação</p>\r\n      <p>2021 - Todos os Direitos Reservados</p>\r\n    </section>\r\n\r\n    <section name=\"versao\" class=\"font-medium text-secondary\">\r\n      <p>\r\n        Versão: <strong>{{ nomeSistema }} &copy; {{ currentYear }} </strong>\r\n      </p>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport {\r\n  FuseNavigationService,\r\n  FuseVerticalNavigationComponent,\r\n} from '@fuse/components/navigation';\r\nimport { NavigationService } from 'app/core/navigation/navigation.service';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\nimport { environment as env } from 'environments/environment';\r\n\r\n@Component({\r\n  selector: 'enterprise-layout',\r\n  templateUrl: './enterprise.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class EnterpriseLayoutComponent implements OnInit, OnDestroy {\r\n  isScreenSmall: boolean;\r\n  navigation: Navigation;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _navigationService: NavigationService,\r\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n    private _fuseNavigationService: FuseNavigationService\r\n  ) {}\r\n\r\n  get currentYear(): number {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  get nomeSistema(): string {\r\n    return env.nomeSistema;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation data\r\n    this._navigationService.navigation$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((navigation: Navigation) => {\r\n        this.navigation = navigation;\r\n      });\r\n\r\n    // Subscribe to media changes\r\n    this._fuseMediaWatcherService.onMediaChange$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(({ matchingAliases }) => {\r\n        // Check if the screen is small\r\n        this.isScreenSmall = !matchingAliases.includes('md');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  toggleNavigation(name: string): void {\r\n    // Get the navigation\r\n    const navigation =\r\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\r\n        name\r\n      );\r\n\r\n    if (navigation) {\r\n      // Toggle the opened status\r\n      navigation.toggle();\r\n    }\r\n  }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Navigation -->\r\n<ng-container *ngIf=\"isScreenSmall\">\r\n  <fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"'over'\" [name]=\"'mainNavigation'\"\r\n    [navigation]=\"navigation.admin\" [opened]=\"false\">\r\n    <!-- Navigation header hook -->\r\n    <ng-container fuseVerticalNavigationContentHeader>\r\n      <!-- Logo -->\r\n      <div class=\"flex items-center h-20 pt-6 px-8\">\r\n        <img class=\"w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" alt=\"Logo image\" />\r\n      </div>\r\n    </ng-container>\r\n  </fuse-vertical-navigation>\r\n</ng-container>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\r\n  <!-- Header -->\r\n  <div\r\n    class=\"relative flex flex-0 items-center w-full h-16 sm:h-20 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\">\r\n    <ng-container *ngIf=\"!isScreenSmall\">\r\n      <!-- Logo -->\r\n      <div class=\"flex items-center mx-2 lg:mr-8\">\r\n        <div class=\"hidden lg:flex\">\r\n          <img class=\"dark:hidden w-24\" src=\"assets/images/logo/logo-text.svg\" />\r\n          <img class=\"hidden dark:flex w-24\" src=\"assets/images/logo/logo-text-on-dark.svg\" />\r\n        </div>\r\n        <img class=\"flex lg:hidden w-8\" src=\"assets/logos/corebase.png\" />\r\n      </div>\r\n      <!-- Horizontal navigation -->\r\n      <fuse-horizontal-navigation class=\"mr-2\" [name]=\"'mainNavigation'\" [navigation]=\"navigation.admin\">\r\n      </fuse-horizontal-navigation>\r\n    </ng-container>\r\n    <!-- Navigation toggle button -->\r\n    <ng-container *ngIf=\"isScreenSmall\">\r\n      <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\r\n        <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\r\n      </button>\r\n    </ng-container>\r\n    <!-- Components -->\r\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\r\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\r\n      <!-- <search [appearance]=\"'bar'\"></search>\r\n            <shortcuts></shortcuts>\r\n            <notifications></notifications> -->\r\n      <user></user>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"flex flex-col flex-auto w-full\">\r\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n    <router-outlet *ngIf=\"true\"></router-outlet>\r\n  </div>\r\n\r\n  <!-- Footer -->\r\n  <div\r\n    class=\"flex flex-col sm:flex-row items-center justify-between w-full sm:h-24 px-4 md:px-6 z-49 border-t bg-card dark:bg-transparent print:hidden\">\r\n    <section class=\"font-medium text-secondary\" name=\"endereco\">\r\n      <p>Mardonio S Costa Desenvolvedor Sr - Copyright ©</p>\r\n      <p>Coordenadoria de Tecnologia da Informação</p>\r\n      <p>2021 - Todos os Direitos Reservados</p>\r\n    </section>\r\n\r\n    <section name=\"versao\" class=\"font-medium text-secondary\">\r\n      <p>\r\n        Versão: <strong>{{ nomeSistema }} &copy; {{ currentYear }} </strong>\r\n      </p>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport {\r\n  FuseNavigationService,\r\n  FuseVerticalNavigationComponent,\r\n} from '@fuse/components/navigation';\r\nimport { NavigationService } from 'app/core/navigation/navigation.service';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\nimport { environment as env } from 'environments/environment';\r\n\r\n@Component({\r\n  selector: 'modern-layout',\r\n  templateUrl: './modern.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ModernLayoutComponent implements OnInit, OnDestroy {\r\n  isScreenSmall: boolean;\r\n  navigation: Navigation;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _navigationService: NavigationService,\r\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n    private _fuseNavigationService: FuseNavigationService\r\n  ) {}\r\n\r\n  get currentYear(): number {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  get nomeSistema(): string {\r\n    return env.nomeSistema;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation data\r\n    this._navigationService.navigation$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((navigation: Navigation) => {\r\n        this.navigation = navigation;\r\n      });\r\n\r\n    // Subscribe to media changes\r\n    this._fuseMediaWatcherService.onMediaChange$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(({ matchingAliases }) => {\r\n        // Check if the screen is small\r\n        this.isScreenSmall = !matchingAliases.includes('md');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  toggleNavigation(name: string): void {\r\n    // Get the navigation\r\n    const navigation =\r\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\r\n        name\r\n      );\r\n\r\n    if (navigation) {\r\n      // Toggle the opened status\r\n      navigation.toggle();\r\n    }\r\n  }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Navigation -->\r\n<fuse-vertical-navigation class=\"dark bg-gray-900 print:hidden\" [mode]=\"isScreenSmall ? 'over' : 'side'\"\r\n  [name]=\"'mainNavigation'\" [navigation]=\"navigation.default\" [opened]=\"!isScreenSmall\">\r\n  <!-- Navigation header hook -->\r\n  <ng-container fuseVerticalNavigationContentHeader>\r\n    <!-- Logo -->\r\n    <div>\r\n      <div class=\"flex items-center h-20 p-6 pb-0 mb-4\">\r\n        <img class=\"w-20 mr-2\" src=\"assets/logos/corebase.png\" alt=\"Logo image\">\r\n        <div>\r\n          <label class=\"text-3xl font-bold\">{{ nomeSistema }}</label>\r\n          <div class=\"flex-auto border-t border-gray-600 max-w-80\"></div>\r\n          <div class=\"flex flex-col\">\r\n            Base de Sistemas\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!-- Navigation footer hook -->\r\n  <ng-container fuseVerticalNavigationContentFooter>\r\n    <div class=\"fixed left-0 bottom-0 w-64  text-center p-5 ml-3 bg-accent-900 border-t text-sm opacity-40\">\r\n      <p> Desenvolvido por: <span>Mardonio S Costa </span></p>\r\n      <strong>Developer Front Sr</strong>\r\n      <p> versão: {{ version }}</p>\r\n    </div>\r\n  </ng-container>\r\n</fuse-vertical-navigation>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\r\n\r\n  <!-- Header -->\r\n  <div\r\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\">\r\n    <!-- Navigation toggle button -->\r\n    <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\r\n      <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\r\n    </button>\r\n    <!-- Components -->\r\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\r\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\r\n      <!-- <search [appearance]=\"'bar'\"></search> -->\r\n      <!-- <shortcuts></shortcuts> -->\r\n      <!-- <notifications></notifications> -->\r\n      <user></user>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"flex flex-col flex-auto\">\r\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n    <router-outlet *ngIf=\"true\"></router-outlet>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport {\r\n  FuseNavigationService,\r\n  FuseVerticalNavigationComponent,\r\n} from '@fuse/components/navigation';\r\nimport { NavigationService } from 'app/core/navigation/navigation.service';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\nimport { environment as env } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: 'classic-layout',\r\n  templateUrl: './classic.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ClassicLayoutComponent implements OnInit, OnDestroy {\r\n  isScreenSmall: boolean;\r\n  navigation: Navigation;\r\n  version = env.version;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _navigationService: NavigationService,\r\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n    private _fuseNavigationService: FuseNavigationService\r\n  ) {}\r\n\r\n  get currentYear(): number {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation data\r\n    this._navigationService.navigation$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((navigation: Navigation) => {\r\n        this.navigation = navigation;\r\n      });\r\n\r\n    // Subscribe to media changes\r\n    this._fuseMediaWatcherService.onMediaChange$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(({ matchingAliases }) => {\r\n        // Check if the screen is small\r\n        this.isScreenSmall = !matchingAliases.includes('md');\r\n      });\r\n  }\r\n\r\n  get nomeSistema(): string {\r\n    return env.nomeSistema;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  toggleNavigation(name: string): void {\r\n    // Get the navigation\r\n    const navigation =\r\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\r\n        name\r\n      );\r\n\r\n    if (navigation) {\r\n      // Toggle the opened status\r\n      navigation.toggle();\r\n    }\r\n  }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Navigation -->\r\n<fuse-vertical-navigation\r\n  class=\"dark bg-gray-900 print:hidden\"\r\n  [appearance]=\"'compact'\"\r\n  [mode]=\"isScreenSmall ? 'over' : 'side'\"\r\n  [name]=\"'mainNavigation'\"\r\n  [navigation]=\"navigation.compact\"\r\n  [opened]=\"!isScreenSmall\"\r\n>\r\n  <!-- Navigation header hook -->\r\n  <ng-container fuseVerticalNavigationContentHeader>\r\n    <!-- Logo -->\r\n    <div class=\"flex items-center justify-center h-20 mt-3 mb-4\">\r\n      <img class=\"w-20\" src=\"assets/logos/corebase.png\" alt=\"Logo image\" />\r\n    </div>\r\n  </ng-container>\r\n</fuse-vertical-navigation>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\r\n  <!-- Header -->\r\n  <div\r\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\"\r\n  >\r\n    <!-- Navigation toggle button -->\r\n    <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\r\n      <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\r\n    </button>\r\n    <!-- Components -->\r\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\r\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\r\n      <!-- <search [appearance]=\"'bar'\"></search>\r\n            <shortcuts></shortcuts>\r\n            <notifications></notifications> -->\r\n      <user></user>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"flex flex-col flex-auto\">\r\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n    <router-outlet *ngIf=\"true\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport {\r\n  FuseNavigationService,\r\n  FuseVerticalNavigationComponent,\r\n} from '@fuse/components/navigation';\r\nimport { NavigationService } from 'app/core/navigation/navigation.service';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\nimport { environment as env } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: 'compact-layout',\r\n  templateUrl: './compact.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CompactLayoutComponent implements OnInit, OnDestroy {\r\n  isScreenSmall: boolean;\r\n  navigation: Navigation;\r\n  version = env.version;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _navigationService: NavigationService,\r\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n    private _fuseNavigationService: FuseNavigationService\r\n  ) {}\r\n\r\n  get currentYear(): number {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation data\r\n    this._navigationService.navigation$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((navigation: Navigation) => {\r\n        this.navigation = navigation;\r\n      });\r\n\r\n    // Subscribe to media changes\r\n    this._fuseMediaWatcherService.onMediaChange$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(({ matchingAliases }) => {\r\n        // Check if the screen is small\r\n        this.isScreenSmall = !matchingAliases.includes('md');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  toggleNavigation(name: string): void {\r\n    // Get the navigation\r\n    const navigation =\r\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\r\n        name\r\n      );\r\n\r\n    if (navigation) {\r\n      // Toggle the opened status\r\n      navigation.toggle();\r\n    }\r\n  }\r\n}\r\n","<!-- Loading bar -->\r\n<fuse-loading-bar></fuse-loading-bar>\r\n\r\n<!-- Navigation -->\r\n<fuse-vertical-navigation\r\n  class=\"dark bg-gray-900 print:hidden\"\r\n  [appearance]=\"navigationAppearance\"\r\n  [mode]=\"isScreenSmall ? 'over' : 'side'\"\r\n  [name]=\"'mainNavigation'\"\r\n  [navigation]=\"navigation.default\"\r\n  [opened]=\"!isScreenSmall\"\r\n>\r\n  <!-- Navigation header hook -->\r\n  <ng-container fuseVerticalNavigationContentHeader>\r\n    <!-- Logo -->\r\n    <div class=\"flex items-center justify-center h-20\">\r\n      <img class=\"w-12\" src=\"assets/logos/corebase.png\" alt=\"Logo image\" />\r\n    </div>\r\n  </ng-container>\r\n</fuse-vertical-navigation>\r\n\r\n<!-- Wrapper -->\r\n<div class=\"flex flex-col flex-auto w-full min-w-0\">\r\n  <!-- Header -->\r\n  <div\r\n    class=\"relative flex flex-0 items-center w-full h-16 px-4 md:px-6 z-49 shadow dark:shadow-none dark:border-b bg-card dark:bg-transparent print:hidden\"\r\n  >\r\n    <div class=\"flex items-center pr-2 space-x-2\">\r\n      <!-- Navigation toggle button -->\r\n      <button mat-icon-button (click)=\"toggleNavigation('mainNavigation')\">\r\n        <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\r\n      </button>\r\n      <!-- Navigation appearance toggle button -->\r\n      <button\r\n        class=\"hidden md:inline-flex\"\r\n        mat-icon-button\r\n        (click)=\"toggleNavigationAppearance()\"\r\n      >\r\n        <mat-icon [svgIcon]=\"'heroicons_outline:switch-horizontal'\"></mat-icon>\r\n      </button>\r\n    </div>\r\n    <!-- Components -->\r\n    <div class=\"flex items-center pl-2 ml-auto space-x-0.5 sm:space-x-2\">\r\n      <fuse-fullscreen class=\"hidden md:block\"></fuse-fullscreen>\r\n      <!-- <search [appearance]=\"'bar'\"></search>\r\n            <shortcuts></shortcuts>\r\n            <notifications></notifications> -->\r\n      <user></user>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content -->\r\n  <div class=\"flex flex-col flex-auto\">\r\n    <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\r\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\r\n    <router-outlet *ngIf=\"true\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport {\r\n  FuseNavigationItem,\r\n  FuseNavigationService,\r\n  FuseVerticalNavigationComponent,\r\n} from '@fuse/components/navigation';\r\nimport { NavigationService } from 'app/core/navigation/navigation.service';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\nimport { environment as env } from \"environments/environment\";\r\n\r\n@Component({\r\n  selector: 'dense-layout',\r\n  templateUrl: './dense.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DenseLayoutComponent implements OnInit, OnDestroy {\r\n  isScreenSmall: boolean;\r\n  navigation: Navigation;\r\n  version = env.version;\r\n  navigationAppearance: 'default' | 'dense' = 'dense';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _router: Router,\r\n    private _navigationService: NavigationService,\r\n    private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n    private _fuseNavigationService: FuseNavigationService\r\n  ) {}\r\n\r\n  get currentYear(): number {\r\n    return new Date().getFullYear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Subscribe to navigation data\r\n    this._navigationService.navigation$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((navigation: Navigation) => {\r\n        this.navigation = navigation;\r\n      });\r\n\r\n    // Subscribe to media changes\r\n    this._fuseMediaWatcherService.onMediaChange$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(({ matchingAliases }) => {\r\n        // Check if the screen is small\r\n        this.isScreenSmall = !matchingAliases.includes('md');\r\n\r\n        // Change the navigation appearance\r\n        this.navigationAppearance = this.isScreenSmall ? 'default' : 'dense';\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next(null);\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  toggleNavigation(name: string): void {\r\n    // Get the navigation\r\n    const navigation =\r\n      this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>(\r\n        name\r\n      );\r\n\r\n    if (navigation) {\r\n      // Toggle the opened status\r\n      navigation.toggle();\r\n    }\r\n  }\r\n\r\n  toggleNavigationAppearance(): void {\r\n    this.navigationAppearance =\r\n      this.navigationAppearance === 'default' ? 'dense' : 'default';\r\n  }\r\n}\r\n","<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Empty layout -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<empty-layout *ngIf=\"layout === 'empty'\"></empty-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Layouts with horizontal navigation -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n\r\n\r\n<!-- Enterprise -->\r\n<enterprise-layout *ngIf=\"layout === 'enterprise'\"></enterprise-layout>\r\n\r\n<!-- Modern -->\r\n<modern-layout *ngIf=\"layout === 'modern'\"></modern-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Layouts with vertical navigation -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n\r\n<!-- Classic -->\r\n<classic-layout *ngIf=\"layout === 'classic'\"></classic-layout>\r\n\r\n<!-- Compact -->\r\n<compact-layout *ngIf=\"layout === 'compact'\"></compact-layout>\r\n\r\n<!-- Dense -->\r\n<dense-layout *ngIf=\"layout === 'dense'\"></dense-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Settings drawer - Remove this to remove the drawer and its button -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<settings></settings>\r\n","import { Component, Inject, OnDestroy, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\r\nimport { FuseConfigService } from '@fuse/services/config';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport { FusePlatformService } from '@fuse/services/platform';\r\nimport { FUSE_VERSION } from '@fuse/version';\r\nimport { Layout } from 'app/layout/layout.types';\r\nimport { AppConfig } from 'app/core/config/app.config';\r\nimport { ELocalStorage } from 'app/shared/models/localstorage.model';\r\n\r\n@Component({\r\n    selector     : 'layout',\r\n    templateUrl  : './layout.component.html',\r\n    styleUrls    : ['./layout.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LayoutComponent implements OnInit, OnDestroy\r\n{\r\n    config: AppConfig;\r\n    layout: Layout;\r\n    scheme: 'dark' | 'light';\r\n    theme: string;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _renderer2: Renderer2,\r\n        private _router: Router,\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n        private _fusePlatformService: FusePlatformService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the theme and scheme based on the configuration\r\n        combineLatest([\r\n            this._fuseConfigService.config$,\r\n            this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)'])\r\n        ]).pipe(\r\n            takeUntil(this._unsubscribeAll),\r\n            map(([config, mql]) => {\r\n\r\n                const options = {\r\n                    scheme: config.scheme,\r\n                    theme : config.theme\r\n                };\r\n\r\n                // If the scheme is set to 'auto'...\r\n                if ( config.scheme === 'auto' )\r\n                {\r\n                    // Decide the scheme using the media query\r\n                    options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\r\n                }\r\n\r\n                return options;\r\n            })\r\n        ).subscribe((options) => {\r\n\r\n            // Store the options\r\n            this.scheme = options.scheme;\r\n            this.theme = options.theme;\r\n\r\n            // Update the scheme and theme\r\n            this._updateScheme();\r\n            this._updateTheme();\r\n        });\r\n\r\n        // Subscribe to config changes\r\n        this._fuseConfigService.config$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((config: AppConfig) => {\r\n                localStorage.setItem(ELocalStorage.APP_CONFIG, JSON.stringify(config))\r\n                // Store the config\r\n                this.config = config;\r\n\r\n                // Update the layout\r\n                this._updateLayout();\r\n            });\r\n\r\n        // Subscribe to NavigationEnd event\r\n        this._router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd),\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Update the layout\r\n            this._updateLayout();\r\n        });\r\n\r\n        // Set the app version\r\n        this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\r\n\r\n        // Set the OS name\r\n        this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Update the selected layout\r\n     */\r\n    private _updateLayout(): void\r\n    {\r\n        // Get the current activated route\r\n        let route = this._activatedRoute;\r\n        while ( route.firstChild )\r\n        {\r\n            route = route.firstChild;\r\n        }\r\n\r\n        // 1. Set the layout from the config\r\n        this.layout = this.config.layout;\r\n\r\n        // 2. Get the query parameter from the current route and\r\n        // set the layout and save the layout to the config\r\n        const layoutFromQueryParam = (route.snapshot.queryParamMap.get('layout') as Layout);\r\n        if ( layoutFromQueryParam )\r\n        {\r\n            this.layout = layoutFromQueryParam;\r\n            if ( this.config )\r\n            {\r\n                this.config.layout = layoutFromQueryParam;\r\n            }\r\n        }\r\n\r\n        // 3. Iterate through the paths and change the layout as we find\r\n        // a config for it.\r\n        //\r\n        // The reason we do this is that there might be empty grouping\r\n        // paths or componentless routes along the path. Because of that,\r\n        // we cannot just assume that the layout configuration will be\r\n        // in the last path's config or in the first path's config.\r\n        //\r\n        // So, we get all the paths that matched starting from root all\r\n        // the way to the current activated route, walk through them one\r\n        // by one and change the layout as we find the layout config. This\r\n        // way, layout configuration can live anywhere within the path and\r\n        // we won't miss it.\r\n        //\r\n        // Also, this will allow overriding the layout in any time so we\r\n        // can have different layouts for different routes.\r\n        const paths = route.pathFromRoot;\r\n        paths.forEach((path) => {\r\n\r\n            // Check if there is a 'layout' data\r\n            if ( path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout )\r\n            {\r\n                // Set the layout\r\n                this.layout = path.routeConfig.data.layout;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the selected scheme\r\n     *\r\n     * @private\r\n     */\r\n    private _updateScheme(): void\r\n    {\r\n        // Remove class names for all schemes\r\n        this._document.body.classList.remove('light', 'dark');\r\n\r\n        // Add class name for the currently selected scheme\r\n        this._document.body.classList.add(this.scheme);\r\n    }\r\n\r\n    /**\r\n     * Update the selected theme\r\n     *\r\n     * @private\r\n     */\r\n    private _updateTheme(): void\r\n    {\r\n        // Find the class name for the previously selected theme and remove it\r\n        this._document.body.classList.forEach((className: string) => {\r\n            if ( className.startsWith('theme-') )\r\n            {\r\n                this._document.body.classList.remove(className, className.split('-')[1]);\r\n            }\r\n        });\r\n\r\n        // Add class name for the currently selected theme\r\n        this._document.body.classList.add(this.theme);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { UserService } from 'app/core/user/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InitialDataResolver implements Resolve<any> {\r\n  constructor(\r\n    private _userService: UserService\r\n  ) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n    // Fork join multiple API endpoint calls to wait all of them to finish\r\n    return forkJoin([\r\n      this._userService.get(),\r\n    ]);\r\n  }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { AuthGuard } from 'app/core/auth/guards/auth.guard';\r\nimport { NoAuthGuard } from 'app/core/auth/guards/noAuth.guard';\r\nimport { LayoutComponent } from 'app/layout/layout.component';\r\nimport { InitialDataResolver } from 'app/app.resolvers';\r\n\r\nexport const appRoutes: Route[] = [\r\n  // Redirect empty path to '/example'\r\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\r\n\r\n  // Redirect signed in user to the '/example'\r\n  //\r\n  // After the user signs in, the sign in page will redirect the user to the 'signed-in-redirect'\r\n  // path. Below is another redirection for that path to redirect the user to the desired\r\n  // location. This is a small convenience to keep all main routes together here on this file.\r\n  { path: 'signed-in-redirect', pathMatch: 'full', redirectTo: 'home' },\r\n\r\n  // Auth routes for guests\r\n  {\r\n    path: '',\r\n    canActivate: [NoAuthGuard],\r\n    canActivateChild: [NoAuthGuard],\r\n    component: LayoutComponent,\r\n    data: {\r\n      layout: 'empty',\r\n    },\r\n    children: [\r\n      {\r\n        path: 'sign-in',\r\n        loadChildren: () =>\r\n          import('app/modules/auth/sign-in/sign-in.module').then(\r\n            (m) => m.AuthSignInModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n\r\n  // Auth routes for authenticated users\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    component: LayoutComponent,\r\n    data: {\r\n      layout: 'empty',\r\n    },\r\n    children: [\r\n      {\r\n        path: 'sign-out',\r\n        loadChildren: () =>\r\n          import('app/modules/auth/sign-out/sign-out.module').then(\r\n            (m) => m.AuthSignOutModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'unlock-session',\r\n        loadChildren: () =>\r\n          import('app/modules/auth/unlock-session/unlock-session.module').then(\r\n            (m) => m.AuthUnlockSessionModule\r\n          ),\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'home',\r\n        loadChildren: () =>\r\n          import('app/modules/home/home.module').then((m) => m.HomeModule),\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'perfil',\r\n        loadChildren: () =>\r\n          import('app/modules/perfil/perfil.module').then((m) => m.PerfilModule),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'permissao',\r\n        loadChildren: () =>\r\n          import('app/modules/permissao/permissao.module').then((m) => m.PermissaoModule),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'usuario',\r\n        loadChildren: () =>\r\n          import('app/modules/usuario/usuario.module').then((m) => m.UsuarioModule),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'perfil-permissao',\r\n        loadChildren: () =>\r\n          import('app/modules/perfil-permissao/perfil-permissao.module').then((m) => m.PerfilPermissaoModule),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: 'log',\r\n        loadChildren: () =>\r\n          import('app/modules/log/log.module').then((m) => m.LogModule),\r\n      },\r\n    ],\r\n  },\r\n\r\n\r\n  // Admin routes\r\n  {\r\n    path: 'admin',\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    component: LayoutComponent,\r\n    data: {\r\n      layout: 'enterprise',\r\n    },\r\n    resolve: {\r\n      initialData: InitialDataResolver,\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('app/modules/admin/admin.module').then((m) => m.AdminModule),\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ExtraOptions, PreloadAllModules, RouterModule } from '@angular/router';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { FuseModule } from '@fuse';\r\nimport { FuseConfigModule } from '@fuse/services/config';\r\nimport { CoreModule } from 'app/core/core.module';\r\nimport { appConfig } from 'app/core/config/app.config';\r\nimport { LayoutModule } from 'app/layout/layout.module';\r\nimport { AppComponent } from 'app/app.component';\r\nimport { appRoutes } from 'app/app.routing';\r\nimport { ELocalStorage } from './shared/models/localstorage.model';\r\n\r\nconst routerConfig: ExtraOptions = {\r\n  preloadingStrategy: PreloadAllModules,\r\n  scrollPositionRestoration: 'enabled',\r\n};\r\n\r\nconst configLocalStorage = JSON.parse(localStorage.getItem(ELocalStorage.APP_CONFIG))\r\nconst CONFIG_LOCAL = configLocalStorage ?? appConfig;\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(appRoutes, routerConfig),\r\n\r\n    // Fuse, FuseConfig & FuseMockAPI\r\n    FuseModule,\r\n    FuseConfigModule.forRoot(CONFIG_LOCAL),\r\n\r\n    // Core module of your application\r\n    CoreModule,\r\n\r\n    // Layout module of your application\r\n    LayoutModule,\r\n\r\n    // 3rd party modules that require global configuration via forRoot\r\n    MarkdownModule.forRoot({}),\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Layout } from 'app/layout/layout.types';\r\n\r\n// Types\r\nexport type Scheme = 'auto' | 'dark' | 'light';\r\nexport type Screens = { [key: string]: string };\r\nexport type Theme = 'theme-default' | string;\r\nexport type Themes = { id: string; name: string }[];\r\n\r\n/**\r\n * AppConfig interface. Update this interface to strictly type your config\r\n * object.\r\n */\r\nexport interface AppConfig\r\n{\r\n    layout: Layout;\r\n    scheme: Scheme;\r\n    screens: Screens;\r\n    theme: Theme;\r\n    themes: Themes;\r\n}\r\n\r\n/**\r\n * Default configuration for the entire application. This object is used by\r\n * FuseConfigService to set the default configuration.\r\n *\r\n * If you need to store global configuration for your app, you can use this\r\n * object to set the defaults. To access, update and reset the config, use\r\n * FuseConfigService and its methods.\r\n *\r\n * \"Screens\" are carried over to the BreakpointObserver for accessing them within\r\n * components, and they are required.\r\n *\r\n * \"Themes\" are required for Tailwind to generate themes.\r\n */\r\nexport const appConfig: AppConfig = {\r\n    layout : 'classic',\r\n    scheme : 'light',\r\n    screens: {\r\n        sm: '600px',\r\n        md: '960px',\r\n        lg: '1280px',\r\n        xl: '1440px'\r\n    },\r\n    theme  : 'theme-default',\r\n    themes : [\r\n        {\r\n            id  : 'theme-default',\r\n            name: 'Default'\r\n        },\r\n        {\r\n            id  : 'theme-brand',\r\n            name: 'Brand'\r\n        },\r\n        {\r\n            id  : 'theme-teal',\r\n            name: 'Teal'\r\n        },\r\n        {\r\n            id  : 'theme-rose',\r\n            name: 'Rose'\r\n        },\r\n        {\r\n            id  : 'theme-purple',\r\n            name: 'Purple'\r\n        },\r\n        {\r\n            id  : 'theme-amber',\r\n            name: 'Amber'\r\n        }\r\n    ]\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { environment } from 'environments/environment';\r\nimport { AppModule } from 'app/app.module';\r\n\r\nif ( environment.production )\r\n{\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n                        .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 7928,\n\t\"./hy-am.js\": 7928,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 5773,\n\t\"./ro.js\": 5773,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 1356,\n\t\"./ta.js\": 1356,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"x_google_ignoreList":[120]}